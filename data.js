// Generated by CoffeeScript 1.11.1
var data;

data = {
  Nyheter: {
    Nyheter: {
      b: "# NYHETER 2017 MAR\n#   L6: Two Arcs\n#   L7: Roulette\n#   L8: boardGame, sevenSegment, OlympicRing\n#   L9: Connect4, RushHour, girlang, braid, OlympicRings,, chessGame\n#   L10: alphanumeric, GoldenStar, spaceShip\n\n# Klicka nu på L1!\n\n# Eller besök Utställningen.\n# Dessa bilder är framtagna av deltagare på p5Dojo.\n# Vill du också visa upp ditt alster? Ge i så fall koden till din mentor.",
      a: ""
    },
    clown: {
      b: "# LOC:30 bg circle fc sc sw line lerp (David Larsson)\n",
      a: "bg 0, 1, 0, 0.5\nfc 1, 0, 0\ncircle 10, 10, 5\ncircle 20, 20, 10\nfor i in range 10\n	x = lerp 10, 20, i\n	y = x\n	r = lerp 5, 10, i\n	circle x, y, r\nfc 0, 1, 1\ncircle 190, 10, 5\ncircle 180, 20, 10\nfor i in range 10\n	x = lerp 190, 180, i\n	y = lerp 10, 20, i\n	r = lerp 5, 10, i\n	circle x, y, r\nfc 1\ncircle 100, 100, 50\nfc 0\ncircle 80, 80, 10\ncircle 120, 80, 10\nsc 1, 1, 0\nsw 5\nline 70, 105, 80, 120\nline 80, 120, 115, 120\nline 115, 120, 130, 105\nfc 1, 0, 0\nsc 1, 0, 0\ncircle 100, 100, 10"
    },
    tomteluva: {
      b: "# LOC:12 circle fc sc triangle (Sabrina Larsson)\n",
      a: "bg 0,1,0\nfc 1,0,0\nsc 1,0,0\ntriangle 60,140,100,60,140,140\nfc 1\nsc 1\ncircle 60,140,10\ncircle 80,140,10\ncircle 100,140,10\ncircle 120,140,10\ncircle 140,140,10\ncircle 100,60,10		"
    },
    snowman: {
      b: "# LOC:21 circle fc line sc triangle (David Larsson)\n",
      a: "fc 1\ncircle 100, 150, 50\ncircle 100, 70, 40\nfc 0\ncircle 80, 60, 8\ncircle 120, 60, 8\ncircle 85, 90, 6\ncircle 95, 95, 6\ncircle 115, 90, 6\ncircle 105, 95, 6\nfc 1, 0, 0, 0.5\ntriangle 100, 65, 90, 80, 105, 75\nsc 1, 1, 0\nsw 3\nline 50, 140, 30, 90\nline 35, 100, 40, 80\nline 140, 140, 170, 90\nline 160, 105, 155, 100\nfc 1\nsc 1\nrect 2, 180, 196, 20"
    },
    christmasTree: {
      b: "# LOC:35 bg circle fc line rect quad sc triangle (Sabrina Larsson)\n",
      a: "bg 0 \nfc 0, 1, 0 \nsc 0, 1, 0 \ntriangle 100, 100, 180, 160, 20, 160 \ntriangle 100, 60, 160, 120, 40, 120 \ntriangle 100, 40, 140, 80, 60, 80 \nfc 0.5 \nsc 0.5 \nrect 80, 160, 40, 20 \nfc 1, 1, 0 \nsc 1, 1, 0 \nquad 100, 0, 120, 20, 100, 40, 80, 20 \nrect 85, 5, 30, 30 \nsc 1, 1, 0 \nline 80, 60, 140, 120 \nline 60, 100, 120, 160 \nfc 1, 0, 0 \nsc 1, 0, 0 \ncircle 80, 100, 5 \ncircle 140, 140, 5 \ncircle 100, 60, 5 \ncircle 60, 160, 5 \ncircle 100, 120, 5 \nfc 1 \nsc 1 \nrect 0, 180, 200, 20 \ncircle 20, 20, 5 \ncircle 40, 40, 5 \ncircle 10, 80, 5 \ncircle 30, 140, 5 \ncircle 50, 100, 5 \ncircle 120, 50, 5 \ncircle 160, 20, 5 \ncircle 180, 80, 5 \ncircle 160, 130, 5 \ncircle 190, 180, 5 "
    },
    santa: {
      b: "# LOC:18 bg circle ellipse fc rect quad sc triangle (Sabrina Larsson)\n",
      a: "bg 0,0,1\nfc 1,0,0\nsc 1,0,0\nellipse 100,50,60,70\nrect 60,20,30,10\nquad 140,10,145,20,120,25,115,20\nfc 0\nsc 0\ncircle 50,25,10\nrect 70,40,60,10\ncircle 140,20,10\nsc 1,1,0\nrect 100,45,5,5\nfc 0.5\nsc 0.5\nrect 60,80,80,20\nrect 80,100,40,60\ntriangle 100,140,0,200,200,200"
    },
    dist: {
      b: "# LOC:10 bg circle dist fc lerp map sc\n",
      a: "bg 0\nfc 1\nsc()\nfor i in range 10\n	x = lerp 10,30,i\n	for j in range 10\n		y = lerp 10,30,j\n		d = dist 100,100,x,y\n		r = map(d,0,150,1,20)/2\n		circle x,y,r"
    },
    bulge: {
      b: "# LOC:10 bg circle dist fill map noStroke sin\n",
      a: "bg 0\nfill 255\nnoStroke()\nfor i in range 20\n	for j in range 20\n		x = i*200/20+5\n		y = j*200/20+5\n		r = map(sin(i*PI/20),-1,1,1,3) * map(sin(j*PI/20),-1,1,1,3) / 2\n		circle x,y,r"
    },
    wave: {
      b: "# LOC:9 circle colorMode fill map noStroke sin PI\n",
      a: "colorMode HSB,360,100,100\nnoStroke()\nbg 0\nfor i in range 21\n	fill map(i,0,20,0,360),100,100\n	a = map i,0,20,0,2*PI\n	x = 10*i\n	y = map sin(a),-1,1,0,200\n	circle x,y,3"
    },
    circle: {
      b: "# LOC:10 bg circle colorMode cos fc map PI sc sin\n",
      a: "bg 0\ncolorMode HSB,360,100,100\nfor i in range 20\n	r=map i,0,19,0,360\n	fill r,255,255\n	a=map i,0,20,0,2*PI\n	sc()\n	x=map cos(a),-1,1,0,200\n	y=map sin(a),-1,1,0,200\n	circle x,y,3"
    },
    circles: {
      b: "# LOC:12 bg circle colorMode cos fill map noStroke translate sin PI\n",
      a: "bg 0\nnoStroke()\ncolorMode HSB,360,100,100\ntranslate 100,100\nfor i in range 20\n	for j in range 11\n		fill map(i,0,20,0,360),255,255\n		a = map i,0,20,0,2*PI\n		x = map cos(a),-1,1,-j*10,j*10\n		y = map sin(a),-1,1,-j*10,j*10\n		r = 3\n		circle x,y,r"
    },
    sized_circles: {
      b: "# LOC:12 circle colorMode cos fill map noStroke PI sin translate\n",
      a: "bg 0\nnoStroke()\ncolorMode HSB,360,100,100\ntranslate 100,100\nfor i in range 20\n	fill map(i,0,20,0,360),255,255\n	a = map i,0,20,0,2*PI\n	for j in range 11\n		x = map cos(a),-1,1,-j*10,j*10\n		y = map sin(a),-1,1,-j*10,j*10\n		r = map(j,0,10,0,10)/2\n		circle x,y,r"
    },
    rotated_circles: {
      b: "# LOC:17 circle cos map PI push pop rotate sin translate\n",
      a: "colorMode HSB,360,100,100\nsc()\nbg 0\ntranslate 100,100\nfor i in range 20\n	r = map i,0,20,0,360\n	a=map i,0,20,0,2*PI\n	for j in range 11\n		push()\n		rotate map j,0,10,0,360\n		fill r,255,255\n		x=map cos(a),-1,1,-j*10,j*10\n		y=map sin(a),-1,1,-j*10,j*10\n		circle x,y,j/2\n		pop()"
    },
    gravity: {
      b: "# LOC:6 circle lerp\n",
      a: "fc 1\nfor i in range 15\n	x=5+10*i\n	y=5+lerp(0,lerp(0,1,i),i)\n	circle x,y,5"
    },
    hypnoticA: {
      b: "# LOC:6 -> bg circle cos fc sc sin\n\nhypnoticA = () ->",
      a: "hypnoticA = () ->\n	bg 0.5, 0, 0\n	sc()\n	fc 1\n	for i in range 100\n		x = 100 + cos(i) * i\n		y = 100 + sin(i) * i\n		circle x, y, 5",
      c: {
        "hypnoticA()": 0
      }
    },
    hypnoticB: {
      b: "# LOC:7 -> bg circle cos fc map sc sin\n\nhypnoticB = (t) ->",
      a: "hypnoticB = (t) ->\n	bg 0.5, 0, 0\n	sc()\n	fc 1\n	for i in range 100\n		x = 100 + cos(i) * i\n		y = 100 + sin(i) * i\n		speed = i/10.0\n		r = map sin(t*speed), -1, 1, 2, 5\n		circle x, y, r",
      c: {
        "hypnoticB 1": 0,
        "hypnoticB 5": 0
      }
    }
  },
  "L1: bg point sc sw": {
    Background1: {
      b: "# Den översta bitmappen till höger visar resultatet av din kod.\n# Den mellersta bitmappen ska du efterlikna.\n# Den understa bitmappen visar skillnaden mellan de två andra.\n\n# Tryck på PgDn för att komma till sista raden.\n# Skriv in följande kommando: bg 1\n# Kontrollera att de båda övre bitmapparna nu är lika.\n\n# Klicka på Background2 för att komma till nästa övning.\n# Klicka på Help nere till vänster för mera information.\n# Klicka på Reference för att se fler kommandon.\n",
      a: "bg 1"
    },
    Background2: {
      b: "# LOC:1 bg\n",
      a: "bg 0.5"
    },
    Background3: {
      b: "# LOC:1 bg\n",
      a: "bg 1,0,0"
    },
    Background4: {
      b: "# LOC:1 bg\n",
      a: "bg 1,1,0"
    },
    CornerPoints: {
      b: "# LOC:9 sc sw point\n\nsw 5\nsc 1,0,0\npoint 0,0\n",
      a: "sw 5\nsc 1,0,0\npoint 0,0\nsc 0,1,0\npoint 200,0\nsc 1,1,0\npoint 0,200\nsc 0\npoint 200,200"
    },
    MidPoints: {
      b: "# LOC:11 sc sw point\n",
      a: "sw 5\nsc 1,0,0\npoint 100,100\nsc 0,1,0\npoint 100,0\nsc 1,1,0\npoint 0,100\nsc 0\npoint 200,100\nsc 1\npoint 100,200"
    },
    CornerPoints3: {
      b: "# LOC:17 sc sw point\n",
      a: "sw 5\nsc 1,0,0\npoint 20,0\npoint 20,20\npoint 0,20\n\nsc 0,1,0\npoint 180,0\npoint 180,20\npoint 200,20\n\nsc 1,1,0\npoint 20,180\npoint 20,200\npoint 0,180\n\nsc 1\npoint 180,180\npoint 180,200\npoint 200,180"
    },
    CornerPoints7: {
      b: "# LOC:17 sc sw point\n",
      a: "sw 5\nsc 1,0,0\npoint 30,0\npoint 30,10\npoint 30,20\npoint 30,30\npoint 10,30\npoint 20,30\npoint 0,30\n\nsc 0,1,0\npoint 170,200\npoint 170,190\npoint 170,180\npoint 170,170\npoint 190,170\npoint 180,170\npoint 200,170"
    },
    Diagonal: {
      b: "# LOC:23 sc sw point\n",
      a: "sc 1,0,0\nsw 11\npoint 200,0\nsw 10\npoint 180,20\nsw 9\npoint 160,40\nsw 8\npoint 140,60\nsw 7\npoint 120,80\nsw 6\npoint 100,100\nsw 5\npoint 80,120\nsw 4\npoint 60,140\nsw 3\npoint 40,160\nsw 2\npoint 20,180\nsw 1\npoint 0,200"
    }
  },
  "L2: circle fc text": {
    dices: {
      b: "# LOC:26 point sc\n",
      a: "point 10,10\n\nsc 1,0,0 \npoint 185,5 \npoint 195,15 \n\nsc 0,1,0 \npoint 85,65 \npoint 90,70 \npoint 95,75 \n\nsc 1,1,0 \npoint 165,105 \npoint 165,115 \npoint 175,105 \npoint 175,115 \n\nsc 1,0,1 \npoint 45,125 \npoint 45,135 \npoint 50,130 \npoint 55,125 \npoint 55,135 \n\nsc 0,1,1 \npoint 105,165 \npoint 105,170 \npoint 105,175 \npoint 115,165 \npoint 115,170 \npoint 115,175 "
    },
    Five: {
      b: "# LOC:12 bg circle fc sc\n",
      a: "bg 0.5\nsc()\nfc 1\ncircle 100,100,20\nfc 1,0,0\ncircle 40,40,20\nfc 1,1,0\ncircle 40,160,20\nfc 0,1,0\ncircle 160,160,20\nfc 0,0,1\ncircle 160,40,20"
    },
    whiteCircle: {
      b: "# LOC:2 circle fc\n",
      a: "fc 1\ncircle 60,80,30"
    },
    whiteEmptyCircle: {
      b: "# LOC:4 circle fc sc sw\n",
      a: "sc 1\nfc()\nsw 2\ncircle 70,90,40"
    },
    twoDiscsA: {
      b: "# LOC:4 circle fc\n",
      a: "fc 1,0,0 \ncircle 80,100,40\nfc 0,1,0\ncircle 100,120,50"
    },
    twoDiscsB: {
      b: "# LOC:4 circle fc\n",
      a: "fc 1,0,0\ncircle 80,100,40\nfc 0,1,0, 0.5\ncircle 120,100,50"
    },
    textA: {
      b: "# LOC:3 fc textSize text\n",
      a: "fc 1,1,0\ntextSize 32\ntext 'Coffeescript',100,100"
    },
    textB: {
      b: "# LOC:4 fc text textAlign textSize\n",
      a: "fc 1,1,0\ntextSize 32\ntextAlign CENTER,CENTER\ntext 'Coffeescript',100,100"
    }
  },
  "L3: ellipse rect": {
    greenEllipse: {
      b: "# LOC:2 fc ellipse\n",
      a: "fc 0,1,0\nellipse 120,60, 60,40"
    },
    greenRect: {
      b: "# LOC:2 fc rect\n",
      a: "fc 0,1,0\nrect 60,80, 40,50"
    },
    redRect: {
      b: "# LOC:2 fc rect\n",
      a: "fc 1,0,0\nrect 80,70, 40,100"
    },
    cross: {
      b: "# LOC:4 fc rect\n",
      a: "fc 1,0,0\nsc()\nrect 85,70, 70,10\nrect 115,40, 10,100"
    },
    squareHole: {
      b: "# LOC:11 fc sc sw rect\n",
      a: "fc 0,1,1\nsc()\nrect 60,60, 80,20\nrect 60,120, 80,20\nrect 60,60, 20,80\nrect 120,60, 20,80\nfc()\nsc 1,0,0\nsw 3\nrect 60,60, 80,80\nrect 80,80, 40,40"
    }
  },
  "L4: for lerp rect": {
    "horizontal squares": {
      b: "# LOC:3 rect for in range lerp \n\nrect  5,5,10,10\nrect 25,5,10,10\nfor i in range 5\n	x = lerp 5,25,i \n	rect",
      a: "for i in range 10\n	x = 5+20*i\n	rect x,5, 10,10"
    },
    "vertical squares": {
      b: "# LOC:3 rect for in range lerp\n",
      a: "for i in range 10\n	y = 5+20*i\n	rect 5,y, 10,10"
    },
    "diagonal squares": {
      b: "# LOC:4 rect for in range lerp\n",
      a: "for i in range 10\n	x = 5+20*i\n	y = 5+20*i\n	rect x,y, 10,10"
    },
    "double for loop": {
      b: "# LOC:5 rect for in range lerp\n",
      a: "for i in range 10\n	for j in range 10\n		x = 5+20*i\n		y = 5+20*j\n		rect x,y, 10,10"
    },
    "growing squares": {
      b: "# LOC:7 rect rectMode for in range lerp\n",
      a: "rectMode CENTER\nfor i in range 10\n	x = 10+20*i\n	y = 10\n	w = 2*i\n	h = 2*i\n	rect x,y, w,h"
    },
    "growings red squares": {
      b: "# LOC:8 fc for in range lerp rect rectMode\n",
      a: "rectMode CENTER\nfor i in range 10\n	fc i/10.0,0,0\n	x = 10+20*i\n	y = 10\n	w = 2*i\n	h = 2*i\n	rect x,y,w,h"
    },
    "growing circles": {
      b: "# LOC:6 for in range fc circle lerp\n",
      a: "for i in range 10\n	fc i/10.0,0,0\n	x = 10+20*i\n	y = 10\n	r = i\n	circle x,y,r"
    },
    "shrinking circles": {
      b: "# LOC:4 for in range fc circle lerp\n",
      a: "for i in range 10,0,-1\n	fc i/10.0,0,0\n	r = 10 * i\n	circle 100,100, r"
    },
    "red cone": {
      b: "# LOC:6 for in range fc circle lerp\n",
      a: "for i in range 10,0,-1\n	fc i/10.0,0,0\n	x = 10*i\n	y = 10*i\n	r = 10*i\n	circle x,y,r"
    },
    "penta lerp": {
      b: "# LOC:7 for in range fc circle lerp\n",
      a: "for i in range 10\n	for j in range 10\n		fc i/10.0,j/10.0,0\n		x = 10+20*i\n		y = 10+20*j\n		r = (i+j)/2\n		circle x,y,r"
    }
  },
  "L5: line for lerp": {
    HorizontalLine: {
      b: "# LOC:2 sc line\n",
      a: "sc 1,0,1\nline 10,70, 190,70"
    },
    VerticalLine: {
      b: "# LOC:3 sc sw line\n",
      a: "sc 1,1,0\nsw 10\nline 110,30, 110,170"
    },
    Line: {
      b: "# LOC:2 sc line\n",
      a: "sc 1,1,0\nline 20,0, 200,20"
    },
    Grid: {
      b: "# LOC:5 sc sw for in range line \n",
      a: "sc 1,1,0\nsw 2\nfor i in range 10,200,10\n	line 10,i,190,i\n	line i,190,i,10"
    },
    Skislope: {
      b: "# LOC:4 bg sc for in range lerp line",
      a: "bg 0\nsc 1,0,0\nfor i in range 21\n	line i*10,0,200,i*10"
    },
    Sunshine: {
      b: "# LOC:5 bg sc for in range lerp line\n",
      a: "bg 0\nsc 1,1,0\nfor i in range 10\n	line i*20,0,200-i*20,200\n	line 0,20+i*20,200,180-i*20"
    },
    Lines: {
      b: "# LOC:5 bg for in range lerp line (Noel Watson)\n",
      a: "bg 0\nfor i in range 37\n	line 10,10,190,10+i*5\n	line 10,100,190,10+i*5\n	line 10,190,190,10+i*5"
    },
    chessRow: {
      b: "# LOC:5 % bg fc for in range lerp rect\n",
      a: "bg 0.5\nfor i in range 8\n	fc i%2\n	x = 20+20*i \n	rect x,20, 20,20"
    },
    chessBoard: {
      b: "# LOC:7 bg fc for in range lerp rect\n",
      a: "bg 0.5\nfor i in range 8\n	for j in range 8\n		fc (i+j)%2\n		x = 20+20*i\n		y = 20+20*j\n		rect x,y, 20,20"
    },
    chessCross: {
      b: "# LOC:8 for in range lerp rect if then fc (David Larsson)\n",
      a: "for i in range 10\n	for j in range 10\n		fc()\n		if i-j in [-2,0,2] then fc 1,1,0\n		if i+j in [7,9,11] then fc 1,0,0\n		x = 20*i\n		y = 20*j\n		rect x,y, 20,20"
    }
  },
  "L6: triangle quad arc": {
    Triangle: {
      b: "# LOC:2 fc triangle\n",
      a: "fc 1\ntriangle 20,40, 160,100, 100,140"
    },
    Quad: {
      b: "# LOC:2 fc quad\n",
      a: "fc 1,1,0\nquad 150,100, 180,20, 40,20, 100,140"
    },
    PacMan: {
      b: "# LOC:2 arc fc radians PIE\n",
      a: "fc 1,1,0\narc 100,100, 80,80, radians(-135),radians(135), PIE"
    },
    "Two Arcs": {
      b: "# LOC:7 fc sc sw arc radians strokeCap",
      a: "fc()\nsc 1,0,0\nsw 20\narc 100,70, 100,100, radians(-90),radians(90)\nsc 1,1,0\nstrokeCap SQUARE\narc 100,120, 100,100, radians(90),radians(-90)"
    }
  },
  "L7: translate rotate push pop": {
    textC: {
      b: "# LOC:6 fc text textAlign textSize translate rd\n",
      a: "fc 1,1,0\ntextSize 32\ntextAlign CENTER,CENTER\ntranslate 100,100\nrd 90\ntext 'Coffeescript',0,0"
    },
    textD: {
      b: "# LOC:6 fc text textAlign textSize translate rd\n",
      a: "fc 1,1,0\ntextSize 32\ntextAlign CENTER,CENTER\ntranslate 100,100\nrd 180\ntext 'Coffeescript',0,0"
    },
    rotatedEllipse: {
      b: "# LOC:5 ellipse translate rd\n",
      a: "fc 1,0,0\nsc()\ntranslate 100,100\nrd 45\nellipse 0,0, 80,40"
    },
    rotatedRectA: {
      b: "# LOC:4 fc rect\n",
      a: "fc 1,0,0\nrect 60,100, 40,40\nfc 0,1,0\nrect 140,100, 40,40"
    },
    rotatedRectB: {
      b: "# LOC:12 fc rect translate rd push pop\n",
      a: "push()\nfc 1,0,0\ntranslate 60,100\nrd 45\nrect 0,0, 40,40\npop()\npush()\nfc 0,1,0\ntranslate 140,100\nrd 45\nrect 0,0, 40,40\npop()"
    },
    rotatedRectC: {
      b: "# LOC:13 fc rect translate rd push pop\n",
      a: "rectMode CENTER\npush()\nfc 1,0,0\ntranslate 80,120\nrd 45\nrect 0,0, 40,40\npop()\npush()\nfc 0,1,0\ntranslate 160,120\nrd 45\nrect 0,0, 40,40\npop()"
    },
    cards: {
      b: "# LOC:10 fc sc circle rect rectMode for in range lerp translate rd\n",
      a: "rectMode CENTER\nsc 1\ntranslate 100,100\nfor i in range 18,-1,-1\n  r = 1.0*i/18\n  fc r,0,0\n  w = 70+5*i\n  h = 70+5*i\n  rect 0,0, w,h\n  rd 5"
    },
    "hepta lerp": {
      b: "# LOC:17 bg fc sc rect rectMode for in range lerp translate rd push pop",
      a: "bg 1\nrectMode CENTER\nsc()\nfor i in range 10\n  for j in range 10\n    push()\n		x = lerp 10,30,i\n		y = lerp 10,30,j\n    translate x,y\n    rd lerp 0,10,i-j\n    r = lerp 0.1,0.2,i\n    g = lerp 0.1,0.2,j\n    fc r,g,0\n		w = lerp 5,6,i\n		h = lerp 5,6,j\n    rect 0,0, w,h\n    pop()"
    },
    Roulette: {
      b: "# LOC:20 bg sw fc sc for in range if then else == % / [] \"\" text textAlign arc strokeCap translate rotate rd TWO_PI push pop \n\nnumbers = [0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26]",
      a: "numbers = [0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26]\nbg 0.5\ntranslate 100,100\nrd -90\nd = PI/numbers.length\nsw 20\nstrokeCap SQUARE\ntextAlign CENTER,CENTER\nfor i in range numbers.length\n	push()\n	fc()\n	if i==0 then sc 0,1,0 else sc i%2,0,0\n	arc 0,0,180,180,-d,d\n	translate 90,0\n	rd 90\n	sc()\n	fc 1\n	text numbers[i],0,0\n	pop()\n	rotate TWO_PI / numbers.length"
    }
  },
  "L8: function": {
    square: {
      b: "# LOC:5 -> bg sw fc rect ->\n\nsquare = (x,y,size,w=1, r=0.5,g=0.5,b=0.5) ->",
      a: "square = (x,y,size,w=1,r=0.5,g=0.5,b=0.5) ->\n	bg 0\n	sw w\n	fc r,g,b\n	rect x,y,size,size",
      c: {
        "square 100,100,50": 0,
        "square 10,10,20": 0,
        "square 50,70,40,2": 0,
        "square 30,150,30,3,1,0,0": 0
      }
    },
    boardGame: {
      b: "# LOC:10 bg fc sc circle for in range ->\n\nboard = (x,y,d,r,n) ->",
      a: "one = (d,r,x0,y0,m,n) ->\n	for i in range m\n		for j in range n\n			circle x0+d*i,y0+d*j,r\n\nboard = (x,y,d,r,n) ->\n	bg 1\n	fc 0\n	sc()\n	one d,r,x-n*d, y-d,2*n+1,3\n	one d,r,x-d, y-n*d,3,2*n+1",
      c: {
        "board 100,100,18, 7,5": 0,
        "board 100,100,25,10,3": 0,
        "board 100,100,35,15,2": 0,
        "board  50, 50, 9, 4,5": 0,
        "board  50,150,12, 5,3": 0,
        "board 150,150,18, 8,2": 0
      }
    },
    multimoire: {
      b: "# LOC:5 bg for line map ->\n\nmoire = (k) ->",
      a: "moire = (k) ->\n	background 0\n	for i in range k\n		for j in range 37\n			line 10,map(i,0,k-1,10,190),190,10+j*5",
      c: {
        "moire 2": 0,
        "moire 3": 0,
        "moire 4": 0,
        "moire 5": 0
      }
    },
    colorCube: {
      b: "# LOC:8 -> bg fc for in range rect ->\n\ncolorCube = (n,b) ->",
      a: "colorCube = (n,b) ->\n	bg 0\n	d = 200.0/n\n	m = n-1.0\n	for r in range n\n		for g in range n\n			fc r/m,g/m,b/m\n			rect r*d,g*d,d,d",
      c: {
        "colorCube 2,0": 0,
        "colorCube 2,1": 0,
        "colorCube 3,0": 0,
        "colorCube 3,1": 0,
        "colorCube 3,2": 0
      }
    },
    manyDices: {
      b: "# LOC:21 -> fc for in if then point [] % -> ==\n\nmanyDices = () ->",
      a: "dots = (x,y,dots) ->\n	for dot in dots\n		if dot==1 then point x+8,y+8\n		if dot==2 then point x+8,y+10\n		if dot==3 then point x+8,y+12\n		if dot==4 then point x+10,y+10\n		if dot==5 then point x+12,y+8\n		if dot==6 then point x+12,y+10\n		if dot==7 then point x+12,y+12\ndice = (x,y,d) ->\n	if d==1 then dots x,y,[4]\n	if d==2 then dots x,y,[1,7]\n	if d==3 then dots x,y,[1,4,7]\n	if d==4 then dots x,y,[1,3,5,7]\n	if d==5 then dots x,y,[1,3,4,5,7]\n	if d==6 then dots x,y,[1,2,3,5,6,7]\nmanyDices = () ->\n	fc 0\n	for i in range 10\n		for j in range 10\n			dice 20*i,20*j,1+(i+j)%6",
      c: {
        "manyDices()": 0
      }
    },
    sevenSegment: {
      b: "# LOC:22 bg sc fc rect rectMode if then & []\n\ndigit = (d,x=100,y=100,w=80,h=10) ->",
      a: "digit = (d,x=100,y=100,w=80,h=18) ->\n	bg 0.5\n	sc()\n	fc 1,0,0\n	rectMode CENTER\n	pattern = [63,6,91,79,102,109,125,7,127,111]\n	p = pattern[d]\n	w0 = w-20\n	if p & 1 then fc 1,0,0 else fc 0.3,0,0\n	rect x,y-w,w0,h \n	if p & 2 then fc 1,0,0 else fc 0.3,0,0\n	rect x+w/2,y-w/2,h,w0 \n	if p & 4 then fc 1,0,0 else fc 0.3,0,0\n	rect x+w/2,y+w/2,h,w0 \n	if p & 8 then fc 1,0,0 else fc 0.3,0,0\n	rect x,y+w,w0,h \n	if p & 16 then fc 1,0,0 else fc 0.3,0,0\n	rect x-w/2,y+w/2,h,w0\n	if p & 32 then fc 1,0,0 else fc 0.3,0,0\n	rect x-w/2,y-w/2,h,w0 \n	if p & 64 then fc 1,0,0 else fc 0.3,0,0\n	rect x,y,w0,h ",
      c: {
        "digit 0": 0,
        "digit 1": 0,
        "digit 2": 0,
        "digit 3": 0,
        "digit 4": 0,
        "digit 5": 0,
        "digit 6": 0,
        "digit 7": 0,
        "digit 8": 0,
        "digit 9": 0
      }
    },
    klocka: {
      b: "# LOC:25 -> fc sc point rect rectMode circle for in range if else translate rd push pop\n\nklocka = (h,m,s) ->",
      a: "visare = (v,w,l,r,g,b) ->\n	push()\n	rd v-90\n	translate l/2,0\n	fc r,g,b\n	rect 0,0,l,w\n	pop()\nklocka = (h,m,s) ->\n	rectMode CENTER\n	translate 100,100\n	urtavla()\n	visare (h+m/60.0)*30, 7,60,1,0,0\n	visare (m+s/60.0)*6,5,80,0,1,0\n	visare s*6,2,80,0,0,1\nurtavla = () ->\n	fc 0\n	sc 1\n	circle 0,0,90\n	fc 1\n	for i in range 60\n		if i%5==0\n			circle 85,0,2\n		else\n			point 85,0\n		rd 6",
      c: {
        "klocka 10,9,30": 0,
        "klocka 11,30,15": 0
      }
    },
    korg: {
      b: "# LOC:17 -> bg fc sc sw rect for if else ->\n\nkorg = (n,w,c1,c2) ->",
      a: "korg = (n,w,c1,c2) ->\n	bg 0\n	sw w\n	fill c1\n	stroke c2\n	q = 2*n+1\n	d = 200.0/q\n	for i in range n\n		rect d+i*2*d,0,d,200\n	for j in range n\n		rect 0,d+j*2*d,200,d\n	for i in range n\n		for j in range n\n			if (i+j) % 2 == 1\n				rect i*2*d,d+j*2*d,3*d,d\n			else\n				rect d+i*2*d,j*2*d,d,3*d",
      c: {
        "korg 1,5,co(1,0,0),co(1,1,0)": 0,
        "korg 2,4,co(0.5),co(1)": 0,
        "korg 3,3,co(1,1,0),co(1,0,0)": 0,
        "korg 4,2,co(1),co(0.5)": 0,
        "korg 5,1,co(1,0,0),co(1,1,0)": 0
      }
    },
    "OlympicRing Prep": {
      b: "# LOC:7 sc fc sw arc strokeCap\n\nring = (x,y,radius,w, r,g,b, start=3,stopp=3) ->",
      a: "ring = (x,y,radius,w, r,g,b, start=3,stopp=3) ->\n	hour = PI/6\n	strokeCap SQUARE\n	fc()\n	sw w\n	sc r,g,b\n	arc x,y,2*radius,2*radius,(start-3)*hour,(stopp-3)*hour",
      c: {
        "ring 100,100,60,20, 1,1,0": 0,
        "ring 100,100,80,10, 1,0,0, 3,6": 0,
        "ring 100,100,80,10, 0,1,0, 2,4": 0,
        "ring 100,100,80,10, 0,1,0, 4,2": 0
      }
    }
  },
  "L9: class": {
    Connect4: {
      b: "# LOC:23 % bg fc sc sw circle text textAlign textSize for in range push class constructor new @ \n\nclass Connect4\n	constructor : (moves,@size=27) -> \n	render : ->\n\nc1 = new Connect4 [0,1,2,0],20\nc2 = new Connect4 [3,3,3,3,3,3,3,0,1,2,4,5,6]\nc3 = new Connect4 [3,2,4,3,2,1,0,0,5,6,1,2,1,1,4,4,3,2,0,0,3,0]",
      a: "class Connect4\n	constructor : (moves,@size=27) ->\n		bg 0\n		textAlign CENTER,CENTER\n		textSize @size/2\n		@list = ([] for i in range 7)\n		for move,i in moves\n			@list[move].push i \n	render : ->\n		fc()\n		sc 0.1,0.3,1\n		sw 0.2 * @size\n		for i in range 7\n			for j in range 6\n				circle 100-@size*3+@size*i, 180-@size*j, @size/2\n		for column,i in @list\n			for nr,j in column\n				fc 1,nr%2,0\n				sw 1\n				circle 100-@size*3+@size*i, 180-@size*j, @size*0.4\n				fc 0\n				sc()\n				text nr, 100-@size*3+@size*i, 180-@size*j\n\nc1 = new Connect4 [0,1,2,0],20\nc2 = new Connect4 [3,3,3,3,3,3,0,1,2,4,5,6]\nc3 = new Connect4 [3,2,4,3,2,1,0,0,5,6,1,2,1,1,4,4,3,2,0,0,3,0]",
      c: {
        "c1.render()": 0,
        "c2.render()": 0,
        "c3.render()": 0
      }
    },
    RushHour: {
      b: "# LOC:40 bg sc fc rect text textAlign push class constructor new @\n#	       if then else for in range toLowerCase indexOf \n# https://en.wikipedia.org/wiki/Rush_Hour_(board_game)\n\nclass RushHour\n	constructor : ->\n	add : (pos,r,g,b) ->\n	move : (n) ->\n\nrushhour = new RushHour()\nrushhour.add \"d4e4\",1,0,0\nrushhour.add \"d1d2\",1,1,0\nrushhour.add \"e2f2\",0,1,0\nrushhour.add \"f4f6\",0,1,1\nrushhour.moves = \"aaBBBBcdddAAAAA\"\n",
      a: "textAlign CENTER,CENTER\ncol = (s) -> \"abcdef\".indexOf s\nrow = (s) -> \"123456\".indexOf s\n\nclass Car\n	constructor : (pos,@r,@g,@b) ->\n		@i = col pos[0] \n		@j = row pos[3]\n		@w = col(pos[2]) - @i + 1\n		@h = @j - row(pos[1]) + 1 \n	render : (i) -> \n		fc @r,@g,@b\n		rect 40+20*@i+2, 140-20*@j+2, 20*@w-4, 20*@h-4\n		fc 0\n		text \"ABCDEFGH\"[i], 50+20*@i, 150-20*@j\n	move : (positive) ->\n		if positive then d=1 else d=-1\n		if @w == 1 then @j += d\n		if @h == 1 then @i += d\n		\nclass RushHour\n	constructor : -> @cars=[]\n	add : (pos,r,g,b) -> @cars.push new Car pos,r,g,b\n	move : (n) ->\n		for i in range n\n			ch = @moves[i].toLowerCase()\n			car = @cars[\"abcdefgh\".indexOf(ch)]\n			car.move ch != @moves[i]\n		@render()			\n\n	render : ->\n		bg 0\n		sc()\n		fc 0.5,0.5,0.5\n		rect 40,40,120,120\n		rect 160,80,40,20\n		fc 1\n		sc()\n		for i in range 6\n			text \"654321\"[i],30,50+20*i\n			text \"abcdef\"[i],50+20*i,170\n		for car,i in @cars\n			car.render i\n			\nrushhour = new RushHour()\nrushhour.add \"d4e4\",1,0,0\nrushhour.add \"d1d2\",1,1,0\nrushhour.add \"e2f2\",0,1,0\nrushhour.add \"f4f6\",0,1,1\nrushhour.moves = \"aaBBBBcdddAAAAA\"",
      c: {
        "rushhour.move 0": 0,
        "rushhour.move 1": 0,
        "rushhour.move 2": 0,
        "rushhour.move 3": 0,
        "rushhour.move 4": 0,
        "rushhour.move 5": 0,
        "rushhour.move 6": 0,
        "rushhour.move 7": 0,
        "rushhour.move 8": 0,
        "rushhour.move 9": 0,
        "rushhour.move 10": 0,
        "rushhour.move 11": 0,
        "rushhour.move 12": 0,
        "rushhour.move 13": 0,
        "rushhour.move 14": 0,
        "rushhour.move 15": 0
      }
    },
    girlang: {
      b: "# LOC: 16 sc bg sw for in range line class constructor new @\n\nclass Cartesius\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n\ngirlang = (x,y,n,width,dx,dy) ->",
      a: "class Cartesius\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n		sc @r,@g,@b\n		line @x,@y,@x+dx,@y+dy\n		[@x,@y] = [@x+dx,@y+dy]\n\ngirlang = (x,y,n,width,dx,dy) ->\n	a = new Cartesius 1,0,0, x+dx/2,0\n	b = new Cartesius 1,1,0, x,y+dy/2\n\n	bg 0\n	sw width\n\n	for i in range n\n		a.go 0,dy\n		b.go dx,0\n		b.go 0,dy\n		a.go dx,0			",
      c: {
        "girlang 0,0,9,5,20,20": 0,
        "girlang 200,0,9,7,-20,20": 0
      }
    },
    braid: {
      b: "# LOC: 19 sc bg sw for in range line class constructor new @\n# https://cdn.tutsplus.com/vector/uploads/legacy/tuts/000-2011/398-hair-braid/6.jpg\n\nclass Cartesius\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n\nbraid = (n,dx,dy,width) ->		",
      a: "class Cartesius\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n		sc @r,@g,@b\n		line @x,@y,@x+dx,@y+dy\n		[@x,@y] = [@x+dx,@y+dy]\n\nbraid = (n,dx,dy,width) ->		\n\n	a = new Cartesius 1,0,0, 100-dx/2,dy/3\n	b = new Cartesius 1,1,0, 100+dx/2,2*dy/3\n	c = new Cartesius 0,1,0, 100-dx/2,dy\n\n	bg 0\n	sw width\n\n	for i in range n\n		a.go dx,dy\n		b.go -dx,dy\n		c.go dx,dy\n\n		a.go -dx,dy\n		b.go dx,dy\n		c.go -dx,dy",
      c: {
        "braid 5,18,18,6": 0,
        "braid 4,30,21,14": 0,
        "braid 6,24,15,5": 0
      }
    },
    OlympicRings: {
      b: "# LOC:24 sc bg fc sw arc strokeCap class constructor new @\n\nclass Ring\n	constructor : (@x,@y,@r,@g,@b) ->\n	draw : (start=3,stopp=3,hour=PI/6) ->\n\nolympic = (x=100,y=100,radius=50,d=60,w=10) ->",
      a: "class Ring\n	constructor : (@x,@y,@radius, @r,@g,@b) ->\n	draw : (start=3,stopp=3,hour=PI/6) ->\n		sc @r,@g,@b\n		arc @x,@y,@radius,@radius,(start-3)*hour,(stopp-3)*hour\n		\nolympic = (x=100,y=100,radius=50,d=60,w=10) ->\n	r1 = new Ring x-d,  y,     radius, 0,0,1\n	r2 = new Ring x,    y,     radius, 0,0,0\n	r3 = new Ring x+d,  y,     radius, 1,0,0\n	r4 = new Ring x-d/2,y+d/3, radius, 1,1,0\n	r5 = new Ring x+d/2,y+d/3, radius, 0,1,0\n\n	strokeCap SQUARE\n	bg 0.5\n	fc()\n	sw w\n\n	r1.draw()\n	r3.draw()\n	r4.draw()\n	r5.draw()\n	r1.draw 2,4\n	r2.draw()\n	r4.draw 12,2\n	r5.draw 8,10\n	r3.draw 6,8			",
      c: {
        "olympic()": 0,
        "olympic 100,50,25,30,5": 0,
        "olympic 100,100,100,120,20": 0
      }
    },
    chessGame: {
      b: "# LOC:60 bg fc sc sw point rect rectMode if then else text textSize textAlign class constructor new @\n#        for in range push split length indexOf\n\nclass Chess\n	constructor : (@moves=\"\", @size=22, w=\"\",b=\"\", @x=100,@y=100) ->\n	move : (n) ->\n\nbg 0.5\nbig = new Chess \"e2e4 e7e5 g1f3 b8c6 f1c4\"\nsmall = new Chess \"g2g4 e7e5 f2f4 d8h4\",18\n",
      a: "class Chess\n	constructor : (@moves=\"\",@size=22,w=\"\",b=\"\",@x=100,@y=100) ->\n		if b == \"\" then b = \"Ra8 Nb8 Bc8 Qd8 Ke8 Bf8 Ng8 Rh8 a7 b7 c7 d7 e7 f7 g7 h7\"\n		if w == \"\" then w = \"Ra1 Nb1 Bc1 Qd1 Ke1 Bf1 Ng1 Rh1 a2 b2 c2 d2 e2 f2 g2 h2\"\n		textSize 0.9 * @size\n		textAlign CENTER,CENTER\n		rectMode CENTER\n		@white = @putPieces w\n		@black = @putPieces b\n		@moves = @moves.split \" \"\n\n	putPieces : (pieces) ->\n		res = []\n		for i in range 64\n			res.push \"\" \n		arr = pieces.split \" \"\n		for piece in arr\n			if piece.length == 2\n				chr = \"o\"\n				sq = piece\n			else\n				chr = piece[0]\n				sq = piece[1..]\n			[col,row] = getIndex sq\n			res[8*col+row] = chr	\n		res\n\n	getIndex = (sq) ->\n		col = \"abcdefgh\".indexOf sq[0]\n		row = \"12345678\".indexOf sq[1]\n		[col,row]\n		\n	render1 : (pieces,c) ->\n		fc c\n		sc c\n		for row in range 8\n			for col in range 8\n				piece = pieces[8*col+row]\n				x = @x-3.5*@size+col*@size\n				y = @y-3.5*@size+(7-row)*@size\n				if piece == \"o\"\n					sw @size/2\n					point x,y\n				else if piece in \"KQRBN\"\n					sw 1-c\n					text piece,x, 1+y		\n				\n	render : () ->\n		sc()\n		for i in range 8\n			for j in range 8\n				if (i+j)%2 == 1 then fc 0.4 else fc 0.6\n				rect @x-3.5*@size+@size*i, @y-3.5*@size+@size*j, @size, @size\n		@render1 @white,1\n		@render1 @black,0\n\n	movePiece = (m,player) ->\n		[col1,row1] = getIndex m[0..1]\n		[col2,row2] = getIndex m[2..3]\n		player[col2*8+row2] = player[col1*8+row1]\n		player[col1*8+row1] = \"\"\n		\n	move : (n) ->\n		for i in range n\n			movePiece @moves[i], if i%2==0 then @white else @black\n		@render()\n\nbg 0.5\nbig = new Chess \"e2e4 e7e5 g1f3 b8c6 f1c4\"\nsmall = new Chess \"g2g4 e7e5 f2f4 d8h4\",18\n",
      c: {
        "big.move 0": 0,
        "big.move 1": 0,
        "big.move 2": 0,
        "big.move 3": 0,
        "big.move 4": 0,
        "big.move 5": 0,
        "small.move 0": 0,
        "small.move 1": 0,
        "small.move 2": 0,
        "small.move 3": 0,
        "small.move 4": 0
      }
    }
  },
  "L10: sin cos recursion {}": {
    alphanumeric: {
      b: "# LOC:11 bg for in range indexOf & ** circle {} [] '' if then else\n\nletter = (chr) ->",
      a: "letter = (chr) ->\n	bg 0\n	sc()\n	pattern = {1:'4c4444e', 2:'eh1248v', A:'ehhvhhh', B:'uhhuhhu'}\n	for ch,j in pattern[chr]\n		index = '0123456789abcdefghijklmnopqrstuv'.indexOf ch\n		for i in range 5\n			if index & 2**i then fc 0,1,0 else fc 0,0.3,0\n			x = 140-20*i\n			y = 40+20*j\n			circle x,y,8",
      c: {
        "letter 'A'": 0,
        "letter 'B'": 0,
        "letter '1'": 0,
        "letter '2'": 0
      }
    },
    GoldenStar: {
      b: "# LOC:13 bg fc for in range triangle translate rotate cos sin \n\nstar = (x,y,n,a,b) ->",
      a: "star = (x,y,n,a,b) ->\n	bg 0\n	translate x,y\n	v = TWO_PI/n\n	rotate -PI/2\n	x1 = b * cos v/2\n	y1 = b * sin v/2\n	for i in range n\n		fc 1,1,0\n		triangle 0,0,a,0,x1,y1\n		fc 1,0.7,0\n		triangle 0,0,a,0,x1,-y1\n		rotate v",
      c: {
        "star 100,125,3,110,30": 0,
        "star 100,100,4,100,25": 0,
        "star 100,110,5,100,38": 0,
        "star 100,100,6,100,50": 0
      }
    },
    Polygon: {
      b: "# LOC:17 bg sc line for in range class constructor new @ cos sin radians \n\nclass Turtle\n	constructor : (@r=1,@g=0,@b=0, @x=100,@y=10,@dir=0) ->\n	fd : (d) ->\n	rt : (a) ->\n\npolygon = (n,d) ->\n	t = new Turtle()",
      a: "class Turtle\n	constructor : (@r=1,@g=0,@b=0, @x=100,@y=10,@dir=0) ->\n	fd : (d) ->\n		dx = d*cos radians @dir\n		dy = d*sin radians @dir\n		sc @r,@g,@b\n		line @x,@y,@x+dx,@y+dy\n		@x += dx\n		@y += dy\n	rt : (a) ->\n		@dir +=a\n\npolygon = (n,d) ->\n	t = new Turtle()\n	bg 0\n	for i in range n\n		t.fd d\n		t.rt 360/n",
      c: {
        "polygon 3,60": 0,
        "polygon 4,60": 0,
        "polygon 5,60": 0,
        "polygon 6,60": 0,
        "polygon 8,50": 0,
        "polygon 16,32": 0,
        "polygon 32,16": 0,
        "polygon 64,8": 0
      }
    },
    SpaceShip: {
      b: "# LOC: 22 sc sw point triangle translate rd class constructor new @ cos sin radians\n\nclass Ship\n	constructor : (@x,@y,@s,@dir, @r=1,@g=1,@b=0) ->\n	lt : (a=90) -> \n		@\n	draw : ->\n			\ns1 = new Ship 20,120,10,0		\ns2 = new Ship 100,100,20,-90, 1,0,0	",
      a: "class Ship\n	constructor : (@x,@y,@s,@dir, @r=1,@g=1,@b=0) ->\n	lt : (a=90) -> \n		@dir -= a\n		@\n	rt : (a=90) -> \n		@dir += a\n		@\n	fd : (d=100) -> \n		@x += d * cos radians @dir\n		@y += d * sin radians @dir\n		@\n	draw : ->\n		translate @x,@y\n		rd @dir\n		sc @r,@g,@b\n		sw 2\n		triangle 2*@s,0, -@s,@s, -@s,-@s\n		sw 5\n		point 0,0\n\ns1 = new Ship 20,120,10,0		\ns2 = new Ship 100,100,20,-90, 1,0,0	",
      c: {
        "s1.draw()": 0,
        "s2.draw()": 0,
        "s1.lt(45).draw()": 0,
        "s1.rt(45).draw()": 0,
        "s1.rt().draw()": 0,
        "s1.rt(180).draw()": 0,
        "s1.fd(50).draw()": 0,
        "s1.lt().fd().rt().fd().rt().draw()": 0,
        "s1.fd().rt(45).draw()": 0,
        "s1.rt(45).fd().draw()": 0
      }
    },
    recursiveCircles: {
      b: "# LOC:6 -> sc circle if return <\n\ncircles = (x,y,r) ->",
      a: "sc 1\ncircles = (x,y,r) ->\n	circle x,y,r\n	if r < 10 then return\n	circles x-r/2,y,r/2\n	circles x+r/2,y,r/2",
      c: {
        "circles 100,100,100": 0
      }
    }
  },
  "L11: Guess a Number": {
    guess1: {
      b: "# LOC:11 bg sc rect rectMode for in range\n",
      a: "bg 1\nrectMode CENTER,CENTER\nn = 200\nsize = n / 8\nsc 0\nfor i in range 8\n	x = i * size + size/2\n	y = size/2\n	w = size\n	h = size\n	rect x,y,w,h"
    },
    guess2: {
      b: "# LOC:16 bg fc sc rect rectMode for in range text textAlign\n",
      a: "bg 1\nrectMode CENTER,CENTER\ntextAlign CENTER,CENTER\nn = 200\nsize = n / 8\nfor i in range 8\n	x = i * size + size/2\n	y = size/2\n	w = size\n	h = size\n	fc()\n	sc 0\n	rect x,y,w,h\n	fc 0\n	sc()\n	text i,x,y"
    },
    guess3: {
      b: "# LOC:17 bg sc fc rect rectMode for in range text textAlign\n",
      a: "bg 1\nrectMode CENTER,CENTER\ntextAlign CENTER,CENTER\nn = 200\nsize = n / 8\nfor i in range 8\n	for j in range 8\n		x = i * size + size/2\n		y = j * size + size/2\n		w = size\n		h = size\n		fc()\n		sc 0\n		rect x,y,w,h\n		fc 0\n		sc()\n		text i+8*j,x,y"
    },
    guess4: {
      b: "# LOC:19 bg fc sc rect rectMode for in range text textAlign\n\nf = (nx,ny) ->",
      a: "f = (nx,ny) ->\n	bg 1\n	rectMode CENTER,CENTER\n	textAlign CENTER,CENTER\n	n = 200\n	px = n/nx\n	py = n/ny\n	for i in range nx\n		for j in range ny\n			x = i * px + px/2\n			y = j * py + py/2\n			w = px\n			h = py\n			fc()\n			sc 0\n			rect x,y,w,h\n			fc 0\n			sc()\n			text i+nx*j,x,y",
      c: {
        "f 8,6": 0,
        "f 6,6": 0
      }
    },
    guess5: {
      b: "# LOC:23 bg fc sc rect rectMode for range text textAlign if else\n\nf = (nx,ny,start,stopp) ->",
      a: "f = (nx,ny,start,stopp) ->\n	bg 1\n	rectMode CENTER,CENTER\n	textAlign CENTER,CENTER\n	n = 200\n	px = n/nx\n	py = n/ny\n	for i in range nx\n		for j in range ny\n			x = i * px + px/2\n			y = j * py + py/2\n			w = px\n			h = py\n			fc()\n			sc 0\n			rect x,y,w,h\n			index = i+nx*j\n			sc()\n			if start <= index && index <= stopp\n				fc 0\n			else\n				fc 0.8\n			text index,x,y",
      c: {
        "f 8,8,18,45": 0,
        "f 6,6,10,25": 0
      }
    },
    guess6: {
      b: "# LOC:28 bg fc sc rect rectMode for in range text textAlign if else\n\nf = (nx,ny,start,stopp,mx,my,target) ->",
      a: "f = (nx,ny,start,stopp,mx,my,target) ->\n	bg 1\n	rectMode CENTER,CENTER\n	textAlign CENTER,CENTER\n	n = 200\n	px = n/nx\n	py = n/ny\n	i = int mx/px\n	j = int my/py \n	clicked = i+nx*j\n	if clicked <= target then start = clicked + 1\n	if clicked >= target then stopp = clicked - 1\n	for i in range nx\n		for j in range ny\n			x = i * px + px/2\n			y = j * py + py/2\n			w = px\n			h = py\n			fc()\n			sc 0\n			rect x,y,w,h\n			index = i+nx*j\n			sc()\n			if start <= index and index <= stopp\n				fc 0\n			else\n				fc 0.8\n			text index,x,y",
      c: {
        "f 8,8,18,45,70,90,28": 0,
        "f 6,6,10,25,90,90,20": 0
      }
    }
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\github\p5Dojo\data.coffee