// Generated by CoffeeScript 1.11.1
var data;

data = {
  "L1: bg point sc sw": {
    Background1: {
      b: "# Den översta bitmappen till höger visar resultatet av din kod.\n# Den mellersta bitmappen ska du efterlikna.\n# Den understa bitmappen visar skillnaden mellan de två andra.\n\n# Tryck på PgDn för att komma till sista raden.\n# Skriv in följande kommando: bg 1\n# Kontrollera att de båda övre bitmapparna nu är lika.\n\n# Klicka på Background2 för att komma till nästa övning.\n# Klicka på Help nere till vänster för mera information.\n# Klicka på Reference för att se fler kommandon.\n",
      a: "bg 1"
    },
    Background2: {
      b: "# LOC:1 bg\n",
      a: "bg 0.5"
    },
    Background3: {
      b: "# LOC:1 bg\n",
      a: "bg 1,0,0"
    },
    Background4: {
      b: "# LOC:1 bg\n",
      a: "bg 1,1,0"
    },
    CornerPoints: {
      b: "# LOC:9 sc sw point\n\nsw 5\nsc 1,0,0\npoint 0,0\n",
      a: "sw 5\nsc 1,0,0\npoint 0,0\nsc 0,1,0\npoint 200,0\nsc 1,1,0\npoint 0,200\nsc 0\npoint 200,200"
    },
    MidPoints: {
      b: "# LOC:11 sc sw point\n",
      a: "sw 5\nsc 1,0,0\npoint 100,100\nsc 0,1,0\npoint 100,0\nsc 1,1,0\npoint 0,100\nsc 0\npoint 200,100\nsc 1\npoint 100,200"
    },
    CornerPoints3: {
      b: "# LOC:17 sc sw point\n",
      a: "sw 5\nsc 1,0,0\npoint 20,0\npoint 20,20\npoint 0,20\n\nsc 0,1,0\npoint 180,0\npoint 180,20\npoint 200,20\n\nsc 1,1,0\npoint 20,180\npoint 20,200\npoint 0,180\n\nsc 1\npoint 180,180\npoint 180,200\npoint 200,180"
    },
    CornerPoints7: {
      b: "# LOC:17 sc sw point\n",
      a: "sw 5\nsc 1,0,0\npoint 30,0\npoint 30,10\npoint 30,20\npoint 30,30\npoint 10,30\npoint 20,30\npoint 0,30\n\nsc 0,1,0\npoint 170,200\npoint 170,190\npoint 170,180\npoint 170,170\npoint 190,170\npoint 180,170\npoint 200,170"
    },
    Diagonal: {
      b: "# LOC:23 sc sw point\n",
      a: "sc 1,0,0\nsw 11\npoint 200,0\nsw 10\npoint 180,20\nsw 9\npoint 160,40\nsw 8\npoint 140,60\nsw 7\npoint 120,80\nsw 6\npoint 100,100\nsw 5\npoint 80,120\nsw 4\npoint 60,140\nsw 3\npoint 40,160\nsw 2\npoint 20,180\nsw 1\npoint 0,200"
    }
  },
  "L2: circle fc text": {
    dices: {
      b: "# LOC:26 point sc\n",
      a: "point 10,10\n\nsc 1,0,0 \npoint 185,5 \npoint 195,15 \n\nsc 0,1,0 \npoint 85,65 \npoint 90,70 \npoint 95,75 \n\nsc 1,1,0 \npoint 165,105 \npoint 165,115 \npoint 175,105 \npoint 175,115 \n\nsc 1,0,1 \npoint 45,125 \npoint 45,135 \npoint 50,130 \npoint 55,125 \npoint 55,135 \n\nsc 0,1,1 \npoint 105,165 \npoint 105,170 \npoint 105,175 \npoint 115,165 \npoint 115,170 \npoint 115,175 "
    },
    Five: {
      b: "# LOC:12 bg circle fc sc\n",
      a: "bg 0.5\nsc()\nfc 1\ncircle 100,100,20\nfc 1,0,0\ncircle 40,40,20\nfc 1,1,0\ncircle 40,160,20\nfc 0,1,0\ncircle 160,160,20\nfc 0,0,1\ncircle 160,40,20"
    },
    whiteCircle: {
      b: "# LOC:2 circle fc\n",
      a: "fc 1\ncircle 60,80,30"
    },
    whiteEmptyCircle: {
      b: "# LOC:4 circle fc sc sw\n",
      a: "sc 1\nfc()\nsw 2\ncircle 70,90,40"
    },
    twoDiscsA: {
      b: "# LOC:4 circle fc\n",
      a: "fc 1,0,0 \ncircle 80,100,40\nfc 0,1,0\ncircle 100,120,50"
    },
    twoDiscsB: {
      b: "# LOC:4 circle fc\n",
      a: "fc 1,0,0\ncircle 80,100,40\nfc 0,1,0, 0.5\ncircle 120,100,50"
    },
    textA: {
      b: "# LOC:3 fc textSize text\n",
      a: "fc 1,1,0\ntextSize 32\ntext 'Coffeescript',100,100"
    },
    textB: {
      b: "# LOC:4 fc text textAlign textSize text\n",
      a: "fc 1,1,0\ntextSize 32\ntextAlign CENTER,CENTER\ntext 'Coffeescript',100,100"
    }
  },
  "L3: ellipse rect": {
    greenEllipse: {
      b: "# LOC:2 ellipse fc\n",
      a: "fc 0,1,0\nellipse 120,60, 60,40"
    },
    greenRect: {
      b: "# LOC:2 fc rect\n",
      a: "fc 0,1,0\nrect 60,80, 40,50"
    },
    redRect: {
      b: "# LOC:2 fc rect\n",
      a: "fc 1,0,0\nrect 80,70, 40,100"
    },
    cross: {
      b: "# LOC:4 fc rect\n",
      a: "fc 1,0,0\nsc()\nrect 85,70, 70,10\nrect 115,40, 10,100"
    },
    squareHole: {
      b: "# LOC:11 fc rect sc sw\n",
      a: "fc 0,1,1\nsc()\nrect 60,60, 80,20\nrect 60,120, 80,20\nrect 60,60, 20,80\nrect 120,60, 20,80\nfc()\nsc 1,0,0\nsw 3\nrect 60,60, 80,80\nrect 80,80, 40,40"
    }
  },
  "L4: for lerp rect": {
    for01: {
      b: "# LOC:3 for lerp rect\n\nrect  5,5,10,10\nrect 25,5,10,10\nfor i in range 0\n	x = lerp 5,25,i \n	rect",
      a: "for i in range 10\n	x = 5+20*i\n	rect x,5, 10,10"
    },
    for02: {
      b: "# LOC:3 for lerp rect\n",
      a: "for i in range 10\n	y = 5+20*i\n	rect 5,y, 10,10"
    },
    for03: {
      b: "# LOC:4 for lerp rect\n",
      a: "for i in range 10\n	x = 5+20*i\n	y = 5+20*i\n	rect x,y, 10,10"
    },
    for04: {
      b: "# LOC:5 for lerp rect\n",
      a: "for i in range 10\n	for j in range 10\n		x = 5+20*i\n		y = 5+20*j\n		rect x,y, 10,10"
    },
    for05: {
      b: "# LOC:7 for lerp rect rectMode\n",
      a: "rectMode CENTER\nfor i in range 10\n	x = 10+20*i\n	y = 10\n	w = 2*i\n	h = 2*i\n	rect x,y, w,h"
    },
    for06: {
      b: "# LOC:8 fc for lerp rect rectMode\n",
      a: "rectMode CENTER\nfor i in range 10\n	fc i/10.0,0,0\n	x = 10+20*i\n	y = 10\n	w = 2*i\n	h = 2*i\n	rect x,y,w,h"
    },
    for07: {
      b: "# LOC:6 for fc circle lerp\n",
      a: "for i in range 10\n	fc i/10.0,0,0\n	x = 10+20*i\n	y = 10\n	r = i\n	circle x,y,r"
    },
    for08: {
      b: "# LOC:4 for fc circle lerp\n",
      a: "for i in range 10,0,-1\n	fc i/10.0,0,0\n	r = 10 * i\n	circle 100,100, r"
    },
    for09: {
      b: "# LOC:6 for fc circle lerp\n",
      a: "for i in range 10,0,-1\n	fc i/10.0,0,0\n	x = 10*i\n	y = 10*i\n	r = 10*i\n	circle x,y,r"
    },
    for10: {
      b: "# LOC:7 for fc circle lerp\n",
      a: "for i in range 10\n	for j in range 10\n		fc i/10.0,j/10.0,0\n		x = 10+20*i\n		y = 10+20*j\n		r = (i+j)/2\n		circle x,y,r"
    }
  },
  "L5: line for lerp": {
    HorizontalLine: {
      b: "# LOC:2 line sc\n",
      a: "sc 1,0,1\nline 10,70, 190,70"
    },
    VerticalLine: {
      b: "# LOC:3 line sc sw\n",
      a: "sc 1,1,0\nsw 10\nline 110,30, 110,170"
    },
    Line: {
      b: "# LOC:2 line sc\n",
      a: "sc 1,1,0\nline 20,0, 200,20"
    },
    Grid: {
      b: "# LOC:5 for line sc sw\n",
      a: "sc 1,1,0\nsw 2\nfor i in range 10,200,10\n	line 10,i,190,i\n	line i,190,i,10"
    },
    Skislope: {
      b: "# LOC:4 bg for lerp line sc",
      a: "bg 0\nsc 1,0,0\nfor i in range 21\n	line i*10,0,200,i*10"
    },
    Sunshine: {
      b: "# LOC:5 bg for lerp line sc\n",
      a: "bg 0\nsc 1,1,0\nfor i in range 10\n	line i*20,0,200-i*20,200\n	line 0,20+i*20,200,180-i*20"
    },
    Lines: {
      b: "# LOC:5 bg for lerp line (by Noel Watson)\n",
      a: "bg 0\nfor i in range 37\n	line 10,10,190,10+i*5\n	line 10,100,190,10+i*5\n	line 10,190,190,10+i*5"
    },
    chessRow: {
      b: "# LOC:5 % bg fc for rect\n",
      a: "bg 0.5\nfor i in range 8\n	fc i%2\n	x = 20+20*i \n	rect x,20, 20,20"
    },
    chessBoard: {
      b: "# LOC:7 bg fc for rect\n",
      a: "bg 0.5\nfor i in range 8\n	for j in range 8\n		fc (i+j)%2\n		x = 20+20*i\n		y = 20+20*j\n		rect x,y, 20,20"
    },
    chessCross: {
      b: "# LOC:8 for rect if fc (David Larsson)\n",
      a: "for i in range 10\n	for j in range 10\n		fc()\n		if i-j in [-2,0,2] then fc 1,1,0\n		if i+j in [7,9,11] then fc 1,0,0\n		x = 20*i\n		y = 20*j\n		rect x,y, 20,20"
    },
    boardGame: {
      b: "# LOC:10 for in range circle bg fc sc\n\nboard = (x,y,d,r,n) ->",
      a: "one = (d,r,x0,y0,m,n) ->\n	for i in range m\n		for j in range n\n			circle x0+d*i,y0+d*j,r\n\nboard = (x,y,d,r,n) ->\n	bg 1\n	fc 0\n	sc()\n	one d,r,x-n*d, y-d,2*n+1,3\n	one d,r,x-d, y-n*d,3,2*n+1",
      c: {
        "board 100,100,18, 7,5": 0,
        "board 100,100,25,10,3": 0,
        "board 100,100,35,15,2": 0,
        "board  50, 50, 9, 4,5": 0,
        "board  50,150,12, 5,3": 0,
        "board 150,150,18, 8,2": 0
      }
    }
  },
  "L6: triangle quad arc": {
    Triangle: {
      b: "# LOC:2 fc triangle\n",
      a: "fc 1\ntriangle 20,40, 160,100, 100,140"
    },
    Quad: {
      b: "# LOC:2 fc quad\n",
      a: "fc 1,1,0\nquad 150,100, 180,20, 40,20, 100,140"
    },
    PacMan: {
      b: "# LOC:2 arc fc radians PIE\n",
      a: "fc 1,1,0\narc 100,100, 80,80, radians(-135),radians(135), PIE"
    }
  },
  "L7: translate rotate push pop": {
    textC: {
      b: "# LOC:6 fc rd textAlign textSize translate text\n",
      a: "fc 1,1,0\ntextSize 32\ntextAlign CENTER,CENTER\ntranslate 100,100\nrd 90\ntext 'Coffeescript',0,0"
    },
    textD: {
      b: "# LOC:6 fc textAlign textSize translate rd text\n",
      a: "fc 1,1,0\ntextSize 32\ntextAlign CENTER,CENTER\ntranslate 100,100\nrd 180\ntext 'Coffeescript',0,0"
    },
    rotatedEllipse: {
      b: "# LOC:5 ellipse rd translate\n",
      a: "fc 1,0,0\nsc()\ntranslate 100,100\nrd 45\nellipse 0,0, 80,40"
    },
    rotatedRectA: {
      b: "# LOC:4 fc rect\n",
      a: "fc 1,0,0\nrect 60,100, 40,40\nfc 0,1,0\nrect 140,100, 40,40"
    },
    rotatedRectB: {
      b: "# LOC:12 push pop rd rect translate\n",
      a: "push()\nfc 1,0,0\ntranslate 60,100\nrd 45\nrect 0,0, 40,40\npop()\npush()\nfc 0,1,0\ntranslate 140,100\nrd 45\nrect 0,0, 40,40\npop()"
    },
    rotatedRectC: {
      b: "# LOC:13 fc push pop rd rect translate\n",
      a: "rectMode CENTER\npush()\nfc 1,0,0\ntranslate 80,120\nrd 45\nrect 0,0, 40,40\npop()\npush()\nfc 0,1,0\ntranslate 160,120\nrd 45\nrect 0,0, 40,40\npop()"
    },
    cards: {
      b: "# LOC:10 for fc circle lerp rd rectMode sc translate\n",
      a: "rectMode CENTER\nsc 1\ntranslate 100,100\nfor i in range 18,-1,-1\n  r = 1.0*i/18\n  fc r,0,0\n  w = 70+5*i\n  h = 70+5*i\n  rect 0,0, w,h\n  rd 5"
    },
    tiles: {
      b: "# LOC:13 fc for lerp push pop rd rect rectMode sc translate\n",
      a: "rectMode CENTER\nsc()\nfor i in range 10\n  for j in range 10\n    push()\n    translate 10+20*i,10+20*j\n    rd 5*(i+j)\n    r = i/9.0\n    g = j/9.0\n    b = 0\n    fc r,g,b\n    rect 0,0, 10,10\n    pop()"
    }
  },
  "L8: function": {
    square: {
      b: "# LOC:5 -> bg sw fc rect\n\nsquare = (x,y,size,w=1, r=0.5,g=0.5,b=0.5) ->",
      a: "square = (x,y,size,w=1,r=0.5,g=0.5,b=0.5) ->\n	bg 0\n	sw w\n	fc r,g,b\n	rect x,y,size,size",
      c: {
        "square 100,100,50": 0,
        "square 10,10,20": 0,
        "square 50,70,40,2": 0,
        "square 30,150,30,3,1,0,0": 0
      }
    },
    multimoire: {
      b: "# LOC:5 bg for line map\n\nmoire = (k) ->",
      a: "moire = (k) ->\n	background 0\n	for i in range k\n		for j in range 37\n			line 10,map(i,0,k-1,10,190),190,10+j*5",
      c: {
        "moire 2": 0,
        "moire 3": 0,
        "moire 4": 0,
        "moire 5": 0
      }
    },
    colorCube: {
      b: "# LOC:8 -> bg fc for rect\n\ncolorCube = (n,b) ->",
      a: "colorCube = (n,b) ->\n	bg 0\n	d = 200.0/n\n	m = n-1.0\n	for r in range n\n		for g in range n\n			fc r/m,g/m,b/m\n			rect r*d,g*d,d,d",
      c: {
        "colorCube 2,0": 0,
        "colorCube 2,1": 0,
        "colorCube 3,0": 0,
        "colorCube 3,1": 0,
        "colorCube 3,2": 0
      }
    },
    manyDices: {
      b: "# LOC:21 -> fc for if point [] %\n\nmanyDices = () ->",
      a: "dots = (x,y,dots) ->\n	for dot in dots\n		if dot==1 then point x+8,y+8\n		if dot==2 then point x+8,y+10\n		if dot==3 then point x+8,y+12\n		if dot==4 then point x+10,y+10\n		if dot==5 then point x+12,y+8\n		if dot==6 then point x+12,y+10\n		if dot==7 then point x+12,y+12\ndice = (x,y,d) ->\n	if d==1 then dots x,y,[4]\n	if d==2 then dots x,y,[1,7]\n	if d==3 then dots x,y,[1,4,7]\n	if d==4 then dots x,y,[1,3,5,7]\n	if d==5 then dots x,y,[1,3,4,5,7]\n	if d==6 then dots x,y,[1,2,3,5,6,7]\nmanyDices = () ->\n	fc(0)\n	for i in range 10\n		for j in range 10\n			dice 20*i,20*j,1+(i+j)%6",
      c: {
        "manyDices()": 0
      }
    },
    sevenSegment: {
      b: "# LOC:22 bg sc fc rectMode if then & rect []\n\ndigit = (d,x=100,y=100,w=80,h=10) ->",
      a: "digit = (d,x=100,y=100,w=80,h=18) ->\n	bg 0.5\n	sc()\n	fc 1,0,0\n	rectMode CENTER\n	pattern = [63,6,91,79,102,109,125,7,127,111]\n	p = pattern[d]\n	w0 = w-20\n	if p & 1 then fc 1,0,0 else fc 0.3,0,0\n	rect x,y-w,w0,h \n	if p & 2 then fc 1,0,0 else fc 0.3,0,0\n	rect x+w/2,y-w/2,h,w0 \n	if p & 4 then fc 1,0,0 else fc 0.3,0,0\n	rect x+w/2,y+w/2,h,w0 \n	if p & 8 then fc 1,0,0 else fc 0.3,0,0\n	rect x,y+w,w0,h \n	if p & 16 then fc 1,0,0 else fc 0.3,0,0\n	rect x-w/2,y+w/2,h,w0\n	if p & 32 then fc 1,0,0 else fc 0.3,0,0\n	rect x-w/2,y-w/2,h,w0 \n	if p & 64 then fc 1,0,0 else fc 0.3,0,0\n	rect x,y,w0,h ",
      c: {
        "digit 0": 0,
        "digit 1": 0,
        "digit 2": 0,
        "digit 3": 0,
        "digit 4": 0,
        "digit 5": 0,
        "digit 6": 0,
        "digit 7": 0,
        "digit 8": 0,
        "digit 9": 0
      }
    },
    alphanumeric: {
      b: "# LOC:11 bg for in range indexOf & ** circle {} [] '' if then else\n\nletter = (chr) ->",
      a: "letter = (chr) ->\n	bg 0\n	sc()\n	pattern = {1:'4c4444e', 2:'eh1248v', A:'ehhvhhh', B:'uhhuhhu'}\n	for ch,j in pattern[chr]\n		index = '0123456789abcdefghijklmnopqrstuv'.indexOf ch\n		for i in range 5\n			if index & 2**i then fc 0,1,0 else fc 0,0.3,0\n			x = 140-20*i\n			y = 40+20*j\n			circle x,y,8",
      c: {
        "letter 'A'": 0,
        "letter 'B'": 0,
        "letter '1'": 0,
        "letter '2'": 0
      }
    },
    klocka: {
      b: "# LOC:25 -> circle else fc for if point push pop rd rect rectMode sc translate\n\nklocka = (h,m,s) ->",
      a: "visare = (v,w,l,r,g,b) ->\n	push()\n	rd v-90\n	translate l/2,0\n	fc r,g,b\n	rect 0,0,l,w\n	pop()\nklocka = (h,m,s) ->\n	rectMode CENTER\n	translate 100,100\n	urtavla()\n	visare (h+m/60.0)*30, 7,60,1,0,0\n	visare (m+s/60.0)*6,5,80,0,1,0\n	visare s*6,2,80,0,0,1\nurtavla = () ->\n	fc 0\n	sc 1\n	circle 0,0,90\n	fc 1\n	for i in range 60\n		if i%5==0\n			circle 85,0,2\n		else\n			point 85,0\n		rd 6",
      c: {
        "klocka 10,9,30": 0,
        "klocka 11,30,15": 0
      }
    },
    GoldenStar: {
      b: "# LOC:13 translate rotate cos sin for range fc triangle bg\n\nstar = (x,y,n,a,b) ->",
      a: "star = (x,y,n,a,b) ->\n	bg 0\n	translate x,y\n	v = TWO_PI/n\n	rotate -PI/2\n	x1 = b * cos v/2\n	y1 = b * sin v/2\n	for i in range n\n		fc 1,1,0\n		triangle 0,0,a,0,x1,y1\n		fc 1,0.7,0\n		triangle 0,0,a,0,x1,-y1\n		rotate v",
      c: {
        "star 100,125,3,110,30": 0,
        "star 100,100,4,100,25": 0,
        "star 100,110,5,100,38": 0,
        "star 100,100,6,100,50": 0
      }
    },
    recursiveCircles: {
      b: "# LOC:6 -> circle if return sc <\n\ncircles = (x,y,r) ->",
      a: "sc 1\ncircles = (x,y,r) ->\n	circle x,y,r\n	if r < 10 then return\n	circles x-r/2,y,r/2\n	circles x+r/2,y,r/2",
      c: {
        "circles 100,100,100": 0
      }
    },
    korg: {
      b: "# LOC:17 -> bg fc for if else rect sc sw\n\nkorg = (n,w,c1,c2) ->",
      a: "korg = (n,w,c1,c2) ->\n	bg 0\n	sw w\n	fill c1\n	stroke c2\n	q = 2*n+1\n	d = 200.0/q\n	for i in range n\n		rect d+i*2*d,0,d,200\n	for j in range n\n		rect 0,d+j*2*d,200,d\n	for i in range n\n		for j in range n\n			if (i+j) % 2 == 1\n				rect i*2*d,d+j*2*d,3*d,d\n			else\n				rect d+i*2*d,j*2*d,d,3*d",
      c: {
        "korg 1,5,co(1,0,0),co(1,1,0)": 0,
        "korg 2,4,co(0.5),co(1)": 0,
        "korg 3,3,co(1,1,0),co(1,0,0)": 0,
        "korg 4,2,co(1),co(0.5)": 0,
        "korg 5,1,co(1,0,0),co(1,1,0)": 0
      }
    },
    "OlympicRing Prep": {
      b: "# LOC:7 sc arc fc sw strokeCap\n\nring = (x,y,radius,w, r,g,b, start=3,stopp=3) ->",
      a: "ring = (x,y,radius,w, r,g,b, start=3,stopp=3) ->\n	hour = PI/6\n	strokeCap SQUARE\n	fc()\n	sw w\n	sc r,g,b\n	arc x,y,2*radius,2*radius,(start-3)*hour,(stopp-3)*hour",
      c: {
        "ring 100,100,60,20, 1,1,0": 0,
        "ring 100,100,80,10, 1,0,0, 3,6": 0,
        "ring 100,100,80,10, 0,1,0, 2,4": 0,
        "ring 100,100,80,10, 0,1,0, 4,2": 0
      }
    }
  },
  "L9: class constructor new": {
    Connect4: {
      b: "# LOC:23 class constructor new textAlign textSize text for in range push % fc sc circle\n\nclass Connect4\n	constructor : (moves,@size=27) -> \n	render : () ->\n\nc1 = new Connect4 [0,1,2,0],20\nc2 = new Connect4 [3,3,3,3,3,3,3,0,1,2,4,5,6]\nc3 = new Connect4 [3,2,4,3,2,1,0,0,5,6,1,2,1,1,4,4,3,2,0,0,3,0]",
      a: "class Connect4\n	constructor : (moves,@size=27) ->\n		bg 0\n		textAlign CENTER,CENTER\n		textSize @size/2\n		@list = ([] for i in range 7)\n		for move,i in moves\n			@list[move].push i \n	render : () ->\n		fc()\n		sc 0.1,0.3,1\n		sw 0.2 * @size\n		for i in range 7\n			for j in range 6\n				circle 100-@size*3+@size*i, 180-@size*j, @size/2\n		for column,i in @list\n			for nr,j in column\n				fc 1,nr%2,0\n				sw 1\n				circle 100-@size*3+@size*i, 180-@size*j, @size*0.4\n				fc 0\n				sc()\n				text nr, 100-@size*3+@size*i, 180-@size*j\n\nc1 = new Connect4 [0,1,2,0],20\nc2 = new Connect4 [3,3,3,3,3,3,0,1,2,4,5,6]\nc3 = new Connect4 [3,2,4,3,2,1,0,0,5,6,1,2,1,1,4,4,3,2,0,0,3,0]",
      c: {
        "c1.render()": 0,
        "c2.render()": 0,
        "c3.render()": 0
      }
    },
    RushHour: {
      b: "# LOC:40 class constructor new textAlign text push bg sc fc rect \n#	       if then else for in range toLowerCase indexOf \n# https://en.wikipedia.org/wiki/Rush_Hour_(board_game)\n\nclass RushHour\n	constructor : ->\n	add : (pos,r,g,b) ->\n	move : (n) ->\n\nrushhour = new RushHour()\nrushhour.add \"d4e4\",1,0,0\nrushhour.add \"d1d2\",1,1,0\nrushhour.add \"e2f2\",0,1,0\nrushhour.add \"f4f6\",0,1,1\nrushhour.moves = \"aaBBBBcdddAAAAA\"\n",
      a: "textAlign CENTER,CENTER\ncol = (s) -> \"abcdef\".indexOf s\nrow = (s) -> \"123456\".indexOf s\n\nclass Car\n	constructor : (pos,@r,@g,@b) ->\n		@i = col pos[0] \n		@j = row pos[3]\n		@w = col(pos[2]) - @i + 1\n		@h = @j - row(pos[1]) + 1 \n	render : (i) -> \n		fc @r,@g,@b\n		rect 40+20*@i+2, 140-20*@j+2, 20*@w-4, 20*@h-4\n		fc 0\n		text \"ABCDEFGH\"[i], 50+20*@i, 150-20*@j\n	move : (positive) ->\n		if positive then d=1 else d=-1\n		if @w == 1 then @j += d\n		if @h == 1 then @i += d\n		\nclass RushHour\n	constructor : -> @cars=[]\n	add : (pos,r,g,b) -> @cars.push new Car pos,r,g,b\n	move : (n) ->\n		for i in range n\n			ch = @moves[i].toLowerCase()\n			car = @cars[\"abcdefgh\".indexOf(ch)]\n			car.move ch != @moves[i]\n		@render()			\n\n	render : ->\n		bg 0\n		sc()\n		fc 0.5,0.5,0.5\n		rect 40,40,120,120\n		rect 160,80,40,20\n		fc 1\n		sc()\n		for i in range 6\n			text \"654321\"[i],30,50+20*i\n			text \"abcdef\"[i],50+20*i,170\n		for car,i in @cars\n			car.render i\n			\nrushhour = new RushHour()\nrushhour.add \"d4e4\",1,0,0\nrushhour.add \"d1d2\",1,1,0\nrushhour.add \"e2f2\",0,1,0\nrushhour.add \"f4f6\",0,1,1\nrushhour.moves = \"aaBBBBcdddAAAAA\"",
      c: {
        "rushhour.move 0": 0,
        "rushhour.move 1": 0,
        "rushhour.move 2": 0,
        "rushhour.move 3": 0,
        "rushhour.move 4": 0,
        "rushhour.move 5": 0,
        "rushhour.move 6": 0,
        "rushhour.move 7": 0,
        "rushhour.move 8": 0,
        "rushhour.move 9": 0,
        "rushhour.move 10": 0,
        "rushhour.move 11": 0,
        "rushhour.move 12": 0,
        "rushhour.move 13": 0,
        "rushhour.move 14": 0,
        "rushhour.move 15": 0
      }
    },
    Polygon: {
      b: "# LOC:17 class constructor new cos sin radians sc line for range bg\n\nclass Turtle\n	constructor : (@r=1,@g=0,@b=0, @x=100,@y=10,@dir=0) ->\n	fd : (d) ->\n	rt : (a) ->\n\npolygon = (n,d) ->\n	t = new Turtle()",
      a: "class Turtle\n	constructor : (@r=1,@g=0,@b=0, @x=100,@y=10,@dir=0) ->\n	fd : (d) ->\n		dx = d*cos radians @dir\n		dy = d*sin radians @dir\n		sc @r,@g,@b\n		line @x,@y,@x+dx,@y+dy\n		@x += dx\n		@y += dy\n	rt : (a) ->\n		@dir +=a\n\npolygon = (n,d) ->\n	t = new Turtle()\n	bg 0\n	for i in range n\n		t.fd d\n		t.rt 360/n",
      c: {
        "polygon 3,60": 0,
        "polygon 4,60": 0,
        "polygon 5,60": 0,
        "polygon 6,60": 0,
        "polygon 8,50": 0,
        "polygon 16,32": 0,
        "polygon 32,16": 0,
        "polygon 64,8": 0
      }
    },
    girlang: {
      b: "# LOC: 16 class constructor new sc line bg sw for in range\n\nclass Weaver\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n\ngirlang = (x,y,n,width,dx,dy) ->",
      a: "class Weaver\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n		sc @r,@g,@b\n		line @x,@y,@x+dx,@y+dy\n		[@x,@y] = [@x+dx,@y+dy]\n\ngirlang = (x,y,n,width,dx,dy) ->\n	a = new Weaver 1,0,0, x+dx/2,0\n	b = new Weaver 1,1,0, x,y+dy/2\n\n	bg 0\n	sw width\n\n	for i in range n\n		a.go 0,dy\n		b.go dx,0\n		b.go 0,dy\n		a.go dx,0			",
      c: {
        "girlang 0,0,9,5,20,20": 0,
        "girlang 200,0,9,7,-20,20": 0
      }
    },
    braid: {
      b: "# LOC: 19 class constructor new sc line bg sw for range\n# https://cdn.tutsplus.com/vector/uploads/legacy/tuts/000-2011/398-hair-braid/6.jpg\n\nclass Weaver\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n\nbraid = (n,dx,dy,width) ->		",
      a: "class Weaver\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n		sc @r,@g,@b\n		line @x,@y,@x+dx,@y+dy\n		[@x,@y] = [@x+dx,@y+dy]\n\nbraid = (n,dx,dy,width) ->		\n\n	a = new Weaver 1,0,0, 100-dx/2,dy/3\n	b = new Weaver 1,1,0, 100+dx/2,2*dy/3\n	c = new Weaver 0,1,0, 100-dx/2,dy\n\n	bg 0\n	sw width\n\n	for i in range n\n		a.go dx,dy\n		b.go -dx,dy\n		c.go dx,dy\n\n		a.go -dx,dy\n		b.go dx,dy\n		c.go -dx,dy",
      c: {
        "braid 5,18,18,6": 0,
        "braid 4,30,21,14": 0,
        "braid 6,24,15,5": 0
      }
    },
    OlympicRings: {
      b: "# LOC:24 class constructor sc arc bg fc sw strokeCap\n\nclass Ring\n	constructor : (@x,@y,@r,@g,@b) ->\n	draw : (start=3,stopp=3,hour=PI/6) ->\n\nolympic = (x=100,y=100,radius=50,d=60,w=10) ->",
      a: "class Ring\n	constructor : (@x,@y,@radius, @r,@g,@b) ->\n	draw : (start=3,stopp=3,hour=PI/6) ->\n		sc @r,@g,@b\n		arc @x,@y,@radius,@radius,(start-3)*hour,(stopp-3)*hour\n		\nolympic = (x=100,y=100,radius=50,d=60,w=10) ->\n	r1 = new Ring x-d,  y,     radius, 0,0,1\n	r2 = new Ring x,    y,     radius, 0,0,0\n	r3 = new Ring x+d,  y,     radius, 1,0,0\n	r4 = new Ring x-d/2,y+d/3, radius, 1,1,0\n	r5 = new Ring x+d/2,y+d/3, radius, 0,1,0\n\n	strokeCap SQUARE\n	bg 0.5\n	fc()\n	sw w\n\n	r1.draw()\n	r3.draw()\n	r4.draw()\n	r5.draw()\n	r1.draw 2,4\n	r2.draw()\n	r4.draw 12,2\n	r5.draw 8,10\n	r3.draw 6,8			",
      c: {
        "olympic()": 0,
        "olympic 100,50,25,30,5": 0,
        "olympic 100,100,100,120,20": 0
      }
    },
    SpaceShip: {
      b: "# LOC: 22 class constructor cos sin radians translate rd sc sw triangle point new\n\nclass Ship\n	constructor : (@x,@y,@s,@dir, @r=1,@g=1,@b=0) ->\n	lt : (a=90) -> \n		@\n	draw : ->\n			\ns1 = new Ship 20,120,10,0		\ns2 = new Ship 100,100,20,-90, 1,0,0	",
      a: "class Ship\n	constructor : (@x,@y,@s,@dir, @r=1,@g=1,@b=0) ->\n	lt : (a=90) -> \n		@dir -= a\n		@\n	rt : (a=90) -> \n		@dir += a\n		@\n	fd : (d=100) -> \n		@x += d * cos radians @dir\n		@y += d * sin radians @dir\n		@\n	draw : ->\n		translate @x,@y\n		rd @dir\n		sc @r,@g,@b\n		sw 2\n		triangle 2*@s,0, -@s,@s, -@s,-@s\n		sw 5\n		point 0,0\n\ns1 = new Ship 20,120,10,0		\ns2 = new Ship 100,100,20,-90, 1,0,0	",
      c: {
        "s1.draw()": 0,
        "s2.draw()": 0,
        "s1.lt(45).draw()": 0,
        "s1.rt(45).draw()": 0,
        "s1.rt().draw()": 0,
        "s1.rt(180).draw()": 0,
        "s1.fd(50).draw()": 0,
        "s1.lt().fd().rt().fd().rt().draw()": 0,
        "s1.fd().rt(45).draw()": 0,
        "s1.rt(45).fd().draw()": 0
      }
    },
    chessGame: {
      b: "# LOC:60 class constructor new if then else textSize textAlign text rectMode rect \n#        for in range point bg fc sc sw push split length indexOf\n\nclass Chess\n	constructor : (@moves=\"\", @size=22, w=\"\",b=\"\", @x=100,@y=100) ->\n	move : (n) ->\n\nbg 0.5\nbig = new Chess \"e2e4 e7e5 g1f3 b8c6 f1c4\"\nsmall = new Chess \"g2g4 e7e5 f2f4 d8h4\",18\n",
      a: "class Chess\n	constructor : (@moves=\"\",@size=22,w=\"\",b=\"\",@x=100,@y=100) ->\n		if b == \"\" then b = \"Ra8 Nb8 Bc8 Qd8 Ke8 Bf8 Ng8 Rh8 a7 b7 c7 d7 e7 f7 g7 h7\"\n		if w == \"\" then w = \"Ra1 Nb1 Bc1 Qd1 Ke1 Bf1 Ng1 Rh1 a2 b2 c2 d2 e2 f2 g2 h2\"\n		textSize 0.9 * @size\n		textAlign CENTER,CENTER\n		rectMode CENTER\n		@white = @putPieces w\n		@black = @putPieces b\n		@moves = @moves.split \" \"\n\n	putPieces : (pieces) ->\n		res = []\n		for i in range 64\n			res.push \"\" \n		arr = pieces.split \" \"\n		for piece in arr\n			if piece.length == 2\n				chr = \"o\"\n				sq = piece\n			else\n				chr = piece[0]\n				sq = piece[1..]\n			[col,row] = getIndex sq\n			res[8*col+row] = chr	\n		res\n\n	getIndex = (sq) ->\n		col = \"abcdefgh\".indexOf sq[0]\n		row = \"12345678\".indexOf sq[1]\n		[col,row]\n		\n	render1 : (pieces,c) ->\n		fc c\n		sc c\n		for row in range 8\n			for col in range 8\n				piece = pieces[8*col+row]\n				x = @x-3.5*@size+col*@size\n				y = @y-3.5*@size+(7-row)*@size\n				if piece == \"o\"\n					sw @size/2\n					point x,y\n				else if piece in \"KQRBN\"\n					sw 1-c\n					text piece,x, 1+y		\n				\n	render : () ->\n		sc()\n		for i in range 8\n			for j in range 8\n				if (i+j)%2 == 1 then fc 0.4 else fc 0.6\n				rect @x-3.5*@size+@size*i, @y-3.5*@size+@size*j, @size, @size\n		@render1 @white,1\n		@render1 @black,0\n\n	movePiece = (m,player) ->\n		[col1,row1] = getIndex m[0..1]\n		[col2,row2] = getIndex m[2..3]\n		player[col2*8+row2] = player[col1*8+row1]\n		player[col1*8+row1] = \"\"\n		\n	move : (n) ->\n		for i in range n\n			movePiece @moves[i], if i%2==0 then @white else @black\n		@render()\n\nbg 0.5\nbig = new Chess \"e2e4 e7e5 g1f3 b8c6 f1c4\"\nsmall = new Chess \"g2g4 e7e5 f2f4 d8h4\",18\n",
      c: {
        "big.move 0": 0,
        "big.move 1": 0,
        "big.move 2": 0,
        "big.move 3": 0,
        "big.move 4": 0,
        "big.move 5": 0,
        "small.move 0": 0,
        "small.move 1": 0,
        "small.move 2": 0,
        "small.move 3": 0,
        "small.move 4": 0
      }
    }
  },
  "L10: Guess a Number": {
    guess1: {
      b: "# LOC:11 bg rectMode for range rect\n",
      a: "bg 1\nrectMode CENTER,CENTER\nn = 200\nsize = n / 8\nsc 0\nfor i in range 8\n	x = i * size + size/2\n	y = size/2\n	w = size\n	h = size\n	rect x,y,w,h"
    },
    guess2: {
      b: "# LOC:16 bg rectMode for range rect textAlign text sc fc\n",
      a: "bg 1\nrectMode CENTER,CENTER\ntextAlign CENTER,CENTER\nn = 200\nsize = n / 8\nfor i in range 8\n	x = i * size + size/2\n	y = size/2\n	w = size\n	h = size\n	fc()\n	sc 0\n	rect x,y,w,h\n	fc 0\n	sc()\n	text i,x,y"
    },
    guess3: {
      b: "# LOC:17 bg rectMode for range rect textAlign text sc fc\n",
      a: "bg 1\nrectMode CENTER,CENTER\ntextAlign CENTER,CENTER\nn = 200\nsize = n / 8\nfor i in range 8\n	for j in range 8\n		x = i * size + size/2\n		y = j * size + size/2\n		w = size\n		h = size\n		fc()\n		sc 0\n		rect x,y,w,h\n		fc 0\n		sc()\n		text i+8*j,x,y"
    },
    guess4: {
      b: "# LOC:19 bg rectMode for range rect textAlign text sc fc\n\nf = (nx,ny) ->",
      a: "f = (nx,ny) ->\n	bg 1\n	rectMode CENTER,CENTER\n	textAlign CENTER,CENTER\n	n = 200\n	px = n/nx\n	py = n/ny\n	for i in range nx\n		for j in range ny\n			x = i * px + px/2\n			y = j * py + py/2\n			w = px\n			h = py\n			fc()\n			sc 0\n			rect x,y,w,h\n			fc 0\n			sc()\n			text i+nx*j,x,y",
      c: {
        "f 8,6": 0,
        "f 6,6": 0
      }
    },
    guess5: {
      b: "# LOC:23 bg rectMode for range rect textAlign text sc fc if else\n\nf = (nx,ny,start,stopp) ->",
      a: "f = (nx,ny,start,stopp) ->\n	bg 1\n	rectMode CENTER,CENTER\n	textAlign CENTER,CENTER\n	n = 200\n	px = n/nx\n	py = n/ny\n	for i in range nx\n		for j in range ny\n			x = i * px + px/2\n			y = j * py + py/2\n			w = px\n			h = py\n			fc()\n			sc 0\n			rect x,y,w,h\n			index = i+nx*j\n			sc()\n			if start <= index && index <= stopp\n				fc 0\n			else\n				fc 0.8\n			text index,x,y",
      c: {
        "f 8,8,18,45": 0,
        "f 6,6,10,25": 0
      }
    },
    guess6: {
      b: "# LOC:28 bg rectMode for range rect textAlign text sc fc if else\n\nf = (nx,ny,start,stopp,mx,my,target) ->",
      a: "f = (nx,ny,start,stopp,mx,my,target) ->\n	bg 1\n	rectMode CENTER,CENTER\n	textAlign CENTER,CENTER\n	n = 200\n	px = n/nx\n	py = n/ny\n	i = int mx/px\n	j = int my/py \n	clicked = i+nx*j\n	if clicked <= target then start = clicked + 1\n	if clicked >= target then stopp = clicked - 1\n	for i in range nx\n		for j in range ny\n			x = i * px + px/2\n			y = j * py + py/2\n			w = px\n			h = py\n			fc()\n			sc 0\n			rect x,y,w,h\n			index = i+nx*j\n			sc()\n			if start <= index and index <= stopp\n				fc 0\n			else\n				fc 0.8\n			text index,x,y",
      c: {
        "f 8,8,18,45,70,90,28": 0,
        "f 6,6,10,25,90,90,20": 0
      }
    }
  },
  Exhibition: {
    clown: {
      b: "# LOC:30 bg circle fc sc sw line lerp (David Larsson)\n",
      a: "bg 0, 1, 0, 0.5\nfc 1, 0, 0\ncircle 10, 10, 5\ncircle 20, 20, 10\nfor i in range 10\n	x = lerp 10, 20, i\n	y = x\n	r = lerp 5, 10, i\n	circle x, y, r\nfc 0, 1, 1\ncircle 190, 10, 5\ncircle 180, 20, 10\nfor i in range 10\n	x = lerp 190, 180, i\n	y = lerp 10, 20, i\n	r = lerp 5, 10, i\n	circle x, y, r\nfc 1\ncircle 100, 100, 50\nfc 0\ncircle 80, 80, 10\ncircle 120, 80, 10\nsc 1, 1, 0\nsw 5\nline 70, 105, 80, 120\nline 80, 120, 115, 120\nline 115, 120, 130, 105\nfc 1, 0, 0\nsc 1, 0, 0\ncircle 100, 100, 10"
    },
    tomteluva: {
      b: "# LOC:12 circle fc sc triangle (Sabrina Larsson)\n",
      a: "bg 0,1,0\nfc 1,0,0\nsc 1,0,0\ntriangle 60,140,100,60,140,140\nfc 1\nsc 1\ncircle 60,140,10\ncircle 80,140,10\ncircle 100,140,10\ncircle 120,140,10\ncircle 140,140,10\ncircle 100,60,10		"
    },
    snowman: {
      b: "# LOC:21 circle fc line sc triangle (David Larsson)\n",
      a: "fc 1\ncircle 100, 150, 50\ncircle 100, 70, 40\nfc 0\ncircle 80, 60, 8\ncircle 120, 60, 8\ncircle 85, 90, 6\ncircle 95, 95, 6\ncircle 115, 90, 6\ncircle 105, 95, 6\nfc 1, 0, 0, 0.5\ntriangle 100, 65, 90, 80, 105, 75\nsc 1, 1, 0\nsw 3\nline 50, 140, 30, 90\nline 35, 100, 40, 80\nline 140, 140, 170, 90\nline 160, 105, 155, 100\nfc 1\nsc 1\nrect 2, 180, 196, 20"
    },
    christmasTree: {
      b: "# LOC:35 bg circle fc line rect quad sc triangle (Sabrina Larsson)\n",
      a: "bg 0 \nfc 0, 1, 0 \nsc 0, 1, 0 \ntriangle 100, 100, 180, 160, 20, 160 \ntriangle 100, 60, 160, 120, 40, 120 \ntriangle 100, 40, 140, 80, 60, 80 \nfc 0.5 \nsc 0.5 \nrect 80, 160, 40, 20 \nfc 1, 1, 0 \nsc 1, 1, 0 \nquad 100, 0, 120, 20, 100, 40, 80, 20 \nrect 85, 5, 30, 30 \nsc 1, 1, 0 \nline 80, 60, 140, 120 \nline 60, 100, 120, 160 \nfc 1, 0, 0 \nsc 1, 0, 0 \ncircle 80, 100, 5 \ncircle 140, 140, 5 \ncircle 100, 60, 5 \ncircle 60, 160, 5 \ncircle 100, 120, 5 \nfc 1 \nsc 1 \nrect 0, 180, 200, 20 \ncircle 20, 20, 5 \ncircle 40, 40, 5 \ncircle 10, 80, 5 \ncircle 30, 140, 5 \ncircle 50, 100, 5 \ncircle 120, 50, 5 \ncircle 160, 20, 5 \ncircle 180, 80, 5 \ncircle 160, 130, 5 \ncircle 190, 180, 5 "
    },
    santa: {
      b: "# LOC:18 bg circle ellipse fc rect quad sc triangle (Sabrina Larsson)\n",
      a: "bg 0,0,1\nfc 1,0,0\nsc 1,0,0\nellipse 100,50,60,70\nrect 60,20,30,10\nquad 140,10,145,20,120,25,115,20\nfc 0\nsc 0\ncircle 50,25,10\nrect 70,40,60,10\ncircle 140,20,10\nsc 1,1,0\nrect 100,45,5,5\nfc 0.5\nsc 0.5\nrect 60,80,80,20\nrect 80,100,40,60\ntriangle 100,140,0,200,200,200"
    },
    dist: {
      b: "# LOC:10 bg circle dist fc lerp map sc\n",
      a: "bg 0\nfc 1\nsc()\nfor i in range 10\n	x = lerp 10,30,i\n	for j in range 10\n		y = lerp 10,30,j\n		d = dist 100,100,x,y\n		r = map(d,0,150,1,20)/2\n		circle x,y,r"
    },
    bulge: {
      b: "# LOC:10 bg circle dist fill map noStroke sin\n",
      a: "bg 0\nfill 255\nnoStroke()\nfor i in range 20\n	for j in range 20\n		x = i*200/20+5\n		y = j*200/20+5\n		r = map(sin(i*PI/20),-1,1,1,3) * map(sin(j*PI/20),-1,1,1,3) / 2\n		circle x,y,r"
    },
    wave: {
      b: "# LOC:9 circle colorMode fill map noStroke sin PI\n",
      a: "colorMode HSB,360,100,100\nnoStroke()\nbg 0\nfor i in range 21\n	fill map(i,0,20,0,360),100,100\n	a = map i,0,20,0,2*PI\n	x = 10*i\n	y = map sin(a),-1,1,0,200\n	circle x,y,3"
    },
    circle: {
      b: "# LOC:10 bg circle colorMode cos fc map PI sc sin\n",
      a: "bg 0\ncolorMode HSB,360,100,100\nfor i in range 20\n	r=map i,0,19,0,360\n	fill r,255,255\n	a=map i,0,20,0,2*PI\n	sc()\n	x=map cos(a),-1,1,0,200\n	y=map sin(a),-1,1,0,200\n	circle x,y,3"
    },
    circles: {
      b: "# LOC:12 bg circle colorMode cos fill map noStroke translate sin PI\n",
      a: "bg 0\nnoStroke()\ncolorMode HSB,360,100,100\ntranslate 100,100\nfor i in range 20\n	for j in range 11\n		fill map(i,0,20,0,360),255,255\n		a = map i,0,20,0,2*PI\n		x = map cos(a),-1,1,-j*10,j*10\n		y = map sin(a),-1,1,-j*10,j*10\n		r = 3\n		circle x,y,r"
    },
    sized_circles: {
      b: "# LOC:12 circle colorMode cos fill map noStroke PI sin translate\n",
      a: "bg 0\nnoStroke()\ncolorMode HSB,360,100,100\ntranslate 100,100\nfor i in range 20\n	fill map(i,0,20,0,360),255,255\n	a = map i,0,20,0,2*PI\n	for j in range 11\n		x = map cos(a),-1,1,-j*10,j*10\n		y = map sin(a),-1,1,-j*10,j*10\n		r = map(j,0,10,0,10)/2\n		circle x,y,r"
    },
    rotated_circles: {
      b: "# LOC:17 circle cos map PI push pop rotate sin translate\n",
      a: "colorMode HSB,360,100,100\nsc()\nbg 0\ntranslate 100,100\nfor i in range 20\n	r = map i,0,20,0,360\n	a=map i,0,20,0,2*PI\n	for j in range 11\n		push()\n		rotate map j,0,10,0,360\n		fill r,255,255\n		x=map cos(a),-1,1,-j*10,j*10\n		y=map sin(a),-1,1,-j*10,j*10\n		circle x,y,j/2\n		pop()"
    },
    gravity: {
      b: "# LOC:6 circle lerp\n",
      a: "fc 1\nfor i in range 15\n	x=5+10*i\n	y=5+lerp(0,lerp(0,1,i),i)\n	circle x,y,5"
    },
    hypnoticA: {
      b: "# LOC:6 -> bg circle cos fc sc sin\n\nhypnoticA = () ->",
      a: "hypnoticA = () ->\n	bg 0.5, 0, 0\n	sc()\n	fc 1\n	for i in range 100\n		x = 100 + cos(i) * i\n		y = 100 + sin(i) * i\n		circle x, y, 5",
      c: {
        "hypnoticA()": 0
      }
    },
    hypnoticB: {
      b: "# LOC:7 -> bg circle cos fc map sc sin\n\nhypnoticB = (t) ->",
      a: "hypnoticB = (t) ->\n	bg 0.5, 0, 0\n	sc()\n	fc 1\n	for i in range 100\n		x = 100 + cos(i) * i\n		y = 100 + sin(i) * i\n		speed = i/10.0\n		r = map sin(t*speed), -1, 1, 2, 5\n		circle x, y, r",
      c: {
        "hypnoticB 1": 0,
        "hypnoticB 5": 0
      }
    }
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRhdGEuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFJQSxJQUFBOztBQUFBLElBQUEsR0FHQztFQUFBLG9CQUFBLEVBR0M7SUFBQSxXQUFBLEVBQ0M7TUFBQSxDQUFBLEVBQUcsd2VBQUg7TUFjQSxDQUFBLEVBQUcsTUFkSDtLQUREO0lBaUJBLFdBQUEsRUFDQztNQUFBLENBQUEsRUFBRyxjQUFIO01BSUEsQ0FBQSxFQUFHLFFBSkg7S0FsQkQ7SUF3QkEsV0FBQSxFQUNDO01BQUEsQ0FBQSxFQUFHLGNBQUg7TUFJQSxDQUFBLEVBQUcsVUFKSDtLQXpCRDtJQStCQSxXQUFBLEVBQ0M7TUFBQSxDQUFBLEVBQUcsY0FBSDtNQUlBLENBQUEsRUFBRyxVQUpIO0tBaENEO0lBc0NBLFlBQUEsRUFDQztNQUFBLENBQUEsRUFBRyxvREFBSDtNQVFBLENBQUEsRUFBRyw4RkFSSDtLQXZDRDtJQTJEQSxTQUFBLEVBQ0M7TUFBQSxDQUFBLEVBQUcsd0JBQUg7TUFJQSxDQUFBLEVBQUcsdUhBSkg7S0E1REQ7SUE4RUEsYUFBQSxFQUNDO01BQUEsQ0FBQSxFQUFHLHdCQUFIO01BSUEsQ0FBQSxFQUFHLG9OQUpIO0tBL0VEO0lBMEdBLGFBQUEsRUFDQztNQUFBLENBQUEsRUFBRyx3QkFBSDtNQUlBLENBQUEsRUFBRyw4TkFKSDtLQTNHRDtJQW9JQSxRQUFBLEVBQ0M7TUFBQSxDQUFBLEVBQUcsd0JBQUg7TUFJQSxDQUFBLEVBQUcsdU9BSkg7S0FySUQ7R0FIRDtFQXVLQSxvQkFBQSxFQUdDO0lBQUEsS0FBQSxFQUNDO01BQUEsQ0FBQSxFQUFJLHFCQUFKO01BSUEsQ0FBQSxFQUFHLGdZQUpIO0tBREQ7SUF1Q0EsSUFBQSxFQUNDO01BQUEsQ0FBQSxFQUFHLDRCQUFIO01BSUEsQ0FBQSxFQUFHLHVKQUpIO0tBeENEO0lBMkRBLFdBQUEsRUFDQztNQUFBLENBQUEsRUFBRSxxQkFBRjtNQUlBLENBQUEs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QXBPRDtJQXVQQSxhQUFBLEVBQ0M7TUFBQSxDQUFBLEVBQUUsb0VBQUY7TUFJQSxDQUFBLEVBQUUsOFFBSkY7S0F4UEQ7SUEyUUEsZUFBQSxFQUNDO01BQUEsQ0FBQSxFQUFFLDREQUFGO01BSUEsQ0FBQSxFQUFFLGdTQUpGO0tBNVFEO0lBa1NBLE9BQUEsRUFDQztNQUFBLENBQUEsRUFBRyx1QkFBSDtNQUlBLENBQUEsRUFBRywrRUFKSDtLQW5TRDtJQStTQSxTQUFBLEVBQ0M7TUFBQSxDQUFBLEVBQUcseURBQUg7TUFLQSxDQUFBLEVBQUcsdUlBTEg7TUFlQSxDQUFBLEVBQUc7UUFBQSxhQUFBLEVBQWMsQ0FBZDtPQWZIO0tBaFREO0lBaVVBLFNBQUEsRUFDQztNQUFBLENBQUEsRUFBRyw4REFBSDtNQUtBLENBQUEsRUFBRywrTEFMSDtNQWlCQSxDQUFBLEVBQ0M7UUFBQSxhQUFBLEVBQWMsQ0FBZDtRQUNBLGFBQUEsRUFBYyxDQURkO09BbEJEO0tBbFVEO0dBMW9ERCIsInNvdXJjZXNDb250ZW50IjpbIiMgYiA6IGNvbW1lbnQgbGluZS4gTE9DIGFuZCBrZXl3b3JkIGNsdWVzXHJcbiMgYSA6IGZhY2l0XHJcbiMgYyA6IGNhbGwgXHJcblxyXG5kYXRhID0gXHJcblxyXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblx0XCJMMTogYmcgcG9pbnQgc2Mgc3dcIjogXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcblx0XHRCYWNrZ3JvdW5kMTogXHJcblx0XHRcdGI6IFwiXCJcIlxyXG4jIERlbiDDtnZlcnN0YSBiaXRtYXBwZW4gdGlsbCBow7ZnZXIgdmlzYXIgcmVzdWx0YXRldCBhdiBkaW4ga29kLlxyXG4jIERlbiBtZWxsZXJzdGEgYml0bWFwcGVuIHNrYSBkdSBlZnRlcmxpa25hLlxyXG4jIERlbiB1bmRlcnN0YSBiaXRtYXBwZW4gdmlzYXIgc2tpbGxuYWRlbiBtZWxsYW4gZGUgdHbDpSBhbmRyYS5cclxuXHJcbiMgVHJ5Y2sgcMOlIFBnRG4gZsO2ciBhdHQga29tbWEgdGlsbCBzaXN0YSByYWRlbi5cclxuIyBTa3JpdiBpbiBmw7ZsamFuZGUga29tbWFuZG86IGJnIDFcclxuIyBLb250cm9sbGVyYSBhdHQgZGUgYsOlZGEgw7Z2cmUgYml0bWFwcGFybmEgbnUgw6RyIGxpa2EuXHJcblxyXG4jIEtsaWNrYSBww6UgQmFja2dyb3VuZDIgZsO2ciBhdHQga29tbWEgdGlsbCBuw6RzdGEgw7Z2bmluZy5cclxuIyBLbGlja2EgcMOlIEhlbHAgbmVyZSB0aWxsIHbDpG5zdGVyIGbDtnIgbWVyYSBpbmZvcm1hdGlvbi5cclxuIyBLbGlja2EgcMOlIFJlZmVyZW5jZSBmw7ZyIGF0dCBzZSBmbGVyIGtvbW1hbmRvbi5cclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOiBcImJnIDFcIlxyXG5cclxuXHRcdEJhY2tncm91bmQyOiBcclxuXHRcdFx0YjogXCJcIlwiXHJcbiMgTE9DOjEgYmdcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOiBcImJnIDAuNVwiXHJcblxyXG5cdFx0QmFja2dyb3VuZDM6IFxyXG5cdFx0XHRiOiBcIlwiXCJcclxuIyBMT0M6MSBiZ1xyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6IFwiYmcgMSwwLDBcIlxyXG5cclxuXHRcdEJhY2tncm91bmQ0OiBcclxuXHRcdFx0YjogXCJcIlwiXHJcbiMgTE9DOjEgYmdcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOiBcImJnIDEsMSwwXCJcclxuXHJcblx0XHRDb3JuZXJQb2ludHM6IFxyXG5cdFx0XHRiOiBcIlwiXCJcclxuIyBMT0M6OSBzYyBzdyBwb2ludFxyXG5cclxuc3cgNVxyXG5zYyAxLDAsMFxyXG5wb2ludCAwLDBcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxuc3cgNVxyXG5zYyAxLDAsMFxyXG5wb2ludCAwLDBcclxuc2MgMCwxLDBcclxucG9pbnQgMjAwLDBcclxuc2MgMSwxLDBcclxucG9pbnQgMCwyMDBcclxuc2MgMFxyXG5wb2ludCAyMDAsMjAwXHJcblwiXCJcIlxyXG5cclxuXHRcdE1pZFBvaW50czogXHJcblx0XHRcdGI6IFwiXCJcIlxyXG4jIExPQzoxMSBzYyBzdyBwb2ludFxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5zdyA1XHJcbnNjIDEsMCwwXHJcbnBvaW50IDEwMCwxMDBcclxuc2MgMCwxLDBcclxucG9pbnQgMTAwLDBcclxuc2MgMSwxLDBcclxucG9pbnQgMCwxMDBcclxuc2MgMFxyXG5wb2ludCAyMDAsMTAwXHJcbnNjIDFcclxucG9pbnQgMTAwLDIwMFxyXG5cIlwiXCJcclxuXHJcblx0XHRDb3JuZXJQb2ludHMzOiBcclxuXHRcdFx0YjogXCJcIlwiXHJcbiMgTE9DOjE3IHNjIHN3IHBvaW50XHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbnN3IDVcclxuc2MgMSwwLDBcclxucG9pbnQgMjAsMFxyXG5wb2ludCAyMCwyMFxyXG5wb2ludCAwLDIwXHJcblxyXG5zYyAwLDEsMFxyXG5wb2ludCAxODAsMFxyXG5wb2ludCAxODAsMjBcclxucG9pbnQgMjAwLDIwXHJcblxyXG5zYyAxLDEsMFxyXG5wb2ludCAyMCwxODBcclxucG9pbnQgMjAsMjAwXHJcbnBvaW50IDAsMTgwXHJcblxyXG5zYyAxXHJcbnBvaW50IDE4MCwxODBcclxucG9pbnQgMTgwLDIwMFxyXG5wb2ludCAyMDAsMTgwXHJcblwiXCJcIlxyXG5cclxuXHRcdENvcm5lclBvaW50czc6IFxyXG5cdFx0XHRiOiBcIlwiXCJcclxuIyBMT0M6MTcgc2Mgc3cgcG9pbnRcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxuc3cgNVxyXG5zYyAxLDAsMFxyXG5wb2ludCAzMCwwXHJcbnBvaW50IDMwLDEwXHJcbnBvaW50IDMwLDIwXHJcbnBvaW50IDMwLDMwXHJcbnBvaW50IDEwLDMwXHJcbnBvaW50IDIwLDMwXHJcbnBvaW50IDAsMzBcclxuXHJcbnNjIDAsMSwwXHJcbnBvaW50IDE3MCwyMDBcclxucG9pbnQgMTcwLDE5MFxyXG5wb2ludCAxNzAsMTgwXHJcbnBvaW50IDE3MCwxNzBcclxucG9pbnQgMTkwLDE3MFxyXG5wb2ludCAxODAsMTcwXHJcbnBvaW50IDIwMCwxNzBcclxuXCJcIlwiXHJcblxyXG5cdFx0RGlhZ29uYWw6IFxyXG5cdFx0XHRiOiBcIlwiXCJcclxuIyBMT0M6MjMgc2Mgc3cgcG9pbnRcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxuc2MgMSwwLDBcclxuc3cgMTFcclxucG9pbnQgMjAwLDBcclxuc3cgMTBcclxucG9pbnQgMTgwLDIwXHJcbnN3IDlcclxucG9pbnQgMTYwLDQwXHJcbnN3IDhcclxucG9pbnQgMTQwLDYwXHJcbnN3IDdcclxucG9pbnQgMTIwLDgwXHJcbnN3IDZcclxucG9pbnQgMTAwLDEwMFxyXG5zdyA1XHJcbnBvaW50IDgwLDEyMFxyXG5zdyA0XHJcbnBvaW50IDYwLDE0MFxyXG5zdyAzXHJcbnBvaW50IDQwLDE2MFxyXG5zdyAyXHJcbnBvaW50IDIwLDE4MFxyXG5zdyAxXHJcbnBvaW50IDAsMjAwXHJcblwiXCJcIlxyXG5cclxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5cdFwiTDI6IGNpcmNsZSBmYyB0ZXh0XCIgOiBcclxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5cclxuXHRcdGRpY2VzIDogXHJcblx0XHRcdGIgOiBcIlwiXCJcclxuIyBMT0M6MjYgcG9pbnQgc2NcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxucG9pbnQgMTAsMTBcclxuXHJcbnNjIDEsMCwwIFxyXG5wb2ludCAxODUsNSBcclxucG9pbnQgMTk1LDE1IFxyXG5cclxuc2MgMCwxLDAgXHJcbnBvaW50IDg1LDY1IFxyXG5wb2ludCA5MCw3MCBcclxucG9pbnQgOTUsNzUgXHJcblxyXG5zYyAxLDEsMCBcclxucG9pbnQgMTY1LDEwNSBcclxucG9pbnQgMTY1LDExNSBcclxucG9pbnQgMTc1LDEwNSBcclxucG9pbnQgMTc1LDExNSBcclxuXHJcbnNjIDEsMCwxIFxyXG5wb2ludCA0NSwxMjUgXHJcbnBvaW50IDQ1LDEzNSBcclxucG9pbnQgNTAsMTMwIFxyXG5wb2ludCA1NSwxMjUgXHJcbnBvaW50IDU1LDEzNSBcclxuXHJcbnNjIDAsMSwxIFxyXG5wb2ludCAxMDUsMTY1IFxyXG5wb2ludCAxMDUsMTcwIFxyXG5wb2ludCAxMDUsMTc1IFxyXG5wb2ludCAxMTUsMTY1IFxyXG5wb2ludCAxMTUsMTcwIFxyXG5wb2ludCAxMTUsMTc1IFxyXG5cIlwiXCJcdFxyXG5cdFx0XHJcblx0XHRGaXZlOiBcclxuXHRcdFx0YjogXCJcIlwiXHJcbiMgTE9DOjEyIGJnIGNpcmNsZSBmYyBzY1xyXG5cclxuXCJcIlwiIFxyXG5cdFx0XHRhOiBcIlwiXCJcclxuYmcgMC41XHJcbnNjKClcclxuZmMgMVxyXG5jaXJjbGUgMTAwLDEwMCwyMFxyXG5mYyAxLDAsMFxyXG5jaXJjbGUgNDAsNDAsMjBcclxuZmMgMSwxLDBcclxuY2lyY2xlIDQwLDE2MCwyMFxyXG5mYyAwLDEsMFxyXG5jaXJjbGUgMTYwLDE2MCwyMFxyXG5mYyAwLDAsMVxyXG5jaXJjbGUgMTYwLDQwLDIwXHJcblwiXCJcIiBcclxuXHJcblx0XHR3aGl0ZUNpcmNsZTogXHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjIgY2lyY2xlIGZjXHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZmMgMVxyXG5jaXJjbGUgNjAsODAsMzBcclxuXCJcIlwiXHJcblxyXG5cdFx0d2hpdGVFbXB0eUNpcmNsZTogXHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjQgY2lyY2xlIGZjIHNjIHN3XHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuc2MgMVxyXG5mYygpXHJcbnN3IDJcclxuY2lyY2xlIDcwLDkwLDQwXHJcblwiXCJcIlxyXG5cclxuXHRcdHR3b0Rpc2NzQTogXHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjQgY2lyY2xlIGZjXHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZmMgMSwwLDAgXHJcbmNpcmNsZSA4MCwxMDAsNDBcclxuZmMgMCwxLDBcclxuY2lyY2xlIDEwMCwxMjAsNTBcclxuXCJcIlwiXHJcblxyXG5cdFx0dHdvRGlzY3NCOlxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzo0IGNpcmNsZSBmY1xyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZjIDEsMCwwXHJcbmNpcmNsZSA4MCwxMDAsNDBcclxuZmMgMCwxLDAsIDAuNVxyXG5jaXJjbGUgMTIwLDEwMCw1MFxyXG5cIlwiXCJcclxuXHJcblx0XHR0ZXh0QTogXHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjMgZmMgdGV4dFNpemUgdGV4dFxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZjIDEsMSwwXHJcbnRleHRTaXplIDMyXHJcbnRleHQgJ0NvZmZlZXNjcmlwdCcsMTAwLDEwMFxyXG5cIlwiXCJcclxuXHJcblx0XHR0ZXh0QjogXHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjQgZmMgdGV4dCB0ZXh0QWxpZ24gdGV4dFNpemUgdGV4dFxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZjIDEsMSwwXHJcbnRleHRTaXplIDMyXHJcbnRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcbnRleHQgJ0NvZmZlZXNjcmlwdCcsMTAwLDEwMFxyXG5cIlwiXCJcclxuXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcdFx0XHRcdFxyXG5cdFwiTDM6IGVsbGlwc2UgcmVjdFwiIDogXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcblx0XHRncmVlbkVsbGlwc2U6IFxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzoyIGVsbGlwc2UgZmNcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5mYyAwLDEsMFxyXG5lbGxpcHNlIDEyMCw2MCwgNjAsNDBcclxuXCJcIlwiXHJcblxyXG5cdFx0Z3JlZW5SZWN0OiBcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6MiBmYyByZWN0XHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZmMgMCwxLDBcclxucmVjdCA2MCw4MCwgNDAsNTBcclxuXCJcIlwiXHJcblxyXG5cdFx0cmVkUmVjdDpcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6MiBmYyByZWN0XHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZmMgMSwwLDBcclxucmVjdCA4MCw3MCwgNDAsMTAwXHJcblwiXCJcIlxyXG5cclxuXHRcdGNyb3NzOiBcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6NCBmYyByZWN0XHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZmMgMSwwLDBcclxuc2MoKVxyXG5yZWN0IDg1LDcwLCA3MCwxMFxyXG5yZWN0IDExNSw0MCwgMTAsMTAwXHJcblwiXCJcIlxyXG5cclxuXHRcdHNxdWFyZUhvbGU6IFxyXG5cdFx0XHRiIDogXCJcIlwiXHJcbiMgTE9DOjExIGZjIHJlY3Qgc2Mgc3dcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5mYyAwLDEsMVxyXG5zYygpXHJcbnJlY3QgNjAsNjAsIDgwLDIwXHJcbnJlY3QgNjAsMTIwLCA4MCwyMFxyXG5yZWN0IDYwLDYwLCAyMCw4MFxyXG5yZWN0IDEyMCw2MCwgMjAsODBcclxuZmMoKVxyXG5zYyAxLDAsMFxyXG5zdyAzXHJcbnJlY3QgNjAsNjAsIDgwLDgwXHJcbnJlY3QgODAsODAsIDQwLDQwXHJcblwiXCJcIiBcclxuXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHRcIkw0OiBmb3IgbGVycCByZWN0XCIgOiBcclxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5cclxuXHRcdGZvcjAxOiBcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6MyBmb3IgbGVycCByZWN0XHJcblxyXG5yZWN0ICA1LDUsMTAsMTBcclxucmVjdCAyNSw1LDEwLDEwXHJcbmZvciBpIGluIHJhbmdlIDBcclxuXHR4ID0gbGVycCA1LDI1LGkgXHJcblx0cmVjdFxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuXHR4ID0gNSsyMCppXHJcblx0cmVjdCB4LDUsIDEwLDEwXHJcblwiXCJcIlxyXG5cclxuXHRcdGZvcjAyOiBcclxuXHRcdFx0YjpcIiMgTE9DOjMgZm9yIGxlcnAgcmVjdFxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZvciBpIGluIHJhbmdlIDEwXHJcblx0eSA9IDUrMjAqaVxyXG5cdHJlY3QgNSx5LCAxMCwxMFxyXG5cIlwiXCJcclxuXHJcblx0XHRmb3IwMzogXHJcblx0XHRcdGI6XCIjIExPQzo0IGZvciBsZXJwIHJlY3RcXG5cIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5mb3IgaSBpbiByYW5nZSAxMFxyXG5cdHggPSA1KzIwKmlcclxuXHR5ID0gNSsyMCppXHJcblx0cmVjdCB4LHksIDEwLDEwXHJcblwiXCJcIlxyXG5cclxuXHRcdGZvcjA0OiBcclxuXHRcdFx0YjpcIiMgTE9DOjUgZm9yIGxlcnAgcmVjdFxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZvciBpIGluIHJhbmdlIDEwXHJcblx0Zm9yIGogaW4gcmFuZ2UgMTBcclxuXHRcdHggPSA1KzIwKmlcclxuXHRcdHkgPSA1KzIwKmpcclxuXHRcdHJlY3QgeCx5LCAxMCwxMFxyXG5cIlwiXCJcclxuXHJcblx0XHRmb3IwNTogXHJcblx0XHRcdGI6XCIjIExPQzo3IGZvciBsZXJwIHJlY3QgcmVjdE1vZGVcXG5cIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5yZWN0TW9kZSBDRU5URVJcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuXHR4ID0gMTArMjAqaVxyXG5cdHkgPSAxMFxyXG5cdHcgPSAyKmlcclxuXHRoID0gMippXHJcblx0cmVjdCB4LHksIHcsaFxyXG5cIlwiXCJcclxuXHJcblx0XHRmb3IwNjogXHJcblx0XHRcdGI6XCIjIExPQzo4IGZjIGZvciBsZXJwIHJlY3QgcmVjdE1vZGVcXG5cIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5yZWN0TW9kZSBDRU5URVJcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuXHRmYyBpLzEwLjAsMCwwXHJcblx0eCA9IDEwKzIwKmlcclxuXHR5ID0gMTBcclxuXHR3ID0gMippXHJcblx0aCA9IDIqaVxyXG5cdHJlY3QgeCx5LHcsaFxyXG5cIlwiXCJcclxuXHJcblx0XHRmb3IwNzogXHJcblx0XHRcdGI6XCIjIExPQzo2IGZvciBmYyBjaXJjbGUgbGVycFxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZvciBpIGluIHJhbmdlIDEwXHJcblx0ZmMgaS8xMC4wLDAsMFxyXG5cdHggPSAxMCsyMCppXHJcblx0eSA9IDEwXHJcblx0ciA9IGlcclxuXHRjaXJjbGUgeCx5LHJcclxuXCJcIlwiXHJcblxyXG5cdFx0Zm9yMDg6IFxyXG5cdFx0XHRiOlwiIyBMT0M6NCBmb3IgZmMgY2lyY2xlIGxlcnBcXG5cIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5mb3IgaSBpbiByYW5nZSAxMCwwLC0xXHJcblx0ZmMgaS8xMC4wLDAsMFxyXG5cdHIgPSAxMCAqIGlcclxuXHRjaXJjbGUgMTAwLDEwMCwgclxyXG5cIlwiXCJcclxuXHJcblx0XHRmb3IwOTogXHJcblx0XHRcdGI6XCIjIExPQzo2IGZvciBmYyBjaXJjbGUgbGVycFxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZvciBpIGluIHJhbmdlIDEwLDAsLTFcclxuXHRmYyBpLzEwLjAsMCwwXHJcblx0eCA9IDEwKmlcclxuXHR5ID0gMTAqaVxyXG5cdHIgPSAxMCppXHJcblx0Y2lyY2xlIHgseSxyXHJcblwiXCJcIlxyXG5cclxuXHRcdGZvcjEwOiBcclxuXHRcdFx0YjpcIiMgTE9DOjcgZm9yIGZjIGNpcmNsZSBsZXJwXFxuXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuXHRmb3IgaiBpbiByYW5nZSAxMFxyXG5cdFx0ZmMgaS8xMC4wLGovMTAuMCwwXHJcblx0XHR4ID0gMTArMjAqaVxyXG5cdFx0eSA9IDEwKzIwKmpcclxuXHRcdHIgPSAoaStqKS8yXHJcblx0XHRjaXJjbGUgeCx5LHJcclxuXCJcIlwiXHJcblxyXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHRcclxuXHRcIkw1OiBsaW5lIGZvciBsZXJwXCIgOlxyXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblxyXG5cdFx0SG9yaXpvbnRhbExpbmU6IFxyXG5cdFx0XHRiOiBcIiMgTE9DOjIgbGluZSBzY1xcblwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5zYyAxLDAsMVxyXG5saW5lIDEwLDcwLCAxOTAsNzBcclxuXCJcIlwiXHJcblxyXG5cdFx0VmVydGljYWxMaW5lOiBcclxuXHRcdFx0YjogXCIjIExPQzozIGxpbmUgc2Mgc3dcXG5cIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxuc2MgMSwxLDBcclxuc3cgMTBcclxubGluZSAxMTAsMzAsIDExMCwxNzBcclxuXCJcIlwiXHJcblxyXG5cdFx0TGluZTogXHJcblx0XHRcdGI6IFwiIyBMT0M6MiBsaW5lIHNjXFxuXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbnNjIDEsMSwwXHJcbmxpbmUgMjAsMCwgMjAwLDIwXHJcblwiXCJcIlxyXG5cclxuXHRcdEdyaWQ6IFxyXG5cdFx0XHRiOlwiIyBMT0M6NSBmb3IgbGluZSBzYyBzd1xcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbnNjIDEsMSwwXHJcbnN3IDJcclxuZm9yIGkgaW4gcmFuZ2UgMTAsMjAwLDEwXHJcblx0bGluZSAxMCxpLDE5MCxpXHJcblx0bGluZSBpLDE5MCxpLDEwXHJcblwiXCJcIlxyXG5cclxuXHRcdFNraXNsb3BlOlxyXG5cdFx0XHRiOiBcIiMgTE9DOjQgYmcgZm9yIGxlcnAgbGluZSBzY1wiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5iZyAwXHJcbnNjIDEsMCwwXHJcbmZvciBpIGluIHJhbmdlIDIxXHJcblx0bGluZSBpKjEwLDAsMjAwLGkqMTBcclxuXCJcIlwiXHJcblxyXG5cdFx0U3Vuc2hpbmU6XHJcblx0XHRcdGI6IFwiIyBMT0M6NSBiZyBmb3IgbGVycCBsaW5lIHNjXFxuXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbmJnIDBcclxuc2MgMSwxLDBcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuXHRsaW5lIGkqMjAsMCwyMDAtaSoyMCwyMDBcclxuXHRsaW5lIDAsMjAraSoyMCwyMDAsMTgwLWkqMjBcclxuXCJcIlwiXHJcblx0XHRcclxuXHRcdExpbmVzOiAgXHJcblx0XHRcdGI6XCIjIExPQzo1IGJnIGZvciBsZXJwIGxpbmUgKGJ5IE5vZWwgV2F0c29uKVxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmJnIDBcclxuZm9yIGkgaW4gcmFuZ2UgMzdcclxuXHRsaW5lIDEwLDEwLDE5MCwxMCtpKjVcclxuXHRsaW5lIDEwLDEwMCwxOTAsMTAraSo1XHJcblx0bGluZSAxMCwxOTAsMTkwLDEwK2kqNVxyXG5cIlwiXCJcclxuXHJcblx0XHRjaGVzc1JvdzogXHJcblx0XHRcdGI6XCIjIExPQzo1ICUgYmcgZmMgZm9yIHJlY3RcXG5cIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5iZyAwLjVcclxuZm9yIGkgaW4gcmFuZ2UgOFxyXG5cdGZjIGklMlxyXG5cdHggPSAyMCsyMCppIFxyXG5cdHJlY3QgeCwyMCwgMjAsMjBcclxuXCJcIlwiXHJcblx0XHRcclxuXHRcdGNoZXNzQm9hcmQ6IFxyXG5cdFx0XHRiOlwiIyBMT0M6NyBiZyBmYyBmb3IgcmVjdFxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmJnIDAuNVxyXG5mb3IgaSBpbiByYW5nZSA4XHJcblx0Zm9yIGogaW4gcmFuZ2UgOFxyXG5cdFx0ZmMgKGkraiklMlxyXG5cdFx0eCA9IDIwKzIwKmlcclxuXHRcdHkgPSAyMCsyMCpqXHJcblx0XHRyZWN0IHgseSwgMjAsMjBcclxuXCJcIlwiXHJcblx0XHRcclxuXHRcdGNoZXNzQ3Jvc3MgOiBcclxuXHRcdFx0YjogXCIjIExPQzo4IGZvciByZWN0IGlmIGZjIChEYXZpZCBMYXJzc29uKVxcblwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5mb3IgaSBpbiByYW5nZSAxMFxyXG5cdGZvciBqIGluIHJhbmdlIDEwXHJcblx0XHRmYygpXHJcblx0XHRpZiBpLWogaW4gWy0yLDAsMl0gdGhlbiBmYyAxLDEsMFxyXG5cdFx0aWYgaStqIGluIFs3LDksMTFdIHRoZW4gZmMgMSwwLDBcclxuXHRcdHggPSAyMCppXHJcblx0XHR5ID0gMjAqalxyXG5cdFx0cmVjdCB4LHksIDIwLDIwXHJcblwiXCJcIlxyXG5cclxuXHRcdGJvYXJkR2FtZSA6XHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjEwIGZvciBpbiByYW5nZSBjaXJjbGUgYmcgZmMgc2NcclxuXHJcbmJvYXJkID0gKHgseSxkLHIsbikgLT5cclxuXHRcdFx0XCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbm9uZSA9IChkLHIseDAseTAsbSxuKSAtPlxyXG5cdGZvciBpIGluIHJhbmdlIG1cclxuXHRcdGZvciBqIGluIHJhbmdlIG5cclxuXHRcdFx0Y2lyY2xlIHgwK2QqaSx5MCtkKmosclxyXG5cclxuYm9hcmQgPSAoeCx5LGQscixuKSAtPlxyXG5cdGJnIDFcclxuXHRmYyAwXHJcblx0c2MoKVxyXG5cdG9uZSBkLHIseC1uKmQsIHktZCwyKm4rMSwzXHJcblx0b25lIGQscix4LWQsIHktbipkLDMsMipuKzFcIlwiXCJcclxuXHRcdFx0YzpcclxuXHRcdFx0XHRcImJvYXJkIDEwMCwxMDAsMTgsIDcsNVwiIDogMFxyXG5cdFx0XHRcdFwiYm9hcmQgMTAwLDEwMCwyNSwxMCwzXCIgOiAwXHJcblx0XHRcdFx0XCJib2FyZCAxMDAsMTAwLDM1LDE1LDJcIiA6IDBcclxuXHRcdFx0XHRcImJvYXJkICA1MCwgNTAsIDksIDQsNVwiIDogMFxyXG5cdFx0XHRcdFwiYm9hcmQgIDUwLDE1MCwxMiwgNSwzXCIgOiAwXHJcblx0XHRcdFx0XCJib2FyZCAxNTAsMTUwLDE4LCA4LDJcIiA6IDBcclxuXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHRcIkw2OiB0cmlhbmdsZSBxdWFkIGFyY1wiIDpcclxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5cclxuXHRcdFRyaWFuZ2xlOiBcclxuXHRcdFx0YjpcIiMgTE9DOjIgZmMgdHJpYW5nbGVcXG5cIiBcclxuXHRcdFx0YTpcIlwiXCJcclxuZmMgMVxyXG50cmlhbmdsZSAyMCw0MCwgMTYwLDEwMCwgMTAwLDE0MFxyXG5cIlwiXCJcclxuXHJcblx0XHRRdWFkOiBcclxuXHRcdFx0YjpcIiMgTE9DOjIgZmMgcXVhZFxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZjIDEsMSwwXHJcbnF1YWQgMTUwLDEwMCwgMTgwLDIwLCA0MCwyMCwgMTAwLDE0MFxyXG5cIlwiXCJcclxuXHJcblx0XHRQYWNNYW46IFxyXG5cdFx0XHRiOlwiIyBMT0M6MiBhcmMgZmMgcmFkaWFucyBQSUVcXG5cIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5mYyAxLDEsMFxyXG5hcmMgMTAwLDEwMCwgODAsODAsIHJhZGlhbnMoLTEzNSkscmFkaWFucygxMzUpLCBQSUVcclxuXCJcIlwiXHJcblxyXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblx0XCJMNzogdHJhbnNsYXRlIHJvdGF0ZSBwdXNoIHBvcFwiIDogXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcblx0XHR0ZXh0QzogXHJcblx0XHRcdGI6XCIjIExPQzo2IGZjIHJkIHRleHRBbGlnbiB0ZXh0U2l6ZSB0cmFuc2xhdGUgdGV4dFxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZjIDEsMSwwXHJcbnRleHRTaXplIDMyXHJcbnRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcbnRyYW5zbGF0ZSAxMDAsMTAwXHJcbnJkIDkwXHJcbnRleHQgJ0NvZmZlZXNjcmlwdCcsMCwwXHJcblwiXCJcIlxyXG5cclxuXHRcdHRleHREOiBcclxuXHRcdFx0YjpcIiMgTE9DOjYgZmMgdGV4dEFsaWduIHRleHRTaXplIHRyYW5zbGF0ZSByZCB0ZXh0XFxuXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZmMgMSwxLDBcclxudGV4dFNpemUgMzJcclxudGV4dEFsaWduIENFTlRFUixDRU5URVJcclxudHJhbnNsYXRlIDEwMCwxMDBcclxucmQgMTgwXHJcbnRleHQgJ0NvZmZlZXNjcmlwdCcsMCwwXHJcblwiXCJcIlxyXG5cdFx0XHJcblx0XHRyb3RhdGVkRWxsaXBzZTogXHJcblx0XHRcdGI6XCIjIExPQzo1IGVsbGlwc2UgcmQgdHJhbnNsYXRlXFxuXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuZmMgMSwwLDBcclxuc2MoKVxyXG50cmFuc2xhdGUgMTAwLDEwMFxyXG5yZCA0NVxyXG5lbGxpcHNlIDAsMCwgODAsNDBcclxuXCJcIlwiXHJcblxyXG5cdFx0cm90YXRlZFJlY3RBOiBcclxuXHRcdFx0YjpcIiMgTE9DOjQgZmMgcmVjdFxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZjIDEsMCwwXHJcbnJlY3QgNjAsMTAwLCA0MCw0MFxyXG5mYyAwLDEsMFxyXG5yZWN0IDE0MCwxMDAsIDQwLDQwXHJcblwiXCJcIlxyXG5cclxuXHRcdHJvdGF0ZWRSZWN0QjogXHJcblx0XHRcdGI6XCIjIExPQzoxMiBwdXNoIHBvcCByZCByZWN0IHRyYW5zbGF0ZVxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbnB1c2goKVxyXG5mYyAxLDAsMFxyXG50cmFuc2xhdGUgNjAsMTAwXHJcbnJkIDQ1XHJcbnJlY3QgMCwwLCA0MCw0MFxyXG5wb3AoKVxyXG5wdXNoKClcclxuZmMgMCwxLDBcclxudHJhbnNsYXRlIDE0MCwxMDBcclxucmQgNDVcclxucmVjdCAwLDAsIDQwLDQwXHJcbnBvcCgpXHJcblwiXCJcIlxyXG5cclxuXHRcdHJvdGF0ZWRSZWN0QzogXHJcblx0XHRcdGI6XCIjIExPQzoxMyBmYyBwdXNoIHBvcCByZCByZWN0IHRyYW5zbGF0ZVxcblwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbnJlY3RNb2RlIENFTlRFUlxyXG5wdXNoKClcclxuZmMgMSwwLDBcclxudHJhbnNsYXRlIDgwLDEyMFxyXG5yZCA0NVxyXG5yZWN0IDAsMCwgNDAsNDBcclxucG9wKClcclxucHVzaCgpXHJcbmZjIDAsMSwwXHJcbnRyYW5zbGF0ZSAxNjAsMTIwXHJcbnJkIDQ1XHJcbnJlY3QgMCwwLCA0MCw0MFxyXG5wb3AoKVxyXG5cIlwiXCJcclxuXHJcblx0XHRjYXJkczogXHJcblx0XHRcdGI6XCIjIExPQzoxMCBmb3IgZmMgY2lyY2xlIGxlcnAgcmQgcmVjdE1vZGUgc2MgdHJhbnNsYXRlXFxuXCJcclxuXHRcdFx0YTpcIlwiXCJcclxucmVjdE1vZGUgQ0VOVEVSXHJcbnNjIDFcclxudHJhbnNsYXRlIDEwMCwxMDBcclxuZm9yIGkgaW4gcmFuZ2UgMTgsLTEsLTFcclxuICByID0gMS4wKmkvMThcclxuICBmYyByLDAsMFxyXG4gIHcgPSA3MCs1KmlcclxuICBoID0gNzArNSppXHJcbiAgcmVjdCAwLDAsIHcsaFxyXG4gIHJkIDVcclxuXCJcIlwiIFxyXG5cclxuXHRcdHRpbGVzOiBcclxuXHRcdFx0YjpcIiMgTE9DOjEzIGZjIGZvciBsZXJwIHB1c2ggcG9wIHJkIHJlY3QgcmVjdE1vZGUgc2MgdHJhbnNsYXRlXFxuXCJcclxuXHRcdFx0YTpcIlwiXCJcclxucmVjdE1vZGUgQ0VOVEVSXHJcbnNjKClcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuICBmb3IgaiBpbiByYW5nZSAxMFxyXG4gICAgcHVzaCgpXHJcbiAgICB0cmFuc2xhdGUgMTArMjAqaSwxMCsyMCpqXHJcbiAgICByZCA1KihpK2opXHJcbiAgICByID0gaS85LjBcclxuICAgIGcgPSBqLzkuMFxyXG4gICAgYiA9IDBcclxuICAgIGZjIHIsZyxiXHJcbiAgICByZWN0IDAsMCwgMTAsMTBcclxuICAgIHBvcCgpXHJcblwiXCJcIiBcclxuXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHRcIkw4OiBmdW5jdGlvblwiIDogXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcblx0XHRzcXVhcmUgOiBcclxuXHRcdFx0YjogXCJcIlwiXHJcblx0XHRcdCMgTE9DOjUgLT4gYmcgc3cgZmMgcmVjdFxyXG5cclxuXHRcdFx0c3F1YXJlID0gKHgseSxzaXplLHc9MSwgcj0wLjUsZz0wLjUsYj0wLjUpIC0+XHJcblx0XHRcdFwiXCJcIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxuc3F1YXJlID0gKHgseSxzaXplLHc9MSxyPTAuNSxnPTAuNSxiPTAuNSkgLT5cclxuXHRiZyAwXHJcblx0c3cgd1xyXG5cdGZjIHIsZyxiXHJcblx0cmVjdCB4LHksc2l6ZSxzaXplXHJcblx0XHRcdFwiXCJcIlxyXG5cdFx0XHRjOiBcclxuXHRcdFx0XHRcInNxdWFyZSAxMDAsMTAwLDUwXCIgOiAwXHJcblx0XHRcdFx0XCJzcXVhcmUgMTAsMTAsMjBcIiA6IDBcclxuXHRcdFx0XHRcInNxdWFyZSA1MCw3MCw0MCwyXCIgOiAwXHJcblx0XHRcdFx0XCJzcXVhcmUgMzAsMTUwLDMwLDMsMSwwLDBcIiA6IDBcclxuXHJcblx0XHRtdWx0aW1vaXJlOiBcclxuXHRcdFx0YjpcIlwiXCJcclxuXHRcdFx0IyBMT0M6NSBiZyBmb3IgbGluZSBtYXBcclxuXHJcblx0XHRcdG1vaXJlID0gKGspIC0+XHJcblx0XHRcdFwiXCJcIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxubW9pcmUgPSAoaykgLT5cclxuXHRiYWNrZ3JvdW5kIDBcclxuXHRmb3IgaSBpbiByYW5nZSBrXHJcblx0XHRmb3IgaiBpbiByYW5nZSAzN1xyXG5cdFx0XHRsaW5lIDEwLG1hcChpLDAsay0xLDEwLDE5MCksMTkwLDEwK2oqNVxyXG5cIlwiXCJcclxuXHRcdFx0YzogXHJcblx0XHRcdFx0XCJtb2lyZSAyXCI6MFxyXG5cdFx0XHRcdFwibW9pcmUgM1wiOjBcclxuXHRcdFx0XHRcIm1vaXJlIDRcIjowXHJcblx0XHRcdFx0XCJtb2lyZSA1XCI6MFxyXG5cdFx0XHJcblx0XHRjb2xvckN1YmU6XHJcblx0XHRcdGI6IFwiXCJcIlxyXG5cdFx0XHQjIExPQzo4IC0+IGJnIGZjIGZvciByZWN0XHJcblxyXG5cdFx0XHRjb2xvckN1YmUgPSAobixiKSAtPlxyXG5cdFx0XHRcIlwiXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbmNvbG9yQ3ViZSA9IChuLGIpIC0+XHJcblx0YmcgMFxyXG5cdGQgPSAyMDAuMC9uXHJcblx0bSA9IG4tMS4wXHJcblx0Zm9yIHIgaW4gcmFuZ2UgblxyXG5cdFx0Zm9yIGcgaW4gcmFuZ2UgblxyXG5cdFx0XHRmYyByL20sZy9tLGIvbVxyXG5cdFx0XHRyZWN0IHIqZCxnKmQsZCxkXHJcblwiXCJcIlxyXG5cdFx0XHRjOlxyXG5cdFx0XHRcdFwiY29sb3JDdWJlIDIsMFwiOjBcclxuXHRcdFx0XHRcImNvbG9yQ3ViZSAyLDFcIjowXHJcblx0XHRcdFx0XCJjb2xvckN1YmUgMywwXCI6MFxyXG5cdFx0XHRcdFwiY29sb3JDdWJlIDMsMVwiOjBcclxuXHRcdFx0XHRcImNvbG9yQ3ViZSAzLDJcIjowXHJcblxyXG5cdFx0bWFueURpY2VzOiBcclxuXHRcdFx0YiA6IFwiXCJcIlxyXG5cdFx0XHQjIExPQzoyMSAtPiBmYyBmb3IgaWYgcG9pbnQgW10gJVxyXG5cclxuXHRcdFx0bWFueURpY2VzID0gKCkgLT5cclxuXHRcdFx0XCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmRvdHMgPSAoeCx5LGRvdHMpIC0+XHJcblx0Zm9yIGRvdCBpbiBkb3RzXHJcblx0XHRpZiBkb3Q9PTEgdGhlbiBwb2ludCB4KzgseSs4XHJcblx0XHRpZiBkb3Q9PTIgdGhlbiBwb2ludCB4KzgseSsxMFxyXG5cdFx0aWYgZG90PT0zIHRoZW4gcG9pbnQgeCs4LHkrMTJcclxuXHRcdGlmIGRvdD09NCB0aGVuIHBvaW50IHgrMTAseSsxMFxyXG5cdFx0aWYgZG90PT01IHRoZW4gcG9pbnQgeCsxMix5KzhcclxuXHRcdGlmIGRvdD09NiB0aGVuIHBvaW50IHgrMTIseSsxMFxyXG5cdFx0aWYgZG90PT03IHRoZW4gcG9pbnQgeCsxMix5KzEyXHJcbmRpY2UgPSAoeCx5LGQpIC0+XHJcblx0aWYgZD09MSB0aGVuIGRvdHMgeCx5LFs0XVxyXG5cdGlmIGQ9PTIgdGhlbiBkb3RzIHgseSxbMSw3XVxyXG5cdGlmIGQ9PTMgdGhlbiBkb3RzIHgseSxbMSw0LDddXHJcblx0aWYgZD09NCB0aGVuIGRvdHMgeCx5LFsxLDMsNSw3XVxyXG5cdGlmIGQ9PTUgdGhlbiBkb3RzIHgseSxbMSwzLDQsNSw3XVxyXG5cdGlmIGQ9PTYgdGhlbiBkb3RzIHgseSxbMSwyLDMsNSw2LDddXHJcbm1hbnlEaWNlcyA9ICgpIC0+XHJcblx0ZmMoMClcclxuXHRmb3IgaSBpbiByYW5nZSAxMFxyXG5cdFx0Zm9yIGogaW4gcmFuZ2UgMTBcclxuXHRcdFx0ZGljZSAyMCppLDIwKmosMSsoaStqKSU2XHJcblwiXCJcIlxyXG5cdFx0XHRjIDogXCJtYW55RGljZXMoKVwiOjBcclxuXHJcblx0XHRzZXZlblNlZ21lbnQgOlxyXG5cdFx0XHRiIDogXCJcIlwiXHJcbiMgTE9DOjIyIGJnIHNjIGZjIHJlY3RNb2RlIGlmIHRoZW4gJiByZWN0IFtdXHJcblxyXG5kaWdpdCA9IChkLHg9MTAwLHk9MTAwLHc9ODAsaD0xMCkgLT5cclxuXHRcdFx0XCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmRpZ2l0ID0gKGQseD0xMDAseT0xMDAsdz04MCxoPTE4KSAtPlxyXG5cdGJnIDAuNVxyXG5cdHNjKClcclxuXHRmYyAxLDAsMFxyXG5cdHJlY3RNb2RlIENFTlRFUlxyXG5cdHBhdHRlcm4gPSBbNjMsNiw5MSw3OSwxMDIsMTA5LDEyNSw3LDEyNywxMTFdXHJcblx0cCA9IHBhdHRlcm5bZF1cclxuXHR3MCA9IHctMjBcclxuXHRpZiBwICYgMSB0aGVuIGZjIDEsMCwwIGVsc2UgZmMgMC4zLDAsMFxyXG5cdHJlY3QgeCx5LXcsdzAsaCBcclxuXHRpZiBwICYgMiB0aGVuIGZjIDEsMCwwIGVsc2UgZmMgMC4zLDAsMFxyXG5cdHJlY3QgeCt3LzIseS13LzIsaCx3MCBcclxuXHRpZiBwICYgNCB0aGVuIGZjIDEsMCwwIGVsc2UgZmMgMC4zLDAsMFxyXG5cdHJlY3QgeCt3LzIseSt3LzIsaCx3MCBcclxuXHRpZiBwICYgOCB0aGVuIGZjIDEsMCwwIGVsc2UgZmMgMC4zLDAsMFxyXG5cdHJlY3QgeCx5K3csdzAsaCBcclxuXHRpZiBwICYgMTYgdGhlbiBmYyAxLDAsMCBlbHNlIGZjIDAuMywwLDBcclxuXHRyZWN0IHgtdy8yLHkrdy8yLGgsdzBcclxuXHRpZiBwICYgMzIgdGhlbiBmYyAxLDAsMCBlbHNlIGZjIDAuMywwLDBcclxuXHRyZWN0IHgtdy8yLHktdy8yLGgsdzAgXHJcblx0aWYgcCAmIDY0IHRoZW4gZmMgMSwwLDAgZWxzZSBmYyAwLjMsMCwwXHJcblx0cmVjdCB4LHksdzAsaCBcclxuXCJcIlwiXHJcblx0XHRcdGM6XHJcblx0XHRcdFx0XCJkaWdpdCAwXCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCAxXCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCAyXCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCAzXCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCA0XCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCA1XCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCA2XCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCA3XCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCA4XCIgOiAwXHJcblx0XHRcdFx0XCJkaWdpdCA5XCIgOiAwXHJcblx0XHRcclxuXHRcdGFscGhhbnVtZXJpYzpcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6MTEgYmcgZm9yIGluIHJhbmdlIGluZGV4T2YgJiAqKiBjaXJjbGUge30gW10gJycgaWYgdGhlbiBlbHNlXHJcblxyXG5sZXR0ZXIgPSAoY2hyKSAtPlxyXG5cdFx0XHRcIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxubGV0dGVyID0gKGNocikgLT5cclxuXHRiZyAwXHJcblx0c2MoKVxyXG5cdHBhdHRlcm4gPSB7MTonNGM0NDQ0ZScsIDI6J2VoMTI0OHYnLCBBOidlaGh2aGhoJywgQjondWhodWhodSd9XHJcblx0Zm9yIGNoLGogaW4gcGF0dGVybltjaHJdXHJcblx0XHRpbmRleCA9ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dicuaW5kZXhPZiBjaFxyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgNVxyXG5cdFx0XHRpZiBpbmRleCAmIDIqKmkgdGhlbiBmYyAwLDEsMCBlbHNlIGZjIDAsMC4zLDBcclxuXHRcdFx0eCA9IDE0MC0yMCppXHJcblx0XHRcdHkgPSA0MCsyMCpqXHJcblx0XHRcdGNpcmNsZSB4LHksOFxyXG5cdFx0XHRcIlwiXCJcclxuXHRcdFx0YzpcclxuXHRcdFx0XHRcImxldHRlciAnQSdcIiA6IDBcclxuXHRcdFx0XHRcImxldHRlciAnQidcIiA6IDBcclxuXHRcdFx0XHRcImxldHRlciAnMSdcIiA6IDBcclxuXHRcdFx0XHRcImxldHRlciAnMidcIiA6IDBcdFxyXG5cclxuXHRcdGtsb2NrYTogXHJcblx0XHRcdGI6IFwiXCJcIlxyXG5cdFx0XHQjIExPQzoyNSAtPiBjaXJjbGUgZWxzZSBmYyBmb3IgaWYgcG9pbnQgcHVzaCBwb3AgcmQgcmVjdCByZWN0TW9kZSBzYyB0cmFuc2xhdGVcclxuXHJcblx0XHRcdGtsb2NrYSA9IChoLG0scykgLT5cclxuXHRcdFx0XCJcIlwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG52aXNhcmUgPSAodix3LGwscixnLGIpIC0+XHJcblx0cHVzaCgpXHJcblx0cmQgdi05MFxyXG5cdHRyYW5zbGF0ZSBsLzIsMFxyXG5cdGZjIHIsZyxiXHJcblx0cmVjdCAwLDAsbCx3XHJcblx0cG9wKClcclxua2xvY2thID0gKGgsbSxzKSAtPlxyXG5cdHJlY3RNb2RlIENFTlRFUlxyXG5cdHRyYW5zbGF0ZSAxMDAsMTAwXHJcblx0dXJ0YXZsYSgpXHJcblx0dmlzYXJlIChoK20vNjAuMCkqMzAsIDcsNjAsMSwwLDBcclxuXHR2aXNhcmUgKG0rcy82MC4wKSo2LDUsODAsMCwxLDBcclxuXHR2aXNhcmUgcyo2LDIsODAsMCwwLDFcclxudXJ0YXZsYSA9ICgpIC0+XHJcblx0ZmMgMFxyXG5cdHNjIDFcclxuXHRjaXJjbGUgMCwwLDkwXHJcblx0ZmMgMVxyXG5cdGZvciBpIGluIHJhbmdlIDYwXHJcblx0XHRpZiBpJTU9PTBcclxuXHRcdFx0Y2lyY2xlIDg1LDAsMlxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRwb2ludCA4NSwwXHJcblx0XHRyZCA2XHJcblwiXCJcIlxyXG5cdFx0XHRjOiBcclxuXHRcdFx0XHRcImtsb2NrYSAxMCw5LDMwXCI6MFxyXG5cdFx0XHRcdFwia2xvY2thIDExLDMwLDE1XCI6MFxyXG5cclxuXHRcdEdvbGRlblN0YXI6XHJcblx0XHRcdGI6IFwiXCJcIlxyXG4jIExPQzoxMyB0cmFuc2xhdGUgcm90YXRlIGNvcyBzaW4gZm9yIHJhbmdlIGZjIHRyaWFuZ2xlIGJnXHJcblxyXG5zdGFyID0gKHgseSxuLGEsYikgLT5cclxuXCJcIlwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5zdGFyID0gKHgseSxuLGEsYikgLT5cclxuXHRiZyAwXHJcblx0dHJhbnNsYXRlIHgseVxyXG5cdHYgPSBUV09fUEkvblxyXG5cdHJvdGF0ZSAtUEkvMlxyXG5cdHgxID0gYiAqIGNvcyB2LzJcclxuXHR5MSA9IGIgKiBzaW4gdi8yXHJcblx0Zm9yIGkgaW4gcmFuZ2UgblxyXG5cdFx0ZmMgMSwxLDBcclxuXHRcdHRyaWFuZ2xlIDAsMCxhLDAseDEseTFcclxuXHRcdGZjIDEsMC43LDBcclxuXHRcdHRyaWFuZ2xlIDAsMCxhLDAseDEsLXkxXHJcblx0XHRyb3RhdGUgdlxyXG5cIlwiXCJcclxuXHRcdFx0YzpcclxuXHRcdFx0XHRcInN0YXIgMTAwLDEyNSwzLDExMCwzMFwiIDogMFxyXG5cdFx0XHRcdFwic3RhciAxMDAsMTAwLDQsMTAwLDI1XCIgOiAwXHJcblx0XHRcdFx0XCJzdGFyIDEwMCwxMTAsNSwxMDAsMzhcIiA6IDBcclxuXHRcdFx0XHRcInN0YXIgMTAwLDEwMCw2LDEwMCw1MFwiIDogMFxyXG5cdFx0XHJcblx0XHRyZWN1cnNpdmVDaXJjbGVzOiBcclxuXHRcdFx0YjogXCJcIlwiXHJcblx0XHRcdCMgTE9DOjYgLT4gY2lyY2xlIGlmIHJldHVybiBzYyA8XHJcblxyXG5cdFx0XHRjaXJjbGVzID0gKHgseSxyKSAtPlxyXG5cdFx0XHRcIlwiXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbnNjIDFcclxuY2lyY2xlcyA9ICh4LHkscikgLT5cclxuXHRjaXJjbGUgeCx5LHJcclxuXHRpZiByIDwgMTAgdGhlbiByZXR1cm5cclxuXHRjaXJjbGVzIHgtci8yLHksci8yXHJcblx0Y2lyY2xlcyB4K3IvMix5LHIvMlxyXG5cIlwiXCJcclxuXHRcdFx0YzogXCJjaXJjbGVzIDEwMCwxMDAsMTAwXCI6MFx0XHRcclxuXHRcdFxyXG5cdFx0a29yZzogXHJcblx0XHRcdGI6XCJcIlwiXHJcblx0XHRcdCMgTE9DOjE3IC0+IGJnIGZjIGZvciBpZiBlbHNlIHJlY3Qgc2Mgc3dcclxuXHJcblx0XHRcdGtvcmcgPSAobix3LGMxLGMyKSAtPlxyXG5cdFx0XHRcIlwiXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbmtvcmcgPSAobix3LGMxLGMyKSAtPlxyXG5cdGJnIDBcclxuXHRzdyB3XHJcblx0ZmlsbCBjMVxyXG5cdHN0cm9rZSBjMlxyXG5cdHEgPSAyKm4rMVxyXG5cdGQgPSAyMDAuMC9xXHJcblx0Zm9yIGkgaW4gcmFuZ2UgblxyXG5cdFx0cmVjdCBkK2kqMipkLDAsZCwyMDBcclxuXHRmb3IgaiBpbiByYW5nZSBuXHJcblx0XHRyZWN0IDAsZCtqKjIqZCwyMDAsZFxyXG5cdGZvciBpIGluIHJhbmdlIG5cclxuXHRcdGZvciBqIGluIHJhbmdlIG5cclxuXHRcdFx0aWYgKGkraikgJSAyID09IDFcclxuXHRcdFx0XHRyZWN0IGkqMipkLGQraioyKmQsMypkLGRcclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdHJlY3QgZCtpKjIqZCxqKjIqZCxkLDMqZFxyXG5cIlwiXCJcclxuXHRcdFx0YzogXHJcblx0XHRcdFx0XCJrb3JnIDEsNSxjbygxLDAsMCksY28oMSwxLDApXCI6MFxyXG5cdFx0XHRcdFwia29yZyAyLDQsY28oMC41KSxjbygxKVwiOjBcclxuXHRcdFx0XHRcImtvcmcgMywzLGNvKDEsMSwwKSxjbygxLDAsMClcIjowXHJcblx0XHRcdFx0XCJrb3JnIDQsMixjbygxKSxjbygwLjUpXCI6MFxyXG5cdFx0XHRcdFwia29yZyA1LDEsY28oMSwwLDApLGNvKDEsMSwwKVwiOjBcclxuXHJcblx0XHRcIk9seW1waWNSaW5nIFByZXBcIjpcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6NyBzYyBhcmMgZmMgc3cgc3Ryb2tlQ2FwXHJcblxyXG5yaW5nID0gKHgseSxyYWRpdXMsdywgcixnLGIsIHN0YXJ0PTMsc3RvcHA9MykgLT5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbnJpbmcgPSAoeCx5LHJhZGl1cyx3LCByLGcsYiwgc3RhcnQ9MyxzdG9wcD0zKSAtPlxyXG5cdGhvdXIgPSBQSS82XHJcblx0c3Ryb2tlQ2FwIFNRVUFSRVxyXG5cdGZjKClcclxuXHRzdyB3XHJcblx0c2MgcixnLGJcclxuXHRhcmMgeCx5LDIqcmFkaXVzLDIqcmFkaXVzLChzdGFydC0zKSpob3VyLChzdG9wcC0zKSpob3VyXHJcblwiXCJcIlxyXG5cdFx0XHRjOiBcclxuXHRcdFx0XHRcInJpbmcgMTAwLDEwMCw2MCwyMCwgMSwxLDBcIjowXHJcblx0XHRcdFx0XCJyaW5nIDEwMCwxMDAsODAsMTAsIDEsMCwwLCAzLDZcIjowXHJcblx0XHRcdFx0XCJyaW5nIDEwMCwxMDAsODAsMTAsIDAsMSwwLCAyLDRcIjowXHJcblx0XHRcdFx0XCJyaW5nIDEwMCwxMDAsODAsMTAsIDAsMSwwLCA0LDJcIjowXHJcblxyXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblx0XCJMOTogY2xhc3MgY29uc3RydWN0b3IgbmV3XCIgOiBcclxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5cclxuXHRcdENvbm5lY3Q0IDpcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6MjMgY2xhc3MgY29uc3RydWN0b3IgbmV3IHRleHRBbGlnbiB0ZXh0U2l6ZSB0ZXh0IGZvciBpbiByYW5nZSBwdXNoICUgZmMgc2MgY2lyY2xlXHJcblxyXG5jbGFzcyBDb25uZWN0NFxyXG5cdGNvbnN0cnVjdG9yIDogKG1vdmVzLEBzaXplPTI3KSAtPiBcclxuXHRyZW5kZXIgOiAoKSAtPlxyXG5cclxuYzEgPSBuZXcgQ29ubmVjdDQgWzAsMSwyLDBdLDIwXHJcbmMyID0gbmV3IENvbm5lY3Q0IFszLDMsMywzLDMsMywzLDAsMSwyLDQsNSw2XVxyXG5jMyA9IG5ldyBDb25uZWN0NCBbMywyLDQsMywyLDEsMCwwLDUsNiwxLDIsMSwxLDQsNCwzLDIsMCwwLDMsMF1cclxuXHRcdFx0XCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmNsYXNzIENvbm5lY3Q0XHJcblx0Y29uc3RydWN0b3IgOiAobW92ZXMsQHNpemU9MjcpIC0+XHJcblx0XHRiZyAwXHJcblx0XHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cdFx0dGV4dFNpemUgQHNpemUvMlxyXG5cdFx0QGxpc3QgPSAoW10gZm9yIGkgaW4gcmFuZ2UgNylcclxuXHRcdGZvciBtb3ZlLGkgaW4gbW92ZXNcclxuXHRcdFx0QGxpc3RbbW92ZV0ucHVzaCBpIFxyXG5cdHJlbmRlciA6ICgpIC0+XHJcblx0XHRmYygpXHJcblx0XHRzYyAwLjEsMC4zLDFcclxuXHRcdHN3IDAuMiAqIEBzaXplXHJcblx0XHRmb3IgaSBpbiByYW5nZSA3XHJcblx0XHRcdGZvciBqIGluIHJhbmdlIDZcclxuXHRcdFx0XHRjaXJjbGUgMTAwLUBzaXplKjMrQHNpemUqaSwgMTgwLUBzaXplKmosIEBzaXplLzJcclxuXHRcdGZvciBjb2x1bW4saSBpbiBAbGlzdFxyXG5cdFx0XHRmb3IgbnIsaiBpbiBjb2x1bW5cclxuXHRcdFx0XHRmYyAxLG5yJTIsMFxyXG5cdFx0XHRcdHN3IDFcclxuXHRcdFx0XHRjaXJjbGUgMTAwLUBzaXplKjMrQHNpemUqaSwgMTgwLUBzaXplKmosIEBzaXplKjAuNFxyXG5cdFx0XHRcdGZjIDBcclxuXHRcdFx0XHRzYygpXHJcblx0XHRcdFx0dGV4dCBuciwgMTAwLUBzaXplKjMrQHNpemUqaSwgMTgwLUBzaXplKmpcclxuXHJcbmMxID0gbmV3IENvbm5lY3Q0IFswLDEsMiwwXSwyMFxyXG5jMiA9IG5ldyBDb25uZWN0NCBbMywzLDMsMywzLDMsMCwxLDIsNCw1LDZdXHJcbmMzID0gbmV3IENvbm5lY3Q0IFszLDIsNCwzLDIsMSwwLDAsNSw2LDEsMiwxLDEsNCw0LDMsMiwwLDAsMywwXVxyXG5cIlwiXCJcclxuXHRcdFx0YzpcclxuXHRcdFx0XHRcImMxLnJlbmRlcigpXCIgOiAwXHJcblx0XHRcdFx0XCJjMi5yZW5kZXIoKVwiIDogMFxyXG5cdFx0XHRcdFwiYzMucmVuZGVyKClcIiA6IDBcclxuXHJcblxyXG5cdFx0UnVzaEhvdXIgOlxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzo0MCBjbGFzcyBjb25zdHJ1Y3RvciBuZXcgdGV4dEFsaWduIHRleHQgcHVzaCBiZyBzYyBmYyByZWN0IFxyXG4jXHQgICAgICAgaWYgdGhlbiBlbHNlIGZvciBpbiByYW5nZSB0b0xvd2VyQ2FzZSBpbmRleE9mIFxyXG4jIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1J1c2hfSG91cl8oYm9hcmRfZ2FtZSlcclxuXHJcbmNsYXNzIFJ1c2hIb3VyXHJcblx0Y29uc3RydWN0b3IgOiAtPlxyXG5cdGFkZCA6IChwb3MscixnLGIpIC0+XHJcblx0bW92ZSA6IChuKSAtPlxyXG5cclxucnVzaGhvdXIgPSBuZXcgUnVzaEhvdXIoKVxyXG5ydXNoaG91ci5hZGQgXCJkNGU0XCIsMSwwLDBcclxucnVzaGhvdXIuYWRkIFwiZDFkMlwiLDEsMSwwXHJcbnJ1c2hob3VyLmFkZCBcImUyZjJcIiwwLDEsMFxyXG5ydXNoaG91ci5hZGQgXCJmNGY2XCIsMCwxLDFcclxucnVzaGhvdXIubW92ZXMgPSBcImFhQkJCQmNkZGRBQUFBQVwiXHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxudGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuY29sID0gKHMpIC0+IFwiYWJjZGVmXCIuaW5kZXhPZiBzXHJcbnJvdyA9IChzKSAtPiBcIjEyMzQ1NlwiLmluZGV4T2Ygc1xyXG5cclxuY2xhc3MgQ2FyXHJcblx0Y29uc3RydWN0b3IgOiAocG9zLEByLEBnLEBiKSAtPlxyXG5cdFx0QGkgPSBjb2wgcG9zWzBdIFxyXG5cdFx0QGogPSByb3cgcG9zWzNdXHJcblx0XHRAdyA9IGNvbChwb3NbMl0pIC0gQGkgKyAxXHJcblx0XHRAaCA9IEBqIC0gcm93KHBvc1sxXSkgKyAxIFxyXG5cdHJlbmRlciA6IChpKSAtPiBcclxuXHRcdGZjIEByLEBnLEBiXHJcblx0XHRyZWN0IDQwKzIwKkBpKzIsIDE0MC0yMCpAaisyLCAyMCpAdy00LCAyMCpAaC00XHJcblx0XHRmYyAwXHJcblx0XHR0ZXh0IFwiQUJDREVGR0hcIltpXSwgNTArMjAqQGksIDE1MC0yMCpAalxyXG5cdG1vdmUgOiAocG9zaXRpdmUpIC0+XHJcblx0XHRpZiBwb3NpdGl2ZSB0aGVuIGQ9MSBlbHNlIGQ9LTFcclxuXHRcdGlmIEB3ID09IDEgdGhlbiBAaiArPSBkXHJcblx0XHRpZiBAaCA9PSAxIHRoZW4gQGkgKz0gZFxyXG5cdFx0XHJcbmNsYXNzIFJ1c2hIb3VyXHJcblx0Y29uc3RydWN0b3IgOiAtPiBAY2Fycz1bXVxyXG5cdGFkZCA6IChwb3MscixnLGIpIC0+IEBjYXJzLnB1c2ggbmV3IENhciBwb3MscixnLGJcclxuXHRtb3ZlIDogKG4pIC0+XHJcblx0XHRmb3IgaSBpbiByYW5nZSBuXHJcblx0XHRcdGNoID0gQG1vdmVzW2ldLnRvTG93ZXJDYXNlKClcclxuXHRcdFx0Y2FyID0gQGNhcnNbXCJhYmNkZWZnaFwiLmluZGV4T2YoY2gpXVxyXG5cdFx0XHRjYXIubW92ZSBjaCAhPSBAbW92ZXNbaV1cclxuXHRcdEByZW5kZXIoKVx0XHRcdFxyXG5cclxuXHRyZW5kZXIgOiAtPlxyXG5cdFx0YmcgMFxyXG5cdFx0c2MoKVxyXG5cdFx0ZmMgMC41LDAuNSwwLjVcclxuXHRcdHJlY3QgNDAsNDAsMTIwLDEyMFxyXG5cdFx0cmVjdCAxNjAsODAsNDAsMjBcclxuXHRcdGZjIDFcclxuXHRcdHNjKClcclxuXHRcdGZvciBpIGluIHJhbmdlIDZcclxuXHRcdFx0dGV4dCBcIjY1NDMyMVwiW2ldLDMwLDUwKzIwKmlcclxuXHRcdFx0dGV4dCBcImFiY2RlZlwiW2ldLDUwKzIwKmksMTcwXHJcblx0XHRmb3IgY2FyLGkgaW4gQGNhcnNcclxuXHRcdFx0Y2FyLnJlbmRlciBpXHJcblx0XHRcdFxyXG5ydXNoaG91ciA9IG5ldyBSdXNoSG91cigpXHJcbnJ1c2hob3VyLmFkZCBcImQ0ZTRcIiwxLDAsMFxyXG5ydXNoaG91ci5hZGQgXCJkMWQyXCIsMSwxLDBcclxucnVzaGhvdXIuYWRkIFwiZTJmMlwiLDAsMSwwXHJcbnJ1c2hob3VyLmFkZCBcImY0ZjZcIiwwLDEsMVxyXG5ydXNoaG91ci5tb3ZlcyA9IFwiYWFCQkJCY2RkZEFBQUFBXCJcclxuXCJcIlwiXHJcblx0XHRcdGM6XHJcblx0XHRcdFx0XCJydXNoaG91ci5tb3ZlIDBcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgMVwiIDogMFxyXG5cdFx0XHRcdFwicnVzaGhvdXIubW92ZSAyXCIgOiAwXHJcblx0XHRcdFx0XCJydXNoaG91ci5tb3ZlIDNcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgNFwiIDogMFxyXG5cdFx0XHRcdFwicnVzaGhvdXIubW92ZSA1XCIgOiAwXHJcblx0XHRcdFx0XCJydXNoaG91ci5tb3ZlIDZcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgN1wiIDogMFxyXG5cdFx0XHRcdFwicnVzaGhvdXIubW92ZSA4XCIgOiAwXHJcblx0XHRcdFx0XCJydXNoaG91ci5tb3ZlIDlcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgMTBcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgMTFcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgMTJcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgMTNcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgMTRcIiA6IDBcclxuXHRcdFx0XHRcInJ1c2hob3VyLm1vdmUgMTVcIiA6IDBcclxuXHJcblx0XHRQb2x5Z29uOlxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzoxNyBjbGFzcyBjb25zdHJ1Y3RvciBuZXcgY29zIHNpbiByYWRpYW5zIHNjIGxpbmUgZm9yIHJhbmdlIGJnXHJcblxyXG5jbGFzcyBUdXJ0bGVcclxuXHRjb25zdHJ1Y3RvciA6IChAcj0xLEBnPTAsQGI9MCwgQHg9MTAwLEB5PTEwLEBkaXI9MCkgLT5cclxuXHRmZCA6IChkKSAtPlxyXG5cdHJ0IDogKGEpIC0+XHJcblxyXG5wb2x5Z29uID0gKG4sZCkgLT5cclxuXHR0ID0gbmV3IFR1cnRsZSgpXHJcblwiXCJcIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5jbGFzcyBUdXJ0bGVcclxuXHRjb25zdHJ1Y3RvciA6IChAcj0xLEBnPTAsQGI9MCwgQHg9MTAwLEB5PTEwLEBkaXI9MCkgLT5cclxuXHRmZCA6IChkKSAtPlxyXG5cdFx0ZHggPSBkKmNvcyByYWRpYW5zIEBkaXJcclxuXHRcdGR5ID0gZCpzaW4gcmFkaWFucyBAZGlyXHJcblx0XHRzYyBAcixAZyxAYlxyXG5cdFx0bGluZSBAeCxAeSxAeCtkeCxAeStkeVxyXG5cdFx0QHggKz0gZHhcclxuXHRcdEB5ICs9IGR5XHJcblx0cnQgOiAoYSkgLT5cclxuXHRcdEBkaXIgKz1hXHJcblxyXG5wb2x5Z29uID0gKG4sZCkgLT5cclxuXHR0ID0gbmV3IFR1cnRsZSgpXHJcblx0YmcgMFxyXG5cdGZvciBpIGluIHJhbmdlIG5cclxuXHRcdHQuZmQgZFxyXG5cdFx0dC5ydCAzNjAvblxyXG5cIlwiXCJcclxuXHRcdFx0YzpcclxuXHRcdFx0XHRcInBvbHlnb24gMyw2MFwiIDogMFxyXG5cdFx0XHRcdFwicG9seWdvbiA0LDYwXCIgOiAwXHJcblx0XHRcdFx0XCJwb2x5Z29uIDUsNjBcIiA6IDBcclxuXHRcdFx0XHRcInBvbHlnb24gNiw2MFwiIDogMFxyXG5cdFx0XHRcdFwicG9seWdvbiA4LDUwXCIgOiAwXHJcblx0XHRcdFx0XCJwb2x5Z29uIDE2LDMyXCIgOiAwXHJcblx0XHRcdFx0XCJwb2x5Z29uIDMyLDE2XCIgOiAwXHJcblx0XHRcdFx0XCJwb2x5Z29uIDY0LDhcIiA6IDBcclxuXHJcblx0XHRnaXJsYW5nIDpcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6IDE2IGNsYXNzIGNvbnN0cnVjdG9yIG5ldyBzYyBsaW5lIGJnIHN3IGZvciBpbiByYW5nZVxyXG5cclxuY2xhc3MgV2VhdmVyXHJcblx0Y29uc3RydWN0b3IgOiAoQHIsQGcsQGIsIEB4LEB5KSAtPlxyXG5cdGdvIDogKGR4LGR5KSAtPlxyXG5cclxuZ2lybGFuZyA9ICh4LHksbix3aWR0aCxkeCxkeSkgLT5cclxuXCJcIlwiXHRcdFxyXG5cdFx0XHRhOlwiXCJcIlxyXG5jbGFzcyBXZWF2ZXJcclxuXHRjb25zdHJ1Y3RvciA6IChAcixAZyxAYiwgQHgsQHkpIC0+XHJcblx0Z28gOiAoZHgsZHkpIC0+XHJcblx0XHRzYyBAcixAZyxAYlxyXG5cdFx0bGluZSBAeCxAeSxAeCtkeCxAeStkeVxyXG5cdFx0W0B4LEB5XSA9IFtAeCtkeCxAeStkeV1cclxuXHJcbmdpcmxhbmcgPSAoeCx5LG4sd2lkdGgsZHgsZHkpIC0+XHJcblx0YSA9IG5ldyBXZWF2ZXIgMSwwLDAsIHgrZHgvMiwwXHJcblx0YiA9IG5ldyBXZWF2ZXIgMSwxLDAsIHgseStkeS8yXHJcblxyXG5cdGJnIDBcclxuXHRzdyB3aWR0aFxyXG5cclxuXHRmb3IgaSBpbiByYW5nZSBuXHJcblx0XHRhLmdvIDAsZHlcclxuXHRcdGIuZ28gZHgsMFxyXG5cdFx0Yi5nbyAwLGR5XHJcblx0XHRhLmdvIGR4LDBcdFx0XHRcclxuXCJcIlwiXHJcblx0XHRcdGM6IFxyXG5cdFx0XHRcdFwiZ2lybGFuZyAwLDAsOSw1LDIwLDIwXCIgOiAwXHJcblx0XHRcdFx0XCJnaXJsYW5nIDIwMCwwLDksNywtMjAsMjBcIiA6IDBcclxuXHJcblx0XHRicmFpZDpcclxuXHRcdFx0YiA6IFwiXCJcIlxyXG4jIExPQzogMTkgY2xhc3MgY29uc3RydWN0b3IgbmV3IHNjIGxpbmUgYmcgc3cgZm9yIHJhbmdlXHJcbiMgaHR0cHM6Ly9jZG4udHV0c3BsdXMuY29tL3ZlY3Rvci91cGxvYWRzL2xlZ2FjeS90dXRzLzAwMC0yMDExLzM5OC1oYWlyLWJyYWlkLzYuanBnXHJcblxyXG5jbGFzcyBXZWF2ZXJcclxuXHRjb25zdHJ1Y3RvciA6IChAcixAZyxAYiwgQHgsQHkpIC0+XHJcblx0Z28gOiAoZHgsZHkpIC0+XHJcblxyXG5icmFpZCA9IChuLGR4LGR5LHdpZHRoKSAtPlx0XHRcclxuXHRcdFx0XCJcIlwiXHJcblxyXG5cdFx0XHRhOlwiXCJcIlxyXG5jbGFzcyBXZWF2ZXJcclxuXHRjb25zdHJ1Y3RvciA6IChAcixAZyxAYiwgQHgsQHkpIC0+XHJcblx0Z28gOiAoZHgsZHkpIC0+XHJcblx0XHRzYyBAcixAZyxAYlxyXG5cdFx0bGluZSBAeCxAeSxAeCtkeCxAeStkeVxyXG5cdFx0W0B4LEB5XSA9IFtAeCtkeCxAeStkeV1cclxuXHJcbmJyYWlkID0gKG4sZHgsZHksd2lkdGgpIC0+XHRcdFxyXG5cclxuXHRhID0gbmV3IFdlYXZlciAxLDAsMCwgMTAwLWR4LzIsZHkvM1xyXG5cdGIgPSBuZXcgV2VhdmVyIDEsMSwwLCAxMDArZHgvMiwyKmR5LzNcclxuXHRjID0gbmV3IFdlYXZlciAwLDEsMCwgMTAwLWR4LzIsZHlcclxuXHJcblx0YmcgMFxyXG5cdHN3IHdpZHRoXHJcblxyXG5cdGZvciBpIGluIHJhbmdlIG5cclxuXHRcdGEuZ28gZHgsZHlcclxuXHRcdGIuZ28gLWR4LGR5XHJcblx0XHRjLmdvIGR4LGR5XHJcblxyXG5cdFx0YS5nbyAtZHgsZHlcclxuXHRcdGIuZ28gZHgsZHlcclxuXHRcdGMuZ28gLWR4LGR5XHJcblx0XHRcIlwiXCJcclxuXHRcdFx0YzpcclxuXHRcdFx0XHRcImJyYWlkIDUsMTgsMTgsNlwiIDogMFxyXG5cdFx0XHRcdFwiYnJhaWQgNCwzMCwyMSwxNFwiIDogMFxyXG5cdFx0XHRcdFwiYnJhaWQgNiwyNCwxNSw1XCIgOiAwXHJcblxyXG5cdFx0T2x5bXBpY1JpbmdzOlxyXG5cdFx0XHRiOiBcIlwiXCJcclxuXHRcdFx0IyBMT0M6MjQgY2xhc3MgY29uc3RydWN0b3Igc2MgYXJjIGJnIGZjIHN3IHN0cm9rZUNhcFxyXG5cclxuXHRcdFx0Y2xhc3MgUmluZ1xyXG5cdFx0XHRcdGNvbnN0cnVjdG9yIDogKEB4LEB5LEByLEBnLEBiKSAtPlxyXG5cdFx0XHRcdGRyYXcgOiAoc3RhcnQ9MyxzdG9wcD0zLGhvdXI9UEkvNikgLT5cclxuXHJcblx0XHRcdG9seW1waWMgPSAoeD0xMDAseT0xMDAscmFkaXVzPTUwLGQ9NjAsdz0xMCkgLT5cclxuXHRcdFx0XCJcIlwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5jbGFzcyBSaW5nXHJcblx0Y29uc3RydWN0b3IgOiAoQHgsQHksQHJhZGl1cywgQHIsQGcsQGIpIC0+XHJcblx0ZHJhdyA6IChzdGFydD0zLHN0b3BwPTMsaG91cj1QSS82KSAtPlxyXG5cdFx0c2MgQHIsQGcsQGJcclxuXHRcdGFyYyBAeCxAeSxAcmFkaXVzLEByYWRpdXMsKHN0YXJ0LTMpKmhvdXIsKHN0b3BwLTMpKmhvdXJcclxuXHRcdFxyXG5vbHltcGljID0gKHg9MTAwLHk9MTAwLHJhZGl1cz01MCxkPTYwLHc9MTApIC0+XHJcblx0cjEgPSBuZXcgUmluZyB4LWQsICB5LCAgICAgcmFkaXVzLCAwLDAsMVxyXG5cdHIyID0gbmV3IFJpbmcgeCwgICAgeSwgICAgIHJhZGl1cywgMCwwLDBcclxuXHRyMyA9IG5ldyBSaW5nIHgrZCwgIHksICAgICByYWRpdXMsIDEsMCwwXHJcblx0cjQgPSBuZXcgUmluZyB4LWQvMix5K2QvMywgcmFkaXVzLCAxLDEsMFxyXG5cdHI1ID0gbmV3IFJpbmcgeCtkLzIseStkLzMsIHJhZGl1cywgMCwxLDBcclxuXHJcblx0c3Ryb2tlQ2FwIFNRVUFSRVxyXG5cdGJnIDAuNVxyXG5cdGZjKClcclxuXHRzdyB3XHJcblxyXG5cdHIxLmRyYXcoKVxyXG5cdHIzLmRyYXcoKVxyXG5cdHI0LmRyYXcoKVxyXG5cdHI1LmRyYXcoKVxyXG5cdHIxLmRyYXcgMiw0XHJcblx0cjIuZHJhdygpXHJcblx0cjQuZHJhdyAxMiwyXHJcblx0cjUuZHJhdyA4LDEwXHJcblx0cjMuZHJhdyA2LDhcdFx0XHRcclxuXCJcIlwiXHRcclxuXHRcdFx0YzpcclxuXHRcdFx0XHRcIm9seW1waWMoKVwiIDogMFxyXG5cdFx0XHRcdFwib2x5bXBpYyAxMDAsNTAsMjUsMzAsNVwiIDogMFxyXG5cdFx0XHRcdFwib2x5bXBpYyAxMDAsMTAwLDEwMCwxMjAsMjBcIiA6IDBcclxuXHJcblx0XHRTcGFjZVNoaXAgOlxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzogMjIgY2xhc3MgY29uc3RydWN0b3IgY29zIHNpbiByYWRpYW5zIHRyYW5zbGF0ZSByZCBzYyBzdyB0cmlhbmdsZSBwb2ludCBuZXdcclxuXHJcbmNsYXNzIFNoaXBcclxuXHRjb25zdHJ1Y3RvciA6IChAeCxAeSxAcyxAZGlyLCBAcj0xLEBnPTEsQGI9MCkgLT5cclxuXHRsdCA6IChhPTkwKSAtPiBcclxuXHRcdEBcclxuXHRkcmF3IDogLT5cclxuXHRcdFx0XHJcbnMxID0gbmV3IFNoaXAgMjAsMTIwLDEwLDBcdFx0XHJcbnMyID0gbmV3IFNoaXAgMTAwLDEwMCwyMCwtOTAsIDEsMCwwXHRcclxuXHRcdFx0XCJcIlwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5jbGFzcyBTaGlwXHJcblx0Y29uc3RydWN0b3IgOiAoQHgsQHksQHMsQGRpciwgQHI9MSxAZz0xLEBiPTApIC0+XHJcblx0bHQgOiAoYT05MCkgLT4gXHJcblx0XHRAZGlyIC09IGFcclxuXHRcdEBcclxuXHRydCA6IChhPTkwKSAtPiBcclxuXHRcdEBkaXIgKz0gYVxyXG5cdFx0QFxyXG5cdGZkIDogKGQ9MTAwKSAtPiBcclxuXHRcdEB4ICs9IGQgKiBjb3MgcmFkaWFucyBAZGlyXHJcblx0XHRAeSArPSBkICogc2luIHJhZGlhbnMgQGRpclxyXG5cdFx0QFxyXG5cdGRyYXcgOiAtPlxyXG5cdFx0dHJhbnNsYXRlIEB4LEB5XHJcblx0XHRyZCBAZGlyXHJcblx0XHRzYyBAcixAZyxAYlxyXG5cdFx0c3cgMlxyXG5cdFx0dHJpYW5nbGUgMipAcywwLCAtQHMsQHMsIC1AcywtQHNcclxuXHRcdHN3IDVcclxuXHRcdHBvaW50IDAsMFxyXG5cclxuczEgPSBuZXcgU2hpcCAyMCwxMjAsMTAsMFx0XHRcclxuczIgPSBuZXcgU2hpcCAxMDAsMTAwLDIwLC05MCwgMSwwLDBcdFxyXG5cdFx0XHRcIlwiXCJcclxuXHRcdFx0YzpcclxuXHRcdFx0XHRcInMxLmRyYXcoKVwiIDogMFxyXG5cdFx0XHRcdFwiczIuZHJhdygpXCIgOiAwXHJcblx0XHRcdFx0XCJzMS5sdCg0NSkuZHJhdygpXCIgOiAwXHJcblx0XHRcdFx0XCJzMS5ydCg0NSkuZHJhdygpXCIgOiAwXHJcblx0XHRcdFx0XCJzMS5ydCgpLmRyYXcoKVwiIDogMFxyXG5cdFx0XHRcdFwiczEucnQoMTgwKS5kcmF3KClcIiA6IDBcclxuXHRcdFx0XHRcInMxLmZkKDUwKS5kcmF3KClcIiA6IDBcclxuXHRcdFx0XHRcInMxLmx0KCkuZmQoKS5ydCgpLmZkKCkucnQoKS5kcmF3KClcIiA6IDBcclxuXHRcdFx0XHRcInMxLmZkKCkucnQoNDUpLmRyYXcoKVwiIDogMFxyXG5cdFx0XHRcdFwiczEucnQoNDUpLmZkKCkuZHJhdygpXCIgOiAwXHJcblxyXG5cdFx0Y2hlc3NHYW1lIDpcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6NjAgY2xhc3MgY29uc3RydWN0b3IgbmV3IGlmIHRoZW4gZWxzZSB0ZXh0U2l6ZSB0ZXh0QWxpZ24gdGV4dCByZWN0TW9kZSByZWN0IFxyXG4jICAgICAgICBmb3IgaW4gcmFuZ2UgcG9pbnQgYmcgZmMgc2Mgc3cgcHVzaCBzcGxpdCBsZW5ndGggaW5kZXhPZlxyXG5cclxuY2xhc3MgQ2hlc3NcclxuXHRjb25zdHJ1Y3RvciA6IChAbW92ZXM9XCJcIiwgQHNpemU9MjIsIHc9XCJcIixiPVwiXCIsIEB4PTEwMCxAeT0xMDApIC0+XHJcblx0bW92ZSA6IChuKSAtPlxyXG5cclxuYmcgMC41XHJcbmJpZyA9IG5ldyBDaGVzcyBcImUyZTQgZTdlNSBnMWYzIGI4YzYgZjFjNFwiXHJcbnNtYWxsID0gbmV3IENoZXNzIFwiZzJnNCBlN2U1IGYyZjQgZDhoNFwiLDE4XHJcblxyXG5cdFx0XHRcIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuY2xhc3MgQ2hlc3NcclxuXHRjb25zdHJ1Y3RvciA6IChAbW92ZXM9XCJcIixAc2l6ZT0yMix3PVwiXCIsYj1cIlwiLEB4PTEwMCxAeT0xMDApIC0+XHJcblx0XHRpZiBiID09IFwiXCIgdGhlbiBiID0gXCJSYTggTmI4IEJjOCBRZDggS2U4IEJmOCBOZzggUmg4IGE3IGI3IGM3IGQ3IGU3IGY3IGc3IGg3XCJcclxuXHRcdGlmIHcgPT0gXCJcIiB0aGVuIHcgPSBcIlJhMSBOYjEgQmMxIFFkMSBLZTEgQmYxIE5nMSBSaDEgYTIgYjIgYzIgZDIgZTIgZjIgZzIgaDJcIlxyXG5cdFx0dGV4dFNpemUgMC45ICogQHNpemVcclxuXHRcdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcblx0XHRyZWN0TW9kZSBDRU5URVJcclxuXHRcdEB3aGl0ZSA9IEBwdXRQaWVjZXMgd1xyXG5cdFx0QGJsYWNrID0gQHB1dFBpZWNlcyBiXHJcblx0XHRAbW92ZXMgPSBAbW92ZXMuc3BsaXQgXCIgXCJcclxuXHJcblx0cHV0UGllY2VzIDogKHBpZWNlcykgLT5cclxuXHRcdHJlcyA9IFtdXHJcblx0XHRmb3IgaSBpbiByYW5nZSA2NFxyXG5cdFx0XHRyZXMucHVzaCBcIlwiIFxyXG5cdFx0YXJyID0gcGllY2VzLnNwbGl0IFwiIFwiXHJcblx0XHRmb3IgcGllY2UgaW4gYXJyXHJcblx0XHRcdGlmIHBpZWNlLmxlbmd0aCA9PSAyXHJcblx0XHRcdFx0Y2hyID0gXCJvXCJcclxuXHRcdFx0XHRzcSA9IHBpZWNlXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRjaHIgPSBwaWVjZVswXVxyXG5cdFx0XHRcdHNxID0gcGllY2VbMS4uXVxyXG5cdFx0XHRbY29sLHJvd10gPSBnZXRJbmRleCBzcVxyXG5cdFx0XHRyZXNbOCpjb2wrcm93XSA9IGNoclx0XHJcblx0XHRyZXNcclxuXHJcblx0Z2V0SW5kZXggPSAoc3EpIC0+XHJcblx0XHRjb2wgPSBcImFiY2RlZmdoXCIuaW5kZXhPZiBzcVswXVxyXG5cdFx0cm93ID0gXCIxMjM0NTY3OFwiLmluZGV4T2Ygc3FbMV1cclxuXHRcdFtjb2wscm93XVxyXG5cdFx0XHJcblx0cmVuZGVyMSA6IChwaWVjZXMsYykgLT5cclxuXHRcdGZjIGNcclxuXHRcdHNjIGNcclxuXHRcdGZvciByb3cgaW4gcmFuZ2UgOFxyXG5cdFx0XHRmb3IgY29sIGluIHJhbmdlIDhcclxuXHRcdFx0XHRwaWVjZSA9IHBpZWNlc1s4KmNvbCtyb3ddXHJcblx0XHRcdFx0eCA9IEB4LTMuNSpAc2l6ZStjb2wqQHNpemVcclxuXHRcdFx0XHR5ID0gQHktMy41KkBzaXplKyg3LXJvdykqQHNpemVcclxuXHRcdFx0XHRpZiBwaWVjZSA9PSBcIm9cIlxyXG5cdFx0XHRcdFx0c3cgQHNpemUvMlxyXG5cdFx0XHRcdFx0cG9pbnQgeCx5XHJcblx0XHRcdFx0ZWxzZSBpZiBwaWVjZSBpbiBcIktRUkJOXCJcclxuXHRcdFx0XHRcdHN3IDEtY1xyXG5cdFx0XHRcdFx0dGV4dCBwaWVjZSx4LCAxK3lcdFx0XHJcblx0XHRcdFx0XHJcblx0cmVuZGVyIDogKCkgLT5cclxuXHRcdHNjKClcclxuXHRcdGZvciBpIGluIHJhbmdlIDhcclxuXHRcdFx0Zm9yIGogaW4gcmFuZ2UgOFxyXG5cdFx0XHRcdGlmIChpK2opJTIgPT0gMSB0aGVuIGZjIDAuNCBlbHNlIGZjIDAuNlxyXG5cdFx0XHRcdHJlY3QgQHgtMy41KkBzaXplK0BzaXplKmksIEB5LTMuNSpAc2l6ZStAc2l6ZSpqLCBAc2l6ZSwgQHNpemVcclxuXHRcdEByZW5kZXIxIEB3aGl0ZSwxXHJcblx0XHRAcmVuZGVyMSBAYmxhY2ssMFxyXG5cclxuXHRtb3ZlUGllY2UgPSAobSxwbGF5ZXIpIC0+XHJcblx0XHRbY29sMSxyb3cxXSA9IGdldEluZGV4IG1bMC4uMV1cclxuXHRcdFtjb2wyLHJvdzJdID0gZ2V0SW5kZXggbVsyLi4zXVxyXG5cdFx0cGxheWVyW2NvbDIqOCtyb3cyXSA9IHBsYXllcltjb2wxKjgrcm93MV1cclxuXHRcdHBsYXllcltjb2wxKjgrcm93MV0gPSBcIlwiXHJcblx0XHRcclxuXHRtb3ZlIDogKG4pIC0+XHJcblx0XHRmb3IgaSBpbiByYW5nZSBuXHJcblx0XHRcdG1vdmVQaWVjZSBAbW92ZXNbaV0sIGlmIGklMj09MCB0aGVuIEB3aGl0ZSBlbHNlIEBibGFja1xyXG5cdFx0QHJlbmRlcigpXHJcblxyXG5iZyAwLjVcclxuYmlnID0gbmV3IENoZXNzIFwiZTJlNCBlN2U1IGcxZjMgYjhjNiBmMWM0XCJcclxuc21hbGwgPSBuZXcgQ2hlc3MgXCJnMmc0IGU3ZTUgZjJmNCBkOGg0XCIsMThcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRjOlxyXG5cdFx0XHRcdFwiYmlnLm1vdmUgMFwiIDogMFxyXG5cdFx0XHRcdFwiYmlnLm1vdmUgMVwiIDogMFxyXG5cdFx0XHRcdFwiYmlnLm1vdmUgMlwiIDogMFxyXG5cdFx0XHRcdFwiYmlnLm1vdmUgM1wiIDogMFxyXG5cdFx0XHRcdFwiYmlnLm1vdmUgNFwiIDogMFxyXG5cdFx0XHRcdFwiYmlnLm1vdmUgNVwiIDogMFxyXG5cdFx0XHRcdFwic21hbGwubW92ZSAwXCIgOiAwXHJcblx0XHRcdFx0XCJzbWFsbC5tb3ZlIDFcIiA6IDBcclxuXHRcdFx0XHRcInNtYWxsLm1vdmUgMlwiIDogMFxyXG5cdFx0XHRcdFwic21hbGwubW92ZSAzXCIgOiAwXHJcblx0XHRcdFx0XCJzbWFsbC5tb3ZlIDRcIiA6IDBcclxuXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHRcIkwxMDogR3Vlc3MgYSBOdW1iZXJcIiA6XHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcblx0XHRndWVzczE6XHJcblx0XHRcdGI6IFwiXCJcIlxyXG4jIExPQzoxMSBiZyByZWN0TW9kZSBmb3IgcmFuZ2UgcmVjdFxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5iZyAxXHJcbnJlY3RNb2RlIENFTlRFUixDRU5URVJcclxubiA9IDIwMFxyXG5zaXplID0gbiAvIDhcclxuc2MgMFxyXG5mb3IgaSBpbiByYW5nZSA4XHJcblx0eCA9IGkgKiBzaXplICsgc2l6ZS8yXHJcblx0eSA9IHNpemUvMlxyXG5cdHcgPSBzaXplXHJcblx0aCA9IHNpemVcclxuXHRyZWN0IHgseSx3LGhcclxuXCJcIlwiXHJcblxyXG5cdFx0Z3Vlc3MyOlxyXG5cdFx0XHRiOiBcIlwiXCJcclxuIyBMT0M6MTYgYmcgcmVjdE1vZGUgZm9yIHJhbmdlIHJlY3QgdGV4dEFsaWduIHRleHQgc2MgZmNcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxuYmcgMVxyXG5yZWN0TW9kZSBDRU5URVIsQ0VOVEVSXHJcbnRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcbm4gPSAyMDBcclxuc2l6ZSA9IG4gLyA4XHJcbmZvciBpIGluIHJhbmdlIDhcclxuXHR4ID0gaSAqIHNpemUgKyBzaXplLzJcclxuXHR5ID0gc2l6ZS8yXHJcblx0dyA9IHNpemVcclxuXHRoID0gc2l6ZVxyXG5cdGZjKClcclxuXHRzYyAwXHJcblx0cmVjdCB4LHksdyxoXHJcblx0ZmMgMFxyXG5cdHNjKClcclxuXHR0ZXh0IGkseCx5XHJcblwiXCJcIlxyXG5cclxuXHRcdGd1ZXNzMzpcclxuXHRcdFx0YjogXCJcIlwiXHJcbiMgTE9DOjE3IGJnIHJlY3RNb2RlIGZvciByYW5nZSByZWN0IHRleHRBbGlnbiB0ZXh0IHNjIGZjXHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbmJnIDFcclxucmVjdE1vZGUgQ0VOVEVSLENFTlRFUlxyXG50ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5uID0gMjAwXHJcbnNpemUgPSBuIC8gOFxyXG5mb3IgaSBpbiByYW5nZSA4XHJcblx0Zm9yIGogaW4gcmFuZ2UgOFxyXG5cdFx0eCA9IGkgKiBzaXplICsgc2l6ZS8yXHJcblx0XHR5ID0gaiAqIHNpemUgKyBzaXplLzJcclxuXHRcdHcgPSBzaXplXHJcblx0XHRoID0gc2l6ZVxyXG5cdFx0ZmMoKVxyXG5cdFx0c2MgMFxyXG5cdFx0cmVjdCB4LHksdyxoXHJcblx0XHRmYyAwXHJcblx0XHRzYygpXHJcblx0XHR0ZXh0IGkrOCpqLHgseVxyXG5cIlwiXCJcclxuXHJcblx0XHRndWVzczQ6XHJcblx0XHRcdGI6IFwiXCJcIlxyXG4jIExPQzoxOSBiZyByZWN0TW9kZSBmb3IgcmFuZ2UgcmVjdCB0ZXh0QWxpZ24gdGV4dCBzYyBmY1xyXG5cclxuZiA9IChueCxueSkgLT5cclxuXCJcIlwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5mID0gKG54LG55KSAtPlxyXG5cdGJnIDFcclxuXHRyZWN0TW9kZSBDRU5URVIsQ0VOVEVSXHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRuID0gMjAwXHJcblx0cHggPSBuL254XHJcblx0cHkgPSBuL255XHJcblx0Zm9yIGkgaW4gcmFuZ2UgbnhcclxuXHRcdGZvciBqIGluIHJhbmdlIG55XHJcblx0XHRcdHggPSBpICogcHggKyBweC8yXHJcblx0XHRcdHkgPSBqICogcHkgKyBweS8yXHJcblx0XHRcdHcgPSBweFxyXG5cdFx0XHRoID0gcHlcclxuXHRcdFx0ZmMoKVxyXG5cdFx0XHRzYyAwXHJcblx0XHRcdHJlY3QgeCx5LHcsaFxyXG5cdFx0XHRmYyAwXHJcblx0XHRcdHNjKClcclxuXHRcdFx0dGV4dCBpK254KmoseCx5XHJcblwiXCJcIlxyXG5cdFx0XHRjOlxyXG5cdFx0XHRcdFwiZiA4LDZcIjowXHJcblx0XHRcdFx0XCJmIDYsNlwiOjBcclxuXHJcblx0XHRndWVzczU6XHJcblx0XHRcdGI6IFwiXCJcIlxyXG4jIExPQzoyMyBiZyByZWN0TW9kZSBmb3IgcmFuZ2UgcmVjdCB0ZXh0QWxpZ24gdGV4dCBzYyBmYyBpZiBlbHNlXHJcblxyXG5mID0gKG54LG55LHN0YXJ0LHN0b3BwKSAtPlxyXG5cIlwiXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbmYgPSAobngsbnksc3RhcnQsc3RvcHApIC0+XHJcblx0YmcgMVxyXG5cdHJlY3RNb2RlIENFTlRFUixDRU5URVJcclxuXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cdG4gPSAyMDBcclxuXHRweCA9IG4vbnhcclxuXHRweSA9IG4vbnlcclxuXHRmb3IgaSBpbiByYW5nZSBueFxyXG5cdFx0Zm9yIGogaW4gcmFuZ2UgbnlcclxuXHRcdFx0eCA9IGkgKiBweCArIHB4LzJcclxuXHRcdFx0eSA9IGogKiBweSArIHB5LzJcclxuXHRcdFx0dyA9IHB4XHJcblx0XHRcdGggPSBweVxyXG5cdFx0XHRmYygpXHJcblx0XHRcdHNjIDBcclxuXHRcdFx0cmVjdCB4LHksdyxoXHJcblx0XHRcdGluZGV4ID0gaStueCpqXHJcblx0XHRcdHNjKClcclxuXHRcdFx0aWYgc3RhcnQgPD0gaW5kZXggJiYgaW5kZXggPD0gc3RvcHBcclxuXHRcdFx0XHRmYyAwXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRmYyAwLjhcclxuXHRcdFx0dGV4dCBpbmRleCx4LHlcclxuXCJcIlwiXHJcblx0XHRcdGM6XHJcblx0XHRcdFx0XCJmIDgsOCwxOCw0NVwiIDogMFxyXG5cdFx0XHRcdFwiZiA2LDYsMTAsMjVcIiA6IDBcclxuXHJcblx0XHRndWVzczY6XHJcblx0XHRcdGI6IFwiXCJcIlxyXG4jIExPQzoyOCBiZyByZWN0TW9kZSBmb3IgcmFuZ2UgcmVjdCB0ZXh0QWxpZ24gdGV4dCBzYyBmYyBpZiBlbHNlXHJcblxyXG5mID0gKG54LG55LHN0YXJ0LHN0b3BwLG14LG15LHRhcmdldCkgLT5cclxuXCJcIlwiXHJcblx0XHRcdGE6IFwiXCJcIlxyXG5mID0gKG54LG55LHN0YXJ0LHN0b3BwLG14LG15LHRhcmdldCkgLT5cclxuXHRiZyAxXHJcblx0cmVjdE1vZGUgQ0VOVEVSLENFTlRFUlxyXG5cdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcblx0biA9IDIwMFxyXG5cdHB4ID0gbi9ueFxyXG5cdHB5ID0gbi9ueVxyXG5cdGkgPSBpbnQgbXgvcHhcclxuXHRqID0gaW50IG15L3B5IFxyXG5cdGNsaWNrZWQgPSBpK254KmpcclxuXHRpZiBjbGlja2VkIDw9IHRhcmdldCB0aGVuIHN0YXJ0ID0gY2xpY2tlZCArIDFcclxuXHRpZiBjbGlja2VkID49IHRhcmdldCB0aGVuIHN0b3BwID0gY2xpY2tlZCAtIDFcclxuXHRmb3IgaSBpbiByYW5nZSBueFxyXG5cdFx0Zm9yIGogaW4gcmFuZ2UgbnlcclxuXHRcdFx0eCA9IGkgKiBweCArIHB4LzJcclxuXHRcdFx0eSA9IGogKiBweSArIHB5LzJcclxuXHRcdFx0dyA9IHB4XHJcblx0XHRcdGggPSBweVxyXG5cdFx0XHRmYygpXHJcblx0XHRcdHNjIDBcclxuXHRcdFx0cmVjdCB4LHksdyxoXHJcblx0XHRcdGluZGV4ID0gaStueCpqXHJcblx0XHRcdHNjKClcclxuXHRcdFx0aWYgc3RhcnQgPD0gaW5kZXggYW5kIGluZGV4IDw9IHN0b3BwXHJcblx0XHRcdFx0ZmMgMFxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0ZmMgMC44XHJcblx0XHRcdHRleHQgaW5kZXgseCx5XHJcblwiXCJcIlxyXG5cdFx0XHRjOlxyXG5cdFx0XHRcdFwiZiA4LDgsMTgsNDUsNzAsOTAsMjhcIjowXHJcblx0XHRcdFx0XCJmIDYsNiwxMCwyNSw5MCw5MCwyMFwiOjBcclxuXHJcbiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHRFeGhpYml0aW9uIDpcclxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5cclxuXHRcdGNsb3duOlxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzozMCBiZyBjaXJjbGUgZmMgc2Mgc3cgbGluZSBsZXJwIChEYXZpZCBMYXJzc29uKVxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmJnIDAsIDEsIDAsIDAuNVxyXG5mYyAxLCAwLCAwXHJcbmNpcmNsZSAxMCwgMTAsIDVcclxuY2lyY2xlIDIwLCAyMCwgMTBcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuXHR4ID0gbGVycCAxMCwgMjAsIGlcclxuXHR5ID0geFxyXG5cdHIgPSBsZXJwIDUsIDEwLCBpXHJcblx0Y2lyY2xlIHgsIHksIHJcclxuZmMgMCwgMSwgMVxyXG5jaXJjbGUgMTkwLCAxMCwgNVxyXG5jaXJjbGUgMTgwLCAyMCwgMTBcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuXHR4ID0gbGVycCAxOTAsIDE4MCwgaVxyXG5cdHkgPSBsZXJwIDEwLCAyMCwgaVxyXG5cdHIgPSBsZXJwIDUsIDEwLCBpXHJcblx0Y2lyY2xlIHgsIHksIHJcclxuZmMgMVxyXG5jaXJjbGUgMTAwLCAxMDAsIDUwXHJcbmZjIDBcclxuY2lyY2xlIDgwLCA4MCwgMTBcclxuY2lyY2xlIDEyMCwgODAsIDEwXHJcbnNjIDEsIDEsIDBcclxuc3cgNVxyXG5saW5lIDcwLCAxMDUsIDgwLCAxMjBcclxubGluZSA4MCwgMTIwLCAxMTUsIDEyMFxyXG5saW5lIDExNSwgMTIwLCAxMzAsIDEwNVxyXG5mYyAxLCAwLCAwXHJcbnNjIDEsIDAsIDBcclxuY2lyY2xlIDEwMCwgMTAwLCAxMFxyXG5cIlwiXCJcclxuXHJcblx0XHR0b210ZWx1dmE6XHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjEyIGNpcmNsZSBmYyBzYyB0cmlhbmdsZSAoU2FicmluYSBMYXJzc29uKVxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmJnIDAsMSwwXHJcbmZjIDEsMCwwXHJcbnNjIDEsMCwwXHJcbnRyaWFuZ2xlIDYwLDE0MCwxMDAsNjAsMTQwLDE0MFxyXG5mYyAxXHJcbnNjIDFcclxuY2lyY2xlIDYwLDE0MCwxMFxyXG5jaXJjbGUgODAsMTQwLDEwXHJcbmNpcmNsZSAxMDAsMTQwLDEwXHJcbmNpcmNsZSAxMjAsMTQwLDEwXHJcbmNpcmNsZSAxNDAsMTQwLDEwXHJcbmNpcmNsZSAxMDAsNjAsMTBcdFx0XHJcblwiXCJcIlxyXG5cclxuXHRcdHNub3dtYW46XHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjIxIGNpcmNsZSBmYyBsaW5lIHNjIHRyaWFuZ2xlIChEYXZpZCBMYXJzc29uKVxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmZjIDFcclxuY2lyY2xlIDEwMCwgMTUwLCA1MFxyXG5jaXJjbGUgMTAwLCA3MCwgNDBcclxuZmMgMFxyXG5jaXJjbGUgODAsIDYwLCA4XHJcbmNpcmNsZSAxMjAsIDYwLCA4XHJcbmNpcmNsZSA4NSwgOTAsIDZcclxuY2lyY2xlIDk1LCA5NSwgNlxyXG5jaXJjbGUgMTE1LCA5MCwgNlxyXG5jaXJjbGUgMTA1LCA5NSwgNlxyXG5mYyAxLCAwLCAwLCAwLjVcclxudHJpYW5nbGUgMTAwLCA2NSwgOTAsIDgwLCAxMDUsIDc1XHJcbnNjIDEsIDEsIDBcclxuc3cgM1xyXG5saW5lIDUwLCAxNDAsIDMwLCA5MFxyXG5saW5lIDM1LCAxMDAsIDQwLCA4MFxyXG5saW5lIDE0MCwgMTQwLCAxNzAsIDkwXHJcbmxpbmUgMTYwLCAxMDUsIDE1NSwgMTAwXHJcbmZjIDFcclxuc2MgMVxyXG5yZWN0IDIsIDE4MCwgMTk2LCAyMFxyXG5cIlwiXCJcclxuXHJcblx0XHRjaHJpc3RtYXNUcmVlOlxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzozNSBiZyBjaXJjbGUgZmMgbGluZSByZWN0IHF1YWQgc2MgdHJpYW5nbGUgKFNhYnJpbmEgTGFyc3NvbilcclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5iZyAwIFxyXG5mYyAwLCAxLCAwIFxyXG5zYyAwLCAxLCAwIFxyXG50cmlhbmdsZSAxMDAsIDEwMCwgMTgwLCAxNjAsIDIwLCAxNjAgXHJcbnRyaWFuZ2xlIDEwMCwgNjAsIDE2MCwgMTIwLCA0MCwgMTIwIFxyXG50cmlhbmdsZSAxMDAsIDQwLCAxNDAsIDgwLCA2MCwgODAgXHJcbmZjIDAuNSBcclxuc2MgMC41IFxyXG5yZWN0IDgwLCAxNjAsIDQwLCAyMCBcclxuZmMgMSwgMSwgMCBcclxuc2MgMSwgMSwgMCBcclxucXVhZCAxMDAsIDAsIDEyMCwgMjAsIDEwMCwgNDAsIDgwLCAyMCBcclxucmVjdCA4NSwgNSwgMzAsIDMwIFxyXG5zYyAxLCAxLCAwIFxyXG5saW5lIDgwLCA2MCwgMTQwLCAxMjAgXHJcbmxpbmUgNjAsIDEwMCwgMTIwLCAxNjAgXHJcbmZjIDEsIDAsIDAgXHJcbnNjIDEsIDAsIDAgXHJcbmNpcmNsZSA4MCwgMTAwLCA1IFxyXG5jaXJjbGUgMTQwLCAxNDAsIDUgXHJcbmNpcmNsZSAxMDAsIDYwLCA1IFxyXG5jaXJjbGUgNjAsIDE2MCwgNSBcclxuY2lyY2xlIDEwMCwgMTIwLCA1IFxyXG5mYyAxIFxyXG5zYyAxIFxyXG5yZWN0IDAsIDE4MCwgMjAwLCAyMCBcclxuY2lyY2xlIDIwLCAyMCwgNSBcclxuY2lyY2xlIDQwLCA0MCwgNSBcclxuY2lyY2xlIDEwLCA4MCwgNSBcclxuY2lyY2xlIDMwLCAxNDAsIDUgXHJcbmNpcmNsZSA1MCwgMTAwLCA1IFxyXG5jaXJjbGUgMTIwLCA1MCwgNSBcclxuY2lyY2xlIDE2MCwgMjAsIDUgXHJcbmNpcmNsZSAxODAsIDgwLCA1IFxyXG5jaXJjbGUgMTYwLCAxMzAsIDUgXHJcbmNpcmNsZSAxOTAsIDE4MCwgNSBcclxuXCJcIlwiXHJcblxyXG5cdFx0c2FudGE6XHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjE4IGJnIGNpcmNsZSBlbGxpcHNlIGZjIHJlY3QgcXVhZCBzYyB0cmlhbmdsZSAoU2FicmluYSBMYXJzc29uKVxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmJnIDAsMCwxXHJcbmZjIDEsMCwwXHJcbnNjIDEsMCwwXHJcbmVsbGlwc2UgMTAwLDUwLDYwLDcwXHJcbnJlY3QgNjAsMjAsMzAsMTBcclxucXVhZCAxNDAsMTAsMTQ1LDIwLDEyMCwyNSwxMTUsMjBcclxuZmMgMFxyXG5zYyAwXHJcbmNpcmNsZSA1MCwyNSwxMFxyXG5yZWN0IDcwLDQwLDYwLDEwXHJcbmNpcmNsZSAxNDAsMjAsMTBcclxuc2MgMSwxLDBcclxucmVjdCAxMDAsNDUsNSw1XHJcbmZjIDAuNVxyXG5zYyAwLjVcclxucmVjdCA2MCw4MCw4MCwyMFxyXG5yZWN0IDgwLDEwMCw0MCw2MFxyXG50cmlhbmdsZSAxMDAsMTQwLDAsMjAwLDIwMCwyMDBcclxuXCJcIlwiXHJcblxyXG5cdFx0ZGlzdDogXHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjEwIGJnIGNpcmNsZSBkaXN0IGZjIGxlcnAgbWFwIHNjXHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuYmcgMFxyXG5mYyAxXHJcbnNjKClcclxuZm9yIGkgaW4gcmFuZ2UgMTBcclxuXHR4ID0gbGVycCAxMCwzMCxpXHJcblx0Zm9yIGogaW4gcmFuZ2UgMTBcclxuXHRcdHkgPSBsZXJwIDEwLDMwLGpcclxuXHRcdGQgPSBkaXN0IDEwMCwxMDAseCx5XHJcblx0XHRyID0gbWFwKGQsMCwxNTAsMSwyMCkvMlxyXG5cdFx0Y2lyY2xlIHgseSxyXHJcblwiXCJcIiBcclxuXHRcdFxyXG5cdFx0YnVsZ2U6IFxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzoxMCBiZyBjaXJjbGUgZGlzdCBmaWxsIG1hcCBub1N0cm9rZSBzaW5cclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5iZyAwXHJcbmZpbGwgMjU1XHJcbm5vU3Ryb2tlKClcclxuZm9yIGkgaW4gcmFuZ2UgMjBcclxuXHRmb3IgaiBpbiByYW5nZSAyMFxyXG5cdFx0eCA9IGkqMjAwLzIwKzVcclxuXHRcdHkgPSBqKjIwMC8yMCs1XHJcblx0XHRyID0gbWFwKHNpbihpKlBJLzIwKSwtMSwxLDEsMykgKiBtYXAoc2luKGoqUEkvMjApLC0xLDEsMSwzKSAvIDJcclxuXHRcdGNpcmNsZSB4LHksclxyXG5cIlwiXCJcclxuXHJcblx0XHR3YXZlOiBcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6OSBjaXJjbGUgY29sb3JNb2RlIGZpbGwgbWFwIG5vU3Ryb2tlIHNpbiBQSVxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmNvbG9yTW9kZSBIU0IsMzYwLDEwMCwxMDBcclxubm9TdHJva2UoKVxyXG5iZyAwXHJcbmZvciBpIGluIHJhbmdlIDIxXHJcblx0ZmlsbCBtYXAoaSwwLDIwLDAsMzYwKSwxMDAsMTAwXHJcblx0YSA9IG1hcCBpLDAsMjAsMCwyKlBJXHJcblx0eCA9IDEwKmlcclxuXHR5ID0gbWFwIHNpbihhKSwtMSwxLDAsMjAwXHJcblx0Y2lyY2xlIHgseSwzXHJcblwiXCJcIlxyXG5cclxuXHRcdGNpcmNsZTogXHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjEwIGJnIGNpcmNsZSBjb2xvck1vZGUgY29zIGZjIG1hcCBQSSBzYyBzaW5cclxuXHJcblwiXCJcIlxyXG5cdFx0XHRhOlwiXCJcIlxyXG5iZyAwXHJcbmNvbG9yTW9kZSBIU0IsMzYwLDEwMCwxMDBcclxuZm9yIGkgaW4gcmFuZ2UgMjBcclxuXHRyPW1hcCBpLDAsMTksMCwzNjBcclxuXHRmaWxsIHIsMjU1LDI1NVxyXG5cdGE9bWFwIGksMCwyMCwwLDIqUElcclxuXHRzYygpXHJcblx0eD1tYXAgY29zKGEpLC0xLDEsMCwyMDBcclxuXHR5PW1hcCBzaW4oYSksLTEsMSwwLDIwMFxyXG5cdGNpcmNsZSB4LHksM1xyXG5cIlwiXCJcclxuXHRcclxuXHRcdGNpcmNsZXM6IFxyXG5cdFx0XHRiOlwiXCJcIlxyXG4jIExPQzoxMiBiZyBjaXJjbGUgY29sb3JNb2RlIGNvcyBmaWxsIG1hcCBub1N0cm9rZSB0cmFuc2xhdGUgc2luIFBJXHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuYmcgMFxyXG5ub1N0cm9rZSgpXHJcbmNvbG9yTW9kZSBIU0IsMzYwLDEwMCwxMDBcclxudHJhbnNsYXRlIDEwMCwxMDBcclxuZm9yIGkgaW4gcmFuZ2UgMjBcclxuXHRmb3IgaiBpbiByYW5nZSAxMVxyXG5cdFx0ZmlsbCBtYXAoaSwwLDIwLDAsMzYwKSwyNTUsMjU1XHJcblx0XHRhID0gbWFwIGksMCwyMCwwLDIqUElcclxuXHRcdHggPSBtYXAgY29zKGEpLC0xLDEsLWoqMTAsaioxMFxyXG5cdFx0eSA9IG1hcCBzaW4oYSksLTEsMSwtaioxMCxqKjEwXHJcblx0XHRyID0gM1xyXG5cdFx0Y2lyY2xlIHgseSxyXHJcblwiXCJcIlxyXG5cdFx0XHJcblx0XHRzaXplZF9jaXJjbGVzOiBcclxuXHRcdFx0YjpcIlwiXCJcclxuIyBMT0M6MTIgY2lyY2xlIGNvbG9yTW9kZSBjb3MgZmlsbCBtYXAgbm9TdHJva2UgUEkgc2luIHRyYW5zbGF0ZVxyXG5cclxuXCJcIlwiXHJcblx0XHRcdGE6XCJcIlwiXHJcbmJnIDBcclxubm9TdHJva2UoKVxyXG5jb2xvck1vZGUgSFNCLDM2MCwxMDAsMTAwXHJcbnRyYW5zbGF0ZSAxMDAsMTAwXHJcbmZvciBpIGluIHJhbmdlIDIwXHJcblx0ZmlsbCBtYXAoaSwwLDIwLDAsMzYwKSwyNTUsMjU1XHJcblx0YSA9IG1hcCBpLDAsMjAsMCwyKlBJXHJcblx0Zm9yIGogaW4gcmFuZ2UgMTFcclxuXHRcdHggPSBtYXAgY29zKGEpLC0xLDEsLWoqMTAsaioxMFxyXG5cdFx0eSA9IG1hcCBzaW4oYSksLTEsMSwtaioxMCxqKjEwXHJcblx0XHRyID0gbWFwKGosMCwxMCwwLDEwKS8yXHJcblx0XHRjaXJjbGUgeCx5LHJcclxuXCJcIlwiXHJcblx0XHRcclxuXHRcdHJvdGF0ZWRfY2lyY2xlczogXHJcblx0XHRcdGI6XCJcIlwiXHJcbiMgTE9DOjE3IGNpcmNsZSBjb3MgbWFwIFBJIHB1c2ggcG9wIHJvdGF0ZSBzaW4gdHJhbnNsYXRlXHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTpcIlwiXCJcclxuY29sb3JNb2RlIEhTQiwzNjAsMTAwLDEwMFxyXG5zYygpXHJcbmJnIDBcclxudHJhbnNsYXRlIDEwMCwxMDBcclxuZm9yIGkgaW4gcmFuZ2UgMjBcclxuXHRyID0gbWFwIGksMCwyMCwwLDM2MFxyXG5cdGE9bWFwIGksMCwyMCwwLDIqUElcclxuXHRmb3IgaiBpbiByYW5nZSAxMVxyXG5cdFx0cHVzaCgpXHJcblx0XHRyb3RhdGUgbWFwIGosMCwxMCwwLDM2MFxyXG5cdFx0ZmlsbCByLDI1NSwyNTVcclxuXHRcdHg9bWFwIGNvcyhhKSwtMSwxLC1qKjEwLGoqMTBcclxuXHRcdHk9bWFwIHNpbihhKSwtMSwxLC1qKjEwLGoqMTBcclxuXHRcdGNpcmNsZSB4LHksai8yXHJcblx0XHRwb3AoKVxyXG5cIlwiXCJcclxuXHJcblx0XHRncmF2aXR5IDogXHJcblx0XHRcdGI6IFwiXCJcIlxyXG4jIExPQzo2IGNpcmNsZSBsZXJwXHJcblxyXG5cIlwiXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbmZjIDFcclxuZm9yIGkgaW4gcmFuZ2UgMTVcclxuXHR4PTUrMTAqaVxyXG5cdHk9NStsZXJwKDAsbGVycCgwLDEsaSksaSlcclxuXHRjaXJjbGUgeCx5LDVcclxuXCJcIlwiXHJcblxyXG5cdFx0aHlwbm90aWNBIDogXHJcblx0XHRcdGI6IFwiXCJcIlxyXG5cdFx0XHQjIExPQzo2IC0+IGJnIGNpcmNsZSBjb3MgZmMgc2Mgc2luXHJcblxyXG5cdFx0XHRoeXBub3RpY0EgPSAoKSAtPlxyXG5cdFx0XHRcIlwiXCJcclxuXHRcdFx0YTogXCJcIlwiXHJcbmh5cG5vdGljQSA9ICgpIC0+XHJcblx0YmcgMC41LCAwLCAwXHJcblx0c2MoKVxyXG5cdGZjIDFcclxuXHRmb3IgaSBpbiByYW5nZSAxMDBcclxuXHRcdHggPSAxMDAgKyBjb3MoaSkgKiBpXHJcblx0XHR5ID0gMTAwICsgc2luKGkpICogaVxyXG5cdFx0Y2lyY2xlIHgsIHksIDVcclxuXCJcIlwiXHJcblx0XHRcdGM6IFwiaHlwbm90aWNBKClcIjowXHJcblxyXG5cdFx0aHlwbm90aWNCIDogXHJcblx0XHRcdGI6IFwiXCJcIlxyXG5cdFx0XHQjIExPQzo3IC0+IGJnIGNpcmNsZSBjb3MgZmMgbWFwIHNjIHNpblxyXG5cclxuXHRcdFx0aHlwbm90aWNCID0gKHQpIC0+XHJcblx0XHRcdFwiXCJcIlxyXG5cdFx0XHRhOiBcIlwiXCJcclxuaHlwbm90aWNCID0gKHQpIC0+XHJcblx0YmcgMC41LCAwLCAwXHJcblx0c2MoKVxyXG5cdGZjIDFcclxuXHRmb3IgaSBpbiByYW5nZSAxMDBcclxuXHRcdHggPSAxMDAgKyBjb3MoaSkgKiBpXHJcblx0XHR5ID0gMTAwICsgc2luKGkpICogaVxyXG5cdFx0c3BlZWQgPSBpLzEwLjBcclxuXHRcdHIgPSBtYXAgc2luKHQqc3BlZWQpLCAtMSwgMSwgMiwgNVxyXG5cdFx0Y2lyY2xlIHgsIHksIHJcclxuXCJcIlwiXHJcblx0XHRcdGM6IFxyXG5cdFx0XHRcdFwiaHlwbm90aWNCIDFcIjowXHJcblx0XHRcdFx0XCJoeXBub3RpY0IgNVwiOjBcclxuXHJcbiJdfQ==
//# sourceURL=C:\github\p5Dojo\data.coffee