// Generated by CoffeeScript 1.11.1
var assert, clean, count, enclose, rtrim, spacesToTabs, tabcount, transpile;

assert = function(a, b) {
  if (a !== b) {
    return print(a + " != " + b);
  }
};

tabcount = function(s) {
  var i;
  i = 0;
  while (s[i] === '\t') {
    i += 1;
  }
  return i;
};

count = function(s, ch) {
  var arr;
  arr = s.split(ch);
  return arr.length - 1;
};

enclose = function(s) {
  var arr;
  if (count(s, '=') === 1) {
    return s;
  }
  arr = s.trim().split(' ');
  return arr[0] + ' (' + arr.slice(1).join(' ') + ')';
};

spacesToTabs = function(line) {
  if (line.indexOf('  ') === 0) {
    return '\t' + spacesToTabs(line.substring(2));
  }
  if (line.indexOf('\t') === 0) {
    return '\t' + spacesToTabs(line.substring(1));
  }
  if (line.indexOf(' \t') === 0) {
    return '\t' + spacesToTabs(line.substring(2));
  }
  return line;
};

assert(spacesToTabs('    '), '\t\t');

assert(spacesToTabs('\t  '), '\t\t');

assert(spacesToTabs('  \t'), '\t\t');

assert(spacesToTabs(' \t  '), '\t\t');

rtrim = function(str) {
  return str.replace(/\s\s*$/, '');
};

clean = function(s) {
  var pos;
  s = s.split(' ').join("");
  s = s.split('\t').join("");
  pos = s.indexOf("#");
  if (pos >= 0) {
    s = s.substr(0, pos);
  }
  return s;
};

transpile = function(code) {
  var err, j, len, line, lines, tabs, temp;
  lines = code.split('\n');
  if (lines[0].indexOf('//ECMA') === 0) {
    return code;
  }
  temp = [];
  for (j = 0, len = lines.length; j < len; j++) {
    line = lines[j];
    line = spacesToTabs(line);
    tabs = tabcount(line);
    if (clean(line).length > 0) {
      temp.push(line);
    }
  }
  code = temp.join('\n');
  try {
    return CoffeeScript.compile(code);
  } catch (error) {
    err = error;
    return print(err);
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwaWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHJhbnNwaWxlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQTs7QUFBQSxNQUFBLEdBQVMsU0FBQyxDQUFELEVBQUcsQ0FBSDtFQUNQLElBQUcsQ0FBQSxLQUFLLENBQVI7V0FDRSxLQUFBLENBQU0sQ0FBQSxHQUFJLE1BQUosR0FBYSxDQUFuQixFQURGOztBQURPOztBQUlULFFBQUEsR0FBVyxTQUFDLENBQUQ7QUFDVCxNQUFBO0VBQUEsQ0FBQSxHQUFJO0FBQ0osU0FBTSxDQUFFLENBQUEsQ0FBQSxDQUFGLEtBQU0sSUFBWjtJQUNFLENBQUEsSUFBSztFQURQO1NBRUE7QUFKUzs7QUFNWCxLQUFBLEdBQVEsU0FBQyxDQUFELEVBQUcsRUFBSDtBQUNOLE1BQUE7RUFBQSxHQUFBLEdBQU0sQ0FBQyxDQUFDLEtBQUYsQ0FBUSxFQUFSO1NBQ04sR0FBRyxDQUFDLE1BQUosR0FBVztBQUZMOztBQUlSLE9BQUEsR0FBVSxTQUFDLENBQUQ7QUFDUixNQUFBO0VBQUEsSUFBRyxLQUFBLENBQU0sQ0FBTixFQUFRLEdBQVIsQ0FBQSxLQUFnQixDQUFuQjtBQUNFLFdBQU8sRUFEVDs7RUFFQSxHQUFBLEdBQU0sQ0FBQyxDQUFDLElBQUYsQ0FBQSxDQUFRLENBQUMsS0FBVCxDQUFlLEdBQWY7U0FDTixHQUFJLENBQUEsQ0FBQSxDQUFKLEdBQVMsSUFBVCxHQUFnQixHQUFHLENBQUMsS0FBSixDQUFVLENBQVYsQ0FBWSxDQUFDLElBQWIsQ0FBa0IsR0FBbEIsQ0FBaEIsR0FBeUM7QUFKakM7O0FBTVYsWUFBQSxHQUFlLFNBQUMsSUFBRDtFQUNiLElBQUcsSUFBSSxDQUFDLE9BQUwsQ0FBYSxJQUFiLENBQUEsS0FBc0IsQ0FBekI7QUFDRSxXQUFPLElBQUEsR0FBTyxZQUFBLENBQWEsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFmLENBQWIsRUFEaEI7O0VBRUEsSUFBRyxJQUFJLENBQUMsT0FBTCxDQUFhLElBQWIsQ0FBQSxLQUFzQixDQUF6QjtBQUNFLFdBQU8sSUFBQSxHQUFPLFlBQUEsQ0FBYSxJQUFJLENBQUMsU0FBTCxDQUFlLENBQWYsQ0FBYixFQURoQjs7RUFFQSxJQUFHLElBQUksQ0FBQyxPQUFMLENBQWEsS0FBYixDQUFBLEtBQXVCLENBQTFCO0FBQ0UsV0FBTyxJQUFBLEdBQU8sWUFBQSxDQUFhLElBQUksQ0FBQyxTQUFMLENBQWUsQ0FBZixDQUFiLEVBRGhCOztTQUVBO0FBUGE7O0FBUWYsTUFBQSxDQUFPLFlBQUEsQ0FBYSxNQUFiLENBQVAsRUFBNEIsTUFBNUI7O0FBQ0EsTUFBQSxDQUFPLFlBQUEsQ0FBYSxNQUFiLENBQVAsRUFBNEIsTUFBNUI7O0FBQ0EsTUFBQSxDQUFPLFlBQUEsQ0FBYSxNQUFiLENBQVAsRUFBNEIsTUFBNUI7O0FBQ0EsTUFBQSxDQUFPLFlBQUEsQ0FBYSxPQUFiLENBQVAsRUFBNkIsTUFBN0I7O0FBRUEsS0FBQSxHQUFRLFNBQUMsR0FBRDtTQUNOLEdBQUcsQ0FBQyxPQUFKLENBQVksUUFBWixFQUFzQixFQUF0QjtBQURNOztBQUlSLEtBQUEsR0FBUSxTQUFDLENBQUQ7QUFDTixNQUFBO0VBQUEsQ0FBQSxHQUFJLENBQUMsQ0FBQyxLQUFGLENBQVEsR0FBUixDQUFZLENBQUMsSUFBYixDQUFrQixFQUFsQjtFQUNKLENBQUEsR0FBSSxDQUFDLENBQUMsS0FBRixDQUFRLElBQVIsQ0FBYSxDQUFDLElBQWQsQ0FBbUIsRUFBbkI7RUFDSixHQUFBLEdBQU0sQ0FBQyxDQUFDLE9BQUYsQ0FBVSxHQUFWO0VBQ04sSUFBRyxHQUFBLElBQU8sQ0FBVjtJQUNFLENBQUEsR0FBSSxDQUFDLENBQUMsTUFBRixDQUFTLENBQVQsRUFBVyxHQUFYLEVBRE47O1NBRUE7QUFOTTs7QUFRUixTQUFBLEdBQVksU0FBQyxJQUFEO0FBQ1YsTUFBQTtFQUFBLEtBQUEsR0FBUSxJQUFJLENBQUMsS0FBTCxDQUFXLElBQVg7RUFDUixJQUFHLEtBQU0sQ0FBQSxDQUFBLENBQUUsQ0FBQyxPQUFULENBQWlCLFFBQWpCLENBQUEsS0FBOEIsQ0FBakM7QUFDRSxXQUFPLEtBRFQ7O0VBRUEsSUFBQSxHQUFPO0FBQ1AsT0FBQSx1Q0FBQTs7SUFDRSxJQUFBLEdBQU8sWUFBQSxDQUFhLElBQWI7SUFDUCxJQUFBLEdBQU8sUUFBQSxDQUFTLElBQVQ7SUFDUCxJQUFHLEtBQUEsQ0FBTSxJQUFOLENBQVcsQ0FBQyxNQUFaLEdBQXFCLENBQXhCO01BQ0UsSUFBSSxDQUFDLElBQUwsQ0FBVSxJQUFWLEVBREY7O0FBSEY7RUFLQSxJQUFBLEdBQU8sSUFBSSxDQUFDLElBQUwsQ0FBVSxJQUFWO0FBQ1A7V0FDRSxZQUFZLENBQUMsT0FBYixDQUFxQixJQUFyQixFQURGO0dBQUEsYUFBQTtJQUVNO1dBQ0osS0FBQSxDQUFNLEdBQU4sRUFIRjs7QUFYVSIsInNvdXJjZXNDb250ZW50IjpbImFzc2VydCA9IChhLGIpIC0+XHJcbiAgaWYgYSAhPSBiXHJcbiAgICBwcmludCBhICsgXCIgIT0gXCIgKyBiXHJcblxyXG50YWJjb3VudCA9IChzKSAtPlxyXG4gIGkgPSAwXHJcbiAgd2hpbGUgc1tpXT09J1xcdCdcclxuICAgIGkgKz0gMVxyXG4gIGlcclxuXHJcbmNvdW50ID0gKHMsY2gpIC0+XHJcbiAgYXJyID0gcy5zcGxpdChjaClcclxuICBhcnIubGVuZ3RoLTFcclxuXHJcbmVuY2xvc2UgPSAocykgLT5cclxuICBpZiBjb3VudChzLCc9JykgPT0gMVxyXG4gICAgcmV0dXJuIHMgICAgXHJcbiAgYXJyID0gcy50cmltKCkuc3BsaXQoJyAnKVxyXG4gIGFyclswXSArICcgKCcgKyBhcnIuc2xpY2UoMSkuam9pbignICcpICsgJyknXHJcblxyXG5zcGFjZXNUb1RhYnMgPSAobGluZSkgLT5cclxuICBpZiBsaW5lLmluZGV4T2YoJyAgJykgPT0gMFxyXG4gICAgcmV0dXJuICdcXHQnICsgc3BhY2VzVG9UYWJzIGxpbmUuc3Vic3RyaW5nIDJcclxuICBpZiBsaW5lLmluZGV4T2YoJ1xcdCcpID09IDBcclxuICAgIHJldHVybiAnXFx0JyArIHNwYWNlc1RvVGFicyBsaW5lLnN1YnN0cmluZyAxXHJcbiAgaWYgbGluZS5pbmRleE9mKCcgXFx0JykgPT0gMFxyXG4gICAgcmV0dXJuICdcXHQnICsgc3BhY2VzVG9UYWJzIGxpbmUuc3Vic3RyaW5nIDJcclxuICBsaW5lXHJcbmFzc2VydCBzcGFjZXNUb1RhYnMoJyAgICAnKSwnXFx0XFx0J1xyXG5hc3NlcnQgc3BhY2VzVG9UYWJzKCdcXHQgICcpLCdcXHRcXHQnXHJcbmFzc2VydCBzcGFjZXNUb1RhYnMoJyAgXFx0JyksJ1xcdFxcdCdcclxuYXNzZXJ0IHNwYWNlc1RvVGFicygnIFxcdCAgJyksJ1xcdFxcdCdcclxuXHJcbnJ0cmltID0gKHN0cikgLT5cclxuICBzdHIucmVwbGFjZSAvXFxzXFxzKiQvLCAnJ1xyXG5cclxuIyB0YXIgYm9ydCBhbGxhIGJsYW5rYSwgdGFiYmFyIG9jaCBrb21tZW50YXJlclxyXG5jbGVhbiA9IChzKSAtPlxyXG4gIHMgPSBzLnNwbGl0KCcgJykuam9pbihcIlwiKVxyXG4gIHMgPSBzLnNwbGl0KCdcXHQnKS5qb2luKFwiXCIpXHJcbiAgcG9zID0gcy5pbmRleE9mKFwiI1wiKVxyXG4gIGlmIHBvcyA+PSAwXHJcbiAgICBzID0gcy5zdWJzdHIgMCxwb3NcclxuICBzXHJcblxyXG50cmFuc3BpbGUgPSAoY29kZSkgLT5cclxuICBsaW5lcyA9IGNvZGUuc3BsaXQgJ1xcbidcclxuICBpZiBsaW5lc1swXS5pbmRleE9mKCcvL0VDTUEnKSA9PSAwXHJcbiAgICByZXR1cm4gY29kZVxyXG4gIHRlbXAgPSBbXVxyXG4gIGZvciBsaW5lIGluIGxpbmVzIFxyXG4gICAgbGluZSA9IHNwYWNlc1RvVGFicyBsaW5lXHJcbiAgICB0YWJzID0gdGFiY291bnQgbGluZVxyXG4gICAgaWYgY2xlYW4obGluZSkubGVuZ3RoID4gMFxyXG4gICAgICB0ZW1wLnB1c2ggbGluZVxyXG4gIGNvZGUgPSB0ZW1wLmpvaW4gJ1xcbidcclxuICB0cnlcclxuICAgIENvZmZlZVNjcmlwdC5jb21waWxlIGNvZGVcclxuICBjYXRjaCBlcnJcclxuICAgIHByaW50IGVyciJdfQ==
//# sourceURL=C:\github\p5Dojo\transpile.coffee