{
  "version": 3,
  "file": "R.js",
  "sourceRoot": "..\\..",
  "sources": [
    "coffee\\data\\R.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "ID_RandomDice =\n\tv:'2017-05-21'\n\tk:'bg sc circle operators [] int for class'\n\tl:18\n\th:1\n\tb: \"\"\"\nclass RandomDice extends Application\n\treset : ->\n\t\tsuper\n\t\t@seed = 0\n\tdraw : ->\n\tmousePressed : (mx,my) ->\n\trandint : (n) -> int n * fraction 10000 * Math.sin @seed++\napp = new RandomDice\n\"\"\"\n\ta:\"\"\"\nclass RandomDice extends Application\n\treset : ->\n\t\tsuper\n\t\t@seed = 0\n\t\t@throw()\n\trandint : (n) -> int n * fraction 10000 * Math.sin @seed++\n\tthrow : -> @value = 1 + @randint 6\n\tmousePressed : (mx,my) -> @throw()\n\tdraw : ->\n\t\tbg 1\n\t\tsc 1\n\t\tcoords = []\n\t\tif @value in [1,3,5] then coords.push [100,100]\n\t\tif @value in [4,5,6] then coords = coords.concat [[150,150],[ 50,50]]\n\t\tif @value in [2,3,4,5,6] then coords = coords.concat [[ 150,50],[ 50,150]]\n\t\tif @value in [6] then coords = coords.concat [[ 150,100],[ 50,100]]\n\t\tcircle x,y,20 for [x,y] in coords\napp = new RandomDice \"a\"\n\n\"\"\"\n\tc:\n\t\tapp : \"reset()\"\n\nID_rect =\n\tv: '2018-04-27'\n\tk: 'rect'\n\tl: 7\n\th: 0\n\tb: \"\"\"\n# Rita en rektangel\n\n# Draw a rectangle\n\n# rectMode CORNER\n#    x1,y1, w, h\nrect 80,40,40,20     \n\nrectMode CENTER\n#      x, y, w, h\nrect 100,90,40,20    \n\nrectMode CORNERS\n#    x1, y1, x2, y2\nrect 80,120,120,140  \n\nrectMode RADIUS\n#      x,  y,w/2,h/2 \nrect 100,170, 20, 10\n\"\"\"\n\ta: \"\"\"\n# Rita en rektangel\n\n# Draw a rectangle\n\n# rectMode CORNER\n#    x1,y1, w, h\nrect 80,40,40,20     \n\nrectMode CENTER\n#      x, y, w, h\nrect 100,90,40,20    \n\nrectMode CORNERS\n#    x1, y1, x2, y2\nrect 80,120,120,140  \n\nrectMode RADIUS\n#      x,  y,w/2,h/2 \nrect 100,170, 20, 10\n\"\"\"\n\nID_rects =\n\tv:'2018-04-26'\n\tk:'fc rect sc sw'\n\tl:6\n\th:1\n\tb:\"\"\"\n# rect x,y,w,h\n\"\"\"\n\ta:\"\"\"\n# rect x,y,w,h\n\nsw 10\nsc 0,0,0,0.5\n\nfc 0,1,0\nrect 20,20,100,120\n\nfc 1,1,0,0.5\nrect 60,80,120,100\n\"\"\"\n\nID_rect_2 =\n\tv:'2017-10-31'\n\tk:'fc rect sc'\n\tl:4\n\th:2\n\tb:\"\"\"\n\"\"\"\n\ta:\"\"\"\nfc 1,0,0\nsc()\nrect 85,70, 70,10\nrect 115,40, 10,100\n\"\"\"\n\nID_rect_3 =\n\tv : '2017-04-29'\n\tk : 'fc sc sw rect'\n\tl : 11\n\th:2\n\tb : \"\"\n\ta : \"\"\"\nfc 0,1,1\nsc()\nrect 60,60, 80,20\nrect 60,120, 80,20\nrect 60,60, 20,80\nrect 120,60, 20,80\nfc()\nsc 1,0,0\nsw 3\nrect 60,60, 80,80\nrect 80,80, 40,40\n\"\"\"\n\nID_rect_4 =\n\tv:'2018-04-23'\n\tk:'bg sc fc rect'\n\tl:7\n\th:3\n\tb:\"\"\n\ta:\"\"\"\nbg 0.5\nsc()\nfc 0,0,1\nrect 20,50,160,100\nfc 1,1,0\nrect 70,50,20,100\nrect 20,90,160,20\n\"\"\"\n\te:\n\t\t\"Wikipedia\" : \"https://sv.wikipedia.org/wiki/Sveriges_flagga#/media/File:Sweden_flag_construction_sheet.png\"\n\n\nID_RecurrenceEngine =\n\tv:'2018-10-18'\n\tk:'bg fc sc sw range circle class if text textAlign for []'\n\tl:53\n\th:3\n\tb:\"\"\"\nclass Button\n\tconstructor : (@title,@x,@y,@r) ->\n\tinside : (x,y) ->\n\trender : ->\nclass Engine extends Application\n\tclasses : -> [Button]\n\treset : ->\n\t\tsuper\n\tdraw : ->\n\tmousePressed : (mx,my) ->\napp = new Engine\n\n# b0 = a7b7 + .. + a0b0\n# Klicka ClrA och ClrB\n# St채ll in [a1,a0]=[-1,2] samt [b0]=[1]. Klicka upprepat p책 Calc\n# 1 2 3 4 5 6 ...\n# 2 4 6 8 10 ...\n# 1 1 2 3 5 8 13 ... Fibonacci\n# 1 4 9 16 25 36 ... Potensserie\n# 6 13 27 55 111 ...\n# 1 2 4 7 12 20 33 54 88 ...\n\"\"\"\n\ta:\"\"\"\n# St채ll in [1,-3,3] resp [1,4,9]. Klicka upprepat p책 Calc\n# 1 4 9 16 25 ...\n# Wolfram Alpha: LinearRecurrence, FindLinearRecurrence\nclass Button\n\tconstructor : (@title,@x,@y,@r) ->\n\tinside : (x,y) -> @r > dist x,y,@x,@y\n\tdraw : ->\n\t\tfc 1\n\t\tcircle @x,@y,@r\n\t\tfc 0\n\t\ttext @title,@x,@y\nclass Engine extends Application\n\tclasses : -> [Button]\n\treset : ->\n\t\tsuper\n\t\t@buttons = []\n\t\t@a = @b = range 8\n\t\t@buttons.push new Button 'ClrA',80,20,15\n\t\t@buttons.push new Button 'Calc',130,20,15 \n\t\t@buttons.push new Button 'ClrB',180,20,15\n\t\tfor i in range 8\n\t\t\t@buttons.push new Button '+', 70,190-20*i,8 \n\t\t\t@buttons.push new Button '-', 90,190-20*i,8\n\t\t\t@buttons.push new Button '+',170,190-20*i,8 \n\t\t\t@buttons.push new Button '-',190,190-20*i,8\n\t\t@draw()\t\n\tdraw : ->\n\t\tbg 0.5\n\t\tfc 0\n\t\tsc()\n\t\ttextAlign CENTER,CENTER\n\t\tbutton.draw() for button in @buttons\n\t\tfc 1,1,0\n\t\ttextAlign LEFT,CENTER\n\t\ttext t,0,5+15*i for t,i in 'Recurrence Engine'.split ' '\n\t\ttextAlign RIGHT,CENTER\n\t\ttext v,55,190-20*i for v,i in @a\n\t\ttext v,155,190-20*i for v,i in @b\n\tcalc : -> \n\t\t@b.unshift (a*b for [a,b] in _.zip(@a,@b)).reduce (acc,x) => acc+x \n\t\t@b.pop() \n\t\t@buttons[1].title++\n\tclr : ->\n\t\t@buttons[1].title = 0\n\t\t[0,0,0,0,0,0,0,0]\n\tmousePressed : (mx,my) ->\n\t\tfor button,i in @buttons\n\t\t\tif button.inside mx,my \n\t\t\t\tindex = (i-3)//4\n\t\t\t\tif i==1 then @calc()\n\t\t\t\tif button.title == 'ClrA' then @a = @clr()\n\t\t\t\tif button.title == 'ClrB' then @b = @clr()\n\t\t\t\tif button.x== 70 then @a[index]++\n\t\t\t\tif button.x== 90 then @a[index]--\n\t\t\t\tif button.x==170 then @b[index]++\n\t\t\t\tif button.x==190 then @b[index]--\n\napp = new Engine \"a\"\n\"\"\"\n\tc:\n\t\tapp : \"reset()\"\n\te:\n\t\tRecurrence : \"https://www.youtube.com/watch?v=II3HVCw_Yr8\"\n\n\nID_RecursiveCircle =\n\tv:'2017-04-29'\n\tk:'sc circle if return operators class'\n\tl:10\n\tb: \"\"\"\nclass RecursiveCircle extends Application\n\treset   : ->\n\t\tsuper\n\tdraw    : ->\n\tcircles : (x,y,r,level) ->\n\tmousePressed : (mx,my) ->\napp = new RecursiveCircle\n\"\"\"\n\ta: \"\"\"\n\nclass RecursiveCircle extends Application\n\treset : ->\n\t\tsuper\n\t\t@n = 0\n\tdraw : -> @circles 100,100,100,@n\n\tcircles : (x,y,r,level) ->\n\t\tcircle x,y,r\n\t\tif level <= 0 then return\n\t\t@circles x-r/2, y, r/2, level-1\n\t\t@circles x+r/2, y, r/2, level-1\n\tmousePressed : (mx,my) -> @n = constrain @n + (if my < 100 then 1 else -1),0,10\n\napp = new RecursiveCircle \"a\"\n\"\"\"\n\tc:\n\t\tapp : \"reset()\"\n\n# ID_RedRect =\n# \tv:'2017-04-29'\n# \tk:'fc rect'\n# \tl:2\n# \tb:\"\"\n# \ta:\"\"\"\n# fc 1,0,0\n# rect 80,70, 40,100\n# \"\"\"\n\nID_Reversi =\n\tv:'2017-05-02'\n\tk:'sc fc bg range [] rect circle while if operators class'\n\tl:49\n\tb: \"\"\"\nclass Reversi extends Application\n\treset : ->\n\t\tsuper\n\tdraw : ->\n\tmousePressed : (mx,my) ->\napp = new Reversi\n\"\"\"\n\ta: \"\"\"\nclass Reversi extends Application\n\treset : ->\n\t\tsuper\n\t\t@newGame()\n\tnewGame : ->\n\t\t@board = []\n\t\t@drag = 0\n\t\tfor j in range 8\n\t\t\t@board.push []\n\t\t\tfor i in range 8\n\t\t\t\t@board[j].push 0\n\t\t@board[3][3]=2 # White\n\t\t@board[3][4]=1 # Black\n\t\t@board[4][3]=1\n\t\t@board[4][4]=2\n\tdraw : ->\n\t\tsc 0\n\t\tfor i in range 8\n\t\t\tfor j in range 8\n\t\t\t\tsq = @board[j][i]\n\t\t\t\tfc 0,1,0\n\t\t\t\trect 20+20*i, 20+20*j,20,20\n\t\t\t\tif sq in [1,2]\n\t\t\t\t\tfc sq-1\n\t\t\t\t\tcircle 30.5+20*i, 30.5+20*j,10-2\n\tmove : (i,j) ->\n\t\tres = []\n\t\tmycol = 1 + @drag % 2\n\t\tother = [0,2,1][mycol]\n\t\tfor di in [-1,0,1]\n\t\t\tfor dj in [-1,0,1]\n\t\t\t\tif not (di==0 and dj==0)\n\t\t\t\t\ti1=i+di\n\t\t\t\t\tj1=j+dj\n\t\t\t\t\ttemp = []\n\t\t\t\t\twhile 0 <= i1 < 8 and 0 <= j1 < 8 and @board[j1][i1] == other\n\t\t\t\t\t\ttemp.push [i1,j1]\n\t\t\t\t\t\ti1 = i1+di\n\t\t\t\t\t\tj1 = j1+dj\n\t\t\t\t\tif 0 <= i1 < 8 and 0 <= j1 < 8 and @board[j1][i1] == mycol\n\t\t\t\t\t\tif temp.length > 0 then\tres = res.concat temp\n\t\tif res.length > 0\n\t\t\t@board[j][i] = mycol\n\t\t\tfor [i,j] in res then\t@board[j][i] = mycol\n\t\t\t@drag++\n\tmousePressed : (mx,my) ->\n\t\ti = int mx / 20 - 1\n\t\tj = int my / 20 - 1\n\t\tif 0 <= i < 8 and 0 <= j < 8 and @board[j][i] == 0 then @move i,j\n\napp = new Reversi \"a\"\n\"\"\"\n\tc:\n\t\tapp : \"reset()\"\n\te:\n\t\tReversi : \"https://en.wikipedia.org/wiki/Reversi\"\n\nID_Rotate =\n\tv:'2018-04-26'\n\tk:'angleMode rotate translate rect fc'\n\tl:8\n\th:0\n\tb:\"\"\"\n# rotate angle\n\nangleMode DEGREES\nfc()\nrect 0,0,40,20\ntranslate 100,100\nrect 0,0,40,20\nrotate 45\nfc 1,1,1,0.5\nrect 0,0,40,20\n\"\"\"\n\ta:\"\"\"\n# rotate angle\n\nangleMode DEGREES\nfc()\nrect 0,0,40,20\ntranslate 100,100\nrect 0,0,40,20\nrotate 45\nfc 1,1,1,0.5\nrect 0,0,40,20\n\"\"\"\n\nID_RotatedEllipse =\n\tv:'2018-04-26'\n\tk:'angleMode ellipseMode rotate ellipse translate for range'\n\tl:6\n\th:1\n\tb:\"\"\n\ta:\"\"\"\nangleMode DEGREES\nellipseMode CENTER\ntranslate 100,100\nfor i in range 4\n\tellipse 0,0,20,80\n\trotate 45\n\"\"\"\n\nID_RotatedRect =\n\tv:'2018-04-26'\n\tk:'angleMode rectMode bg translate sw sc fc for range rect rotate'\n\tl:10\n\th:3\n\tb:\"\"\n\ta:\"\"\"\nangleMode DEGREES\nrectMode CENTER\nbg 0.5\ntranslate 100,100\nsw 5\nsc 0,0,0,0.5\nfc 1,1,0,0.25\nfor i in range 10\n\trect 0,0,40,180\n\trotate 10\n\"\"\"\n\n# ID_RotatedRectB =\n# \tv:'2017-09-30'\n# \tk:'fc angleMode rotate rect translate push pop'\n# \tl:12\n# \th:1\n# \tb:\"\"\n# \ta:\"\"\"\n# push()\n# fc 1,0,0\n# translate 60,100\n# angleMode DEGREES\n# rotate 45\n# rect 0,0, 40,40\n# pop()\n# push()\n# fc 0,1,0\n# translate 140,100\n# rotate 45\n# rect 0,0, 40,40\n# pop()\n# \"\"\"\n\n# ID_RotatedRectC =\n# \tv:'2017-09-30'\n# \tk:'fc angleMode rotate rect translate push pop'\n# \tl:13\n# \th:1\n# \tb:\"\"\n# \ta:\"\"\"\n# rectMode CENTER\n# push()\n# fc 1,0,0\n# translate 80,120\n# angleMode DEGREES\n# rotate 45\n# rect 0,0, 40,40\n# pop()\n# push()\n# fc 0,1,0\n# translate 160,120\n# rotate 45\n# rect 0,0, 40,40\n# pop()\n# \"\"\"\n\nID_Roulette =\n\tv:'2017-09-30'\n\tk:'bg sw fc sc range angleMode rotate for if operators [] \"\" PI text arc strokeCap translate'\n\tl:15\n\th:3\n\tb:\"\"\"\nnumbers = [0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26]\n\"\"\"\n\ta:\"\"\"\nnumbers = [0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26]\nbg 0.5\ntranslate 100,100\nd = 180/numbers.length\nsw 20\nstrokeCap SQUARE\ntextAlign CENTER,CENTER\nangleMode DEGREES\nfor number,i in numbers\n\tfc()\n\tif i==0 then sc 0,1,0 else sc i%2,0,0\n\tarc 0,0,180,180,-90-d,-90+d\n\tsc()\n\tfc 1\n\ttext number,0,-90\n\trotate 360 / numbers.length\n\"\"\"\n\te :\n\t\tWikipedia : \"https://en.wikipedia.org/wiki/Roulette\"\n\nID_RubikCube =\n\tv:'2017-04-29'\n\tk:'bg fc sc range [] if constrain for int quad text dist operators class'\n\tl:121\n\th:2\n\tb:\"\"\"\nclass RubikCube extends Application\n\treset : ->\n\t\tsuper\n\tdraw : ->\n\tmousePressed : (mx,my) ->\n\ttoggleNumbers : ->\napp = new RubikCube\n\"\"\"\n\ta:\"\"\"\nclass RubikCube extends Application\n\tnewGame : ->\n\t\t@level = @level + if @level==@history.length then 1 else -1\n\t\t@level = constrain @level,0,100\n\t\t@history = []\n\t\t@board = []\n\t\t@memory = -1\n\t\t@board.push i for i in range 54\n\t\tfor i in range @level\n\t\t\t@op @randint(6), 2*@randint(2)-1\n\trandint : (n) -> int n * fraction 10000 * Math.sin @seed++\n\tundo : ->\n\t\tif @history.length==0 then return\n\t\t@memory = -1\n\t\t[k,d] = @history.pop()\n\t\t@op k,-d\n\tturn : (a,b) -> # a,b in 0..54\n\t\tif int(a/9) != int(b/9) then return\n\t\td = (a%9 - b%9)/2\n\t\tif d in [-3,3] then d = -d/3\n\t\tif d not in [-1,1] then return\n\t\tk = int a/9\n\t\t@op k,d\n\t\t@history.push [k,d]\n\top : (k,d) -> # 0..5, [-1,1]\n\t\ttiles = [\n\t\t\t[0,1,42,41,40,   2,3,9,16,15,    4,5,20,19,18,   6,7,31,30,29]\n\t\t\t[9,10,40,39,38,  11,12,49,48,47, 13,14,22,21,20, 15,16,4,3,2]\n\t\t\t[18,19,6,5,4,    20,21,15,14,13, 22,23,47,46,45, 24,25,33,32,31]\n\t\t\t[27,28,36,43,42, 29,30,0,7,6,    31,32,18,25,24, 33,34,45,52,51]\n\t\t\t[36,37,51,50,49, 38,39,11,10,9,  40,41,2,1,0,    42,43,29,28,27]\n\t\t\t[45,46,24,23,22, 47,48,13,12,11, 49,50,38,37,36, 51,52,27,34,33]]\n\t\tarr = tiles[k]\n\t\tcarr = (@board[i] for i in arr)\n\t\tlimit = if d==1 then 5 else 15\n\t\tcarr = carr[limit..20].concat carr[0..limit]\n\t\t@board[arr[i]] = carr[i] for i in range 20\n\treset : ->\n\t\tsuper\n\t\t@board = []\n\t\t@memory = -1\n\t\t@level = -1\n\t\t@history = []\n\t\t@buttons = [[40,140,@level], [160,140,\"new\"]]\n\t\t@showNumbers = false\n\t\t@seed = 0\n\t\t@newGame()\n\tcolorize : (index,board) ->\n\t\tk = int board[index] / 9\n\t\t[r,g,b] = [[1,1,1],[0,0,1],[1,0,0],[0,1,0],[0.97, 0.57, 0],[1,1,0]][k]\n\t\tfc r,g,b\n\ttextColorize : (index,board) -> fc [0,1,1,0,0,0][int board[index] / 9]\n\trita : (x,y,index,tilt,self) ->\n\t\ta = 16\n\t\tb = 9\n\t\tself.colorize index,self.board\n\t\tsc 0\n\t\tif tilt == 0 then quad x-a,y, x,y-b, x+a,y, x,y+b\n\t\tif tilt == 1 then quad x+a/2,y-b/2, x-a/2,y-3*b/2, x-a/2,y+b/2, x+a/2,y+3*b/2\n\t\tif tilt == 2 then quad x-a/2,y-b/2, x+a/2,y-3*b/2, x+a/2,y+b/2, x-a/2,y+3*b/2\n\t\tself.textColorize index,self.board\n\t\tsc()\n\t\tif self.showNumbers then text self.board[index],x,y\n\t\tif self.memory? and index == self.memory then circle x,y,4\n\t\tfalse\n\tsense : (x,y,index,tilt,self) -> dist(x,y,mouseX,mouseY) < 9\n\tdraw : ->\n\t\tbg 0\n\t\ttextSize 12\n\t\ttextAlign CENTER,CENTER\n\t\t@traverse @rita\n\t\tfc 1,1,0\n\t\ttextSize 20\n\t\t@buttons[0][2] = @level - @history.length\n\t\ttext txt,x,y for [x,y,txt] in @buttons\n\ttraverse : (f) ->\n\t\ta = 16\n\t\tb = 9\n\t\ty0 = 60\n\t\tfor index in range 54\n\t\t\tside = int index / 9\n\t\t\tif side==0 # vit\n\t\t\t\ti = [-1,-1,-1,0,1,1,1,0,0][index % 9]\n\t\t\t\tj = [0,1,2,2,2,1,0,0,1][index % 9]\n\t\t\t\tif f 100+a*(i+j-1),y0+b*(i-j+1), index, 0,@ then return index\n\t\t\tif side==1 # bl책\n\t\t\t\ti = [-1,-1,-1,0,1,1,1,0,0][index % 9]\n\t\t\t\tj = [0,1,2,2,2,1,0,0,1][index % 9]\n\t\t\t\tif f 100+a*(i+4.5),y0+b*(2*j+i-3.5), index, 1,@ then return index\n\t\t\tif side==2 # r철d\n\t\t\t\ti = [-1,0,1,1,1,0,-1,-1,0][index % 9]\n\t\t\t\tj = [0,0,0,1,2,2,2,1,1][index % 9]\n\t\t\t\tif f 100+a*(i+1.5),y0+b*(2*j-i+2.5), index, 2,@ then return index\n\t\t\tif side==3 # gr철n\n\t\t\t\ti = [-1,-1,-1,0,1,1,1,0,0][index % 9]\n\t\t\t\tj = [2,1,0,0,0,1,2,2,1][index % 9]\n\t\t\t\tif f 100+a*(i-1.5),y0+b*(2*j+i+2.5), index, 1,@ then return index\n\t\t\tif side==4 # orange\n\t\t\t\ti = [-1, 0, 1, 1, 1, 0,-1,-1, 0][index % 9]\n\t\t\t\tj = [ 2, 2, 2, 1, 0, 0, 0, 1, 1][index % 9]\n\t\t\t\tif f 100+a*(i-4.5),y0+b*(2*j-i-3.5), index, 2,@ then return index\n\t\t\tif side==5 # gul\n\t\t\t\ti = [ 1, 1, 1, 0,-1,-1,-1, 0, 0][index % 9]\n\t\t\t\tj = [ 0, 1, 2, 2, 2, 1, 0, 0, 1][index % 9]\n\t\t\t\tif f 100+a*(i+j-1),y0+b*(i-j+13), index, 0,@ then return index\n\t\t-1\n\tmousePressed : (mx,my) ->\n\t\tfor [x,y,txt],i in @buttons\n\t\t\tif dist(mx,my,x,y) < 10\n\t\t\t\tif i==0 then return @undo()\n\t\t\t\tif i==1 then return @newGame()\n\t\tif @memory == -1\n\t\t\t@memory = @traverse @sense\n\t\t\tif @memory != -1\n\t\t\t\tif @memory%9==8 then @memory = -1\n\t\telse\n\t\t\tindex = @traverse @sense\n\t\t\tif index != -1 and index%9 != 8 then @turn @memory,index\n\t\t\t@memory = -1\n\ttoggleNumbers : ->\n\t\t@showNumbers = not @showNumbers\n\napp = new RubikCube \"a\"\n\n\n\"\"\"\n\tc:\n\t\tapp : \"reset()|toggleNumbers()\"\n\te:\n\t\t\"RubikCube\" : \"https://sv.wikipedia.org/wiki/Rubiks_kub\"\n\nID_RubikSquare =\n\tv:'2017-04-29'\n\tk:'bg fc sc circle [] int .. operators if rectMode rect \"\" parseInt _.isEqual text while constrain class'\n\tl:85\n\th:1\n\tb:\"\"\"\n# OBS: Du b철r anv채nda variabeln rubikSquareData.\n\nclass RubikSquare extends Application\n\treset : ->\n\tdraw : ->\n\tmousePressed : (mx,my) ->\napp = new RubikSquare\n\"\"\"\n\ta:\"\"\"\nclass RubikSquare extends Application\n\treset : ->\n\t\tsuper\n\t\t@BUTTONS = [[4,3,3,3],[10,3,3,3],[16,3,3,3], [4,9,3,3],[10,9,3,3],[16,9,3,3], [4,15,3,3],[10,15,3,3],[16,15,3,3], [4,19,3,1],[10,19,3,1],[16,19,3,1]]\n\t\t@seed = 0\n\t\t@level = 1\n\t\t@history = []\n\t\t@memory = -1\n\t\t@createGame()\n\n\trandint : (n) -> int n * fraction 10000 * Math.sin @seed++\n\n\tnewGame : ->\n\t\tif @level >= @history.length and _.isEqual @board,[0,1,2,0,1,2,0,1,2] then d=1 else d=-1\n\t\t@level = constrain @level+d,1,6\n\t\t@history = []\n\t\t@createGame()\n\n\tcreateGame : ->\n\t\tbigstring = rubikSquareData[@level]\n\t\tarr = bigstring.split ' '\n\t\ts = arr[@randint(arr.length)]\n\t\t@board = (parseInt(ch) for ch in s)\n\n\tmove : (m,d,board) ->\n\t\t[i,j,k] = [[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8]][m]\n\t\tbd = board[..]\n\t\t[a,b,c] = [bd[i],bd[j],bd[k]]\n\t\tif d==0 then [a,b,c] = [b,c,a] else [a,b,c] = [c,a,b]\n\t\t[bd[i],bd[j],bd[k]] = [a,b,c]\n\t\tbd\n\n\tdraw : ->\n\t\tbg 0\n\t\ttextAlign CENTER,CENTER\n\t\ttextSize 20\n\t\trectMode CENTER,CENTER\n\t\tfor c,i in @board\n\t\t\tsc 1\n\t\t\tif c==0 then fc 1,0,0\n\t\t\tif c==1 then fc 0,1,0\n\t\t\tif c==2 then fc 0,0,1\n\t\t\t[x,y,w,h] = @BUTTONS[i]\n\t\t\trect 10*x,10*y,20*w,20*h\n\t\tif @memory >= 0\n\t\t\t[x,y,w,h] = @BUTTONS[@memory]\n\t\t\tfc 0\n\t\t\tsc()\n\t\t\tcircle 10*x,10*y,10\n\t\t[x,y,w,h] = @BUTTONS[10]\n\t\tfc 1,1,0\n\t\tsc()\n\t\ttext @level-@history.length,10*x,10*y\n\t\tif @history.length > 0\n\t\t\t[x,y,w,h] = @BUTTONS[9]\n\t\t\ttext \"undo\",10*x,10*y\n\t\t\t[x,y,w,h] = @BUTTONS[11]\n\t\t\ttext \"new\",10*x,10*y\n\n\tundo : ->\n\t\tif @history.length == 0 then return\n\t\t@board = @history.pop()\n\t\t@memory = -1\n\n\tmousePressed : (mx,my) ->\n\t\tindex = -1\n\t\tfor [x,y,w,h],i in @BUTTONS\n\t\t\tif x-w <= mx/10 <= x+w and y-h <= my/10 <= y+h then index = i\n\t\tif 0 <= index < 9\n\t\t\tif @memory == -1\n\t\t\t\t@memory = index\n\t\t\telse if @memory == index\n\t\t\t\t@memory = -1\n\t\t\telse\n\t\t\t\thash =\n\t\t\t\t\t\"01\":[0,1], \"02\":[0,0], \"10\":[0,0], \"12\":[0,1], \"20\":[0,1], \"21\":[0,0]\n\t\t\t\t\t\"34\":[1,1], \"35\":[1,0], \"43\":[1,0], \"45\":[1,1], \"53\":[1,1], \"54\":[1,0]\n\t\t\t\t\t\"67\":[2,1], \"68\":[2,0], \"76\":[2,0], \"78\":[2,1], \"86\":[2,1], \"87\":[2,0]\n\t\t\t\t\t\"03\":[3,1], \"06\":[3,0], \"30\":[3,0], \"36\":[3,1], \"60\":[3,1], \"63\":[3,0]\n\t\t\t\t\t\"14\":[4,1], \"17\":[4,0], \"41\":[4,0], \"47\":[4,1], \"71\":[4,1], \"74\":[4,0]\n\t\t\t\t\t\"25\":[5,1], \"28\":[5,0], \"52\":[5,0], \"58\":[5,1], \"82\":[5,1], \"85\":[5,0]\n\t\t\t\tpair = hash[\"\" + @memory + index]\n\t\t\t\tif pair\n\t\t\t\t\t[m,d] = pair\n\t\t\t\t\t@history.push @board[..]\n\t\t\t\t\t@board = @move m,d,@board\n\t\t\t\t\t@memory = -1\n\t\tif index==9 then @undo()\n\t\tif index==11 then @newGame()\n\napp = new RubikSquare \"a\"\n\n\"\"\"\n\tc:\n\t\tapp : \"reset()\"\n\nID_RushHour =\n\tv:'2017-04-29'\n\tk:'bg sc fc range operators \"\" [] {} class rect text for if readText'\n\tl:71\n\tb:\"\"\"\n# De 36 rutorna numreras:\n#   0 1 2 3 4 5\n#   6 7 8 9 a b\n#   c d e f g h\n#   i j k l m n\n#   o p q r s t\n#   u v w x y z\n#\n# Placering av fordon:\n#   horisontellt: A=2 B=3\n#   vertikalt:    C=2 D=3\n#\n# L철sningar:\n# \tBilarna namnges i f철ljden XABCDEFGHIJKLMNOPQR\n# \tliten bokstav: v채nster/upp책t\n# \tstor bokstav:  h철ger/ned책t\n\nclass Car\n\tconstructor : (ch,wh,@c) ->\n\trender      : ->\n\tmove        : (d) ->\n\nclass RushHour extends Application\n\tclasses    : -> [Car]\n\treset      : ->\n\t\tsuper\n\tdraw       : ->\n\tenter_cars : -> # Ad0sBwCoD569\n\tenter_move : -> # bbbEEEAfdccGGXXXXX\n\tbegin      : ->\n\tbackward   : (n=1) ->\n\tforward    : (n=1) ->\n\tend        : ->\napp = new RushHour\n\n\"\"\"\n\ta:\"\"\"\nclass Car\n\tconstructor : (ch,wh,@c) ->\n\t\tindex = \"0123456789abcdefghijklmnopqrstuvwxyz\".indexOf ch\n\t\t@i = index % 6\n\t\t@j = int index / 6\n\t\t[@w,@h] = wh\n\n\trender : ->\n\t\tfill cc (@c+1) % 8\n\t\trect 40+20*@i+2, 40+20*@j+2, 20*@w-4, 20*@h-4\n\t\tfc 0\n\t\tfill cct (@c+1) % 8\n\t\tname = \"XABCDEFGHIJKLMNOP\"[@c]\n\t\tsmall = name.toLowerCase()\n\t\ttext small, 50+20*@i,        50+20*@j\n\t\ttext name,  50+20*(@i+@w-1), 50+20*(@j+@h-1)\n\n\tmove : (d) -> # -1 eller +1\n\t\tif @w == 1 then @j += d\n\t\tif @h == 1 then @i += d\n\nclass RushHour extends Application\n\tclasses : -> [Car]\n\treset : ->\n\t\tsuper\n\t\t@enter_cars1 \"Ad0sBwCoD569\"\n\t\t@enter_move1 \"bbbEEEAfdccGGXXXXX\"\n\t\t@begin()\n\n\tdraw : ->\n\t\ttextAlign CENTER,CENTER\n\t\tbg 0\n\t\tsc()\n\t\tfc 0.5\n\t\trect 40,40,120,120\n\t\trect 160,80,40,20\n\t\tfc 1\n\t\tsc()\n\t\tfor i in range 6\n\t\t\ttext \"012345\"[i],30,50+20*i\n\t\t\ttext \"012345\"[i],50+20*i,170\n\t\tfor car in @cars\n\t\t\tcar.render()\n\n\tenter_cars : -> @enter_cars1 @readText()\n\tenter_cars1 : (s) ->\n\t\t@cars = []\n\t\t@moves = \"\"\n\t\t@index = 0\n\t\tfor ch in s\n\t\t\tif ch in \"ABCD\" then wh = {A:[2,1], B:[3,1], C:[1,2], D:[1,3]}[ch]\n\t\t\telse @cars.push new Car ch,wh,@cars.length\n\n\tenter_move : -> @enter_move1 @readText()\n\tenter_move1 : (s) ->\n\t\t@moves = @moves[...@index]\n\t\t@moves += s\n\t\t@forward s.length\n\n\tbegin : -> @backward @index\n\tbackward : (n=1) ->\n\t\tfor i in range n\n\t\t\tif @index == 0 then return\n\t\t\t@index--\n\t\t\t@bothward \"XABCDEFGHIJKLMNO\",\"xabcdefghijklmno\"\n\tforward : (n=1) ->\n\t\tfor i in range n\n\t\t\tif @index >= @moves.length then return\n\t\t\t@bothward \"xabcdefghijklmno\",\"XABCDEFGHIJKLMNO\"\n\t\t\t@index++\n\tend : -> @forward @moves.length - @index\n\n\tbothward : (a,b) ->\n\t\ti = a.indexOf @moves[@index]\n\t\tj = b.indexOf @moves[@index]\n\t\tif i >= 0 then @cars[i].move -1\n\t\tif j >= 0 then @cars[j].move +1\n\napp = new RushHour \"a\"\n\"\"\"\n\tc:\n\t\tapp : \"reset()|enter_cars()|enter_move()|begin()|backward()|forward()|end()\"\n\te:\n\t\tRushHour : \"https://en.wikipedia.org/wiki/Rush_Hour_(board_game)\"\n\n"
  ]
}