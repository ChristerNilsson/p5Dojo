// Generated by CoffeeScript 1.11.1
var ID160, ID161, ID162, ID163, ID164, ID165;

ID160 = {
  v: '2017-04-29',
  b: "# LOC:8 -> range # for in if then point [] * + % & << ->\n",
  a: "dice = (x,y,d) ->\n	for bits,i in [21,56,32,62,62,32,56]\n		dx = 4 * [0,-1,-1,-1,1,1,1][i]\n		dy = 4 * [0,-1,0,1,-1,0,1][i]\n		if d&bits then point 10+x+dx,10+y+dy\nfor i in range 10\n	for j in range 10\n		dice 20*i, 20*j, 1 << (i+j) % 6"
};

ID161 = {
  v: '2017-04-29',
  b: "# LOC:16 sc bg sw range # for in line class constructor new @\n\nclass Cartesius\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n\ngirlang = (x,y,n,width,dx,dy) ->\n\ngirlang 0,0,9,5,20,20",
  a: "class Cartesius\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n		sc @r,@g,@b\n		line @x,@y,@x+dx,@y+dy\n		[@x,@y] = [@x+dx,@y+dy]\n\ngirlang = (x,y,n,width,dx,dy) ->\n	a = new Cartesius 1,0,0, x+dx/2,0\n	b = new Cartesius 1,1,0, x,y+dy/2\n\n	bg 0\n	sw width\n\n	for i in range n\n		a.go 0,dy\n		b.go dx,0\n		b.go 0,dy\n		a.go dx,0\n\ngirlang 0,0,9,5,20,20"
};

ID162 = {
  v: '2017-04-29',
  b: "# LOC:19 sc bg sw range # for in line class constructor new @\n\nclass Cartesius\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n\nbraid = (n,dx,dy,width) ->\n\nbraid 5,18,18,6",
  a: "class Cartesius\n	constructor : (@r,@g,@b, @x,@y) ->\n	go : (dx,dy) ->\n		sc @r,@g,@b\n		line @x,@y,@x+dx,@y+dy\n		[@x,@y] = [@x+dx,@y+dy]\n\nbraid = (n,dx,dy,width) ->\n\n	a = new Cartesius 1,0,0, 100-dx/2,dy/3\n	b = new Cartesius 1,1,0, 100+dx/2,2*dy/3\n	c = new Cartesius 0,1,0, 100-dx/2,dy\n\n	bg 0\n	sw width\n\n	for i in range n\n		a.go dx,dy\n		b.go -dx,dy\n		c.go dx,dy\n\n		a.go -dx,dy\n		b.go dx,dy\n		c.go -dx,dy\n\nbraid 5,18,18,6",
  e: {
    braid: "https://cdn.tutsplus.com/vector/uploads/legacy/tuts/000-2011/398-hair-braid/6.jpg",
    Wikipedia: "https://en.wikipedia.org/wiki/Braid"
  }
};

ID163 = {
  v: '2017-04-29',
  b: "# LOC:24 sc bg fc sw # arc strokeCap class constructor new @\n\nclass Ring\n	constructor : (@x,@y,@r,@g,@b) ->\n	draw : (start=3,stopp=3,hour=PI/6) ->\n\nolympic = (x=100,y=100,radius=50,d=60,w=10) ->\n\nolympic()",
  a: "class Ring\n	constructor : (@x,@y,@radius, @r,@g,@b) ->\n	draw : (start=3,stopp=3,hour=PI/6) ->\n		sc @r,@g,@b\n		arc @x,@y,@radius,@radius,(start-3)*hour,(stopp-3)*hour\n\nolympic = (x=100,y=100,radius=50,d=60,w=10) ->\n	r1 = new Ring x-d,  y,     radius, 0,0,1\n	r2 = new Ring x,    y,     radius, 0,0,0\n	r3 = new Ring x+d,  y,     radius, 1,0,0\n	r4 = new Ring x-d/2,y+d/3, radius, 1,1,0\n	r5 = new Ring x+d/2,y+d/3, radius, 0,1,0\n\n	strokeCap SQUARE\n	bg 0.5\n	fc()\n	sw w\n\n	r1.draw()\n	r3.draw()\n	r4.draw()\n	r5.draw()\n	r1.draw 2,4\n	r2.draw()\n	r4.draw 12,2\n	r5.draw 8,10\n	r3.draw 6,8\n\nolympic()",
  e: {
    Wikipedia: "https://en.wikipedia.org/wiki/Olympic_symbols"
  }
};

ID164 = {
  v: '2017-04-29',
  b: "# LOC:17 fc sc range # Array fill length int random text textAlign for in ++ * / + - rect []\n# OBS: På grund av random blir bitmapparna inte likadana\n\nh = 50\ncounts = Array(4).fill 150\nfor count,i in counts\n	y = h*i\n	rect 0,y,count,h\n	text y,0,y",
  a: "counts = Array(6).fill 0\ndice = -> int 6 * random()\nfor i in range 1000\n	counts[dice()]++\nh = int 200/6\nsc()\nfor count,i in counts\n	y = h*i\n	fc 1,1,0,0.5\n	sc 1,1,0\n	rect 0,y,count,h-3\n	fc 1,1,0\n	sc()\n	textAlign LEFT,CENTER\n	text i+1, 5,y+h/2\n	textAlign RIGHT,CENTER\n	text count, count-5,y+h/2"
};

ID165 = {
  v: '2017-04-29',
  b: "# LOC:22 bg fc sc range # Array fill length int random text textAlign if else for in ++ * / + - < rect []\n# OBS: På grund av random blir bitmapparna inte likadana",
  a: "counts = Array(11).fill 0\ndice = -> int 6 * random()\ntextAlign CENTER,CENTER\nfor i in range 1000\n	counts[dice() + dice()]++\nh = int 200/11\nbg 0\nfor count,i in counts\n	y = h*i\n	fc 1,1,0,0.5\n	sc 1,1,0\n	rect 0,y,count,h-3\n	fc 1,1,0\n	sc()\n	textAlign LEFT,CENTER\n	text i+2, 5,y+h/2\n	if count < 100\n		textAlign LEFT,CENTER\n		text count, count+5,y+h/2\n	else\n		textAlign RIGHT,CENTER\n		text count, count-5,y+h/2",
  e: {
    Animering: "https://www.openprocessing.org/sketch/124236"
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTDguanMiLCJzb3VyY2VSb290IjoiLi5cXC4uIiwic291cmNlcyI6WyJjb2ZmZWVcXGRhdGFcXEw4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQTs7QUFBQSxLQUFBLEdBQ0M7RUFBQSxDQUFBLEVBQUUsWUFBRjtFQUNBLENBQUEsRUFBSSw0REFESjtFQUVBLENBQUEsRUFBSSwrT0FGSjs7O0FBYUQsS0FBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsc01BREY7RUFZQSxDQUFBLEVBQUUsOFdBWkY7OztBQW9DRCxLQUFBLEdBQ0M7RUFBQSxDQUFBLEVBQUUsWUFBRjtFQUNBLENBQUEsRUFBSSwwTEFESjtFQWFBLENBQUEsRUFBRSw0YkFiRjtFQXlDQSxDQUFBLEVBQ0M7SUFBQSxLQUFBLEVBQVEsbUZBQVI7SUFDQSxTQUFBLEVBQVkscUNBRFo7R0ExQ0Q7OztBQTZDRCxLQUFBLEdBQ0M7RUFBQSxDQUFBLEVBQUUsWUFBRjtFQUNBLENBQUEsRUFBRyx1TkFESDtFQVlBLENBQUEsRUFBRyxxbUJBWkg7RUEyQ0EsQ0FBQSxFQUNDO0lBQUEsU0FBQSxFQUFZLCtDQUFaO0dBNUNEOzs7QUE4Q0QsS0FBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsK1BBREY7RUFZQSxDQUFBLEVBQUUsc1RBWkY7OztBQWdDRCxLQUFBLEdBQ0M7RUFBQSxDQUFBLEVBQUUsWUFBRjtFQUNBLENBQUEsRUFBRSxxS0FERjtFQUtBLENBQUEsRUFBRSwwYUFMRjtFQTZCQSxDQUFBLEVBQ0M7SUFBQSxTQUFBLEVBQVksOENBQVo7R0E5QkQiLCJzb3VyY2VzQ29udGVudCI6WyJJRDE2MCA9ICMgTWFueURpY2VzOlxyXG5cdHY6JzIwMTctMDQtMjknXHJcblx0YiA6IFwiIyBMT0M6OCAtPiByYW5nZSAjIGZvciBpbiBpZiB0aGVuIHBvaW50IFtdICogKyAlICYgPDwgLT5cXG5cIlxyXG5cdGEgOiBcIlwiXCJcclxuZGljZSA9ICh4LHksZCkgLT5cclxuXHRmb3IgYml0cyxpIGluIFsyMSw1NiwzMiw2Miw2MiwzMiw1Nl1cclxuXHRcdGR4ID0gNCAqIFswLC0xLC0xLC0xLDEsMSwxXVtpXVxyXG5cdFx0ZHkgPSA0ICogWzAsLTEsMCwxLC0xLDAsMV1baV1cclxuXHRcdGlmIGQmYml0cyB0aGVuIHBvaW50IDEwK3grZHgsMTAreStkeVxyXG5mb3IgaSBpbiByYW5nZSAxMFxyXG5cdGZvciBqIGluIHJhbmdlIDEwXHJcblx0XHRkaWNlIDIwKmksIDIwKmosIDEgPDwgKGkraikgJSA2XHJcblwiXCJcIlxyXG5cclxuSUQxNjEgPSAjIEdpcmxhbmcgOlxyXG5cdHY6JzIwMTctMDQtMjknXHJcblx0YjpcIlwiXCJcclxuIyBMT0M6MTYgc2MgYmcgc3cgcmFuZ2UgIyBmb3IgaW4gbGluZSBjbGFzcyBjb25zdHJ1Y3RvciBuZXcgQFxyXG5cclxuY2xhc3MgQ2FydGVzaXVzXHJcblx0Y29uc3RydWN0b3IgOiAoQHIsQGcsQGIsIEB4LEB5KSAtPlxyXG5cdGdvIDogKGR4LGR5KSAtPlxyXG5cclxuZ2lybGFuZyA9ICh4LHksbix3aWR0aCxkeCxkeSkgLT5cclxuXHJcbmdpcmxhbmcgMCwwLDksNSwyMCwyMFxyXG5cIlwiXCJcclxuXHRhOlwiXCJcIlxyXG5jbGFzcyBDYXJ0ZXNpdXNcclxuXHRjb25zdHJ1Y3RvciA6IChAcixAZyxAYiwgQHgsQHkpIC0+XHJcblx0Z28gOiAoZHgsZHkpIC0+XHJcblx0XHRzYyBAcixAZyxAYlxyXG5cdFx0bGluZSBAeCxAeSxAeCtkeCxAeStkeVxyXG5cdFx0W0B4LEB5XSA9IFtAeCtkeCxAeStkeV1cclxuXHJcbmdpcmxhbmcgPSAoeCx5LG4sd2lkdGgsZHgsZHkpIC0+XHJcblx0YSA9IG5ldyBDYXJ0ZXNpdXMgMSwwLDAsIHgrZHgvMiwwXHJcblx0YiA9IG5ldyBDYXJ0ZXNpdXMgMSwxLDAsIHgseStkeS8yXHJcblxyXG5cdGJnIDBcclxuXHRzdyB3aWR0aFxyXG5cclxuXHRmb3IgaSBpbiByYW5nZSBuXHJcblx0XHRhLmdvIDAsZHlcclxuXHRcdGIuZ28gZHgsMFxyXG5cdFx0Yi5nbyAwLGR5XHJcblx0XHRhLmdvIGR4LDBcclxuXHJcbmdpcmxhbmcgMCwwLDksNSwyMCwyMFxyXG5cIlwiXCJcclxuXHJcbklEMTYyID0gIyBCcmFpZDpcclxuXHR2OicyMDE3LTA0LTI5J1xyXG5cdGIgOiBcIlwiXCJcclxuIyBMT0M6MTkgc2MgYmcgc3cgcmFuZ2UgIyBmb3IgaW4gbGluZSBjbGFzcyBjb25zdHJ1Y3RvciBuZXcgQFxyXG5cclxuY2xhc3MgQ2FydGVzaXVzXHJcblx0Y29uc3RydWN0b3IgOiAoQHIsQGcsQGIsIEB4LEB5KSAtPlxyXG5cdGdvIDogKGR4LGR5KSAtPlxyXG5cclxuYnJhaWQgPSAobixkeCxkeSx3aWR0aCkgLT5cclxuXHJcbmJyYWlkIDUsMTgsMTgsNlxyXG5cIlwiXCJcclxuXHJcblx0YTpcIlwiXCJcclxuY2xhc3MgQ2FydGVzaXVzXHJcblx0Y29uc3RydWN0b3IgOiAoQHIsQGcsQGIsIEB4LEB5KSAtPlxyXG5cdGdvIDogKGR4LGR5KSAtPlxyXG5cdFx0c2MgQHIsQGcsQGJcclxuXHRcdGxpbmUgQHgsQHksQHgrZHgsQHkrZHlcclxuXHRcdFtAeCxAeV0gPSBbQHgrZHgsQHkrZHldXHJcblxyXG5icmFpZCA9IChuLGR4LGR5LHdpZHRoKSAtPlxyXG5cclxuXHRhID0gbmV3IENhcnRlc2l1cyAxLDAsMCwgMTAwLWR4LzIsZHkvM1xyXG5cdGIgPSBuZXcgQ2FydGVzaXVzIDEsMSwwLCAxMDArZHgvMiwyKmR5LzNcclxuXHRjID0gbmV3IENhcnRlc2l1cyAwLDEsMCwgMTAwLWR4LzIsZHlcclxuXHJcblx0YmcgMFxyXG5cdHN3IHdpZHRoXHJcblxyXG5cdGZvciBpIGluIHJhbmdlIG5cclxuXHRcdGEuZ28gZHgsZHlcclxuXHRcdGIuZ28gLWR4LGR5XHJcblx0XHRjLmdvIGR4LGR5XHJcblxyXG5cdFx0YS5nbyAtZHgsZHlcclxuXHRcdGIuZ28gZHgsZHlcclxuXHRcdGMuZ28gLWR4LGR5XHJcblxyXG5icmFpZCA1LDE4LDE4LDZcclxuXCJcIlwiXHJcblx0ZTpcclxuXHRcdGJyYWlkIDogXCJodHRwczovL2Nkbi50dXRzcGx1cy5jb20vdmVjdG9yL3VwbG9hZHMvbGVnYWN5L3R1dHMvMDAwLTIwMTEvMzk4LWhhaXItYnJhaWQvNi5qcGdcIlxyXG5cdFx0V2lraXBlZGlhIDogXCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CcmFpZFwiXHJcblxyXG5JRDE2MyA9ICMgT2x5bXBpY1JpbmdzOlxyXG5cdHY6JzIwMTctMDQtMjknXHJcblx0YjogXCJcIlwiXHJcbiMgTE9DOjI0IHNjIGJnIGZjIHN3ICMgYXJjIHN0cm9rZUNhcCBjbGFzcyBjb25zdHJ1Y3RvciBuZXcgQFxyXG5cclxuY2xhc3MgUmluZ1xyXG5cdGNvbnN0cnVjdG9yIDogKEB4LEB5LEByLEBnLEBiKSAtPlxyXG5cdGRyYXcgOiAoc3RhcnQ9MyxzdG9wcD0zLGhvdXI9UEkvNikgLT5cclxuXHJcbm9seW1waWMgPSAoeD0xMDAseT0xMDAscmFkaXVzPTUwLGQ9NjAsdz0xMCkgLT5cclxuXHJcbm9seW1waWMoKVxyXG5cIlwiXCJcclxuXHRhOiBcIlwiXCJcclxuY2xhc3MgUmluZ1xyXG5cdGNvbnN0cnVjdG9yIDogKEB4LEB5LEByYWRpdXMsIEByLEBnLEBiKSAtPlxyXG5cdGRyYXcgOiAoc3RhcnQ9MyxzdG9wcD0zLGhvdXI9UEkvNikgLT5cclxuXHRcdHNjIEByLEBnLEBiXHJcblx0XHRhcmMgQHgsQHksQHJhZGl1cyxAcmFkaXVzLChzdGFydC0zKSpob3VyLChzdG9wcC0zKSpob3VyXHJcblxyXG5vbHltcGljID0gKHg9MTAwLHk9MTAwLHJhZGl1cz01MCxkPTYwLHc9MTApIC0+XHJcblx0cjEgPSBuZXcgUmluZyB4LWQsICB5LCAgICAgcmFkaXVzLCAwLDAsMVxyXG5cdHIyID0gbmV3IFJpbmcgeCwgICAgeSwgICAgIHJhZGl1cywgMCwwLDBcclxuXHRyMyA9IG5ldyBSaW5nIHgrZCwgIHksICAgICByYWRpdXMsIDEsMCwwXHJcblx0cjQgPSBuZXcgUmluZyB4LWQvMix5K2QvMywgcmFkaXVzLCAxLDEsMFxyXG5cdHI1ID0gbmV3IFJpbmcgeCtkLzIseStkLzMsIHJhZGl1cywgMCwxLDBcclxuXHJcblx0c3Ryb2tlQ2FwIFNRVUFSRVxyXG5cdGJnIDAuNVxyXG5cdGZjKClcclxuXHRzdyB3XHJcblxyXG5cdHIxLmRyYXcoKVxyXG5cdHIzLmRyYXcoKVxyXG5cdHI0LmRyYXcoKVxyXG5cdHI1LmRyYXcoKVxyXG5cdHIxLmRyYXcgMiw0XHJcblx0cjIuZHJhdygpXHJcblx0cjQuZHJhdyAxMiwyXHJcblx0cjUuZHJhdyA4LDEwXHJcblx0cjMuZHJhdyA2LDhcclxuXHJcbm9seW1waWMoKVxyXG5cIlwiXCJcclxuXHRlIDpcclxuXHRcdFdpa2lwZWRpYSA6IFwiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvT2x5bXBpY19zeW1ib2xzXCJcclxuXHJcbklEMTY0ID0gIyBPbmVEaWNlSGlzdG9ncmFtXHJcblx0djonMjAxNy0wNC0yOSdcclxuXHRiOlwiXCJcIlxyXG4jIExPQzoxNyBmYyBzYyByYW5nZSAjIEFycmF5IGZpbGwgbGVuZ3RoIGludCByYW5kb20gdGV4dCB0ZXh0QWxpZ24gZm9yIGluICsrICogLyArIC0gcmVjdCBbXVxyXG4jIE9CUzogUMOlIGdydW5kIGF2IHJhbmRvbSBibGlyIGJpdG1hcHBhcm5hIGludGUgbGlrYWRhbmFcclxuXHJcbmggPSA1MFxyXG5jb3VudHMgPSBBcnJheSg0KS5maWxsIDE1MFxyXG5mb3IgY291bnQsaSBpbiBjb3VudHNcclxuXHR5ID0gaCppXHJcblx0cmVjdCAwLHksY291bnQsaFxyXG5cdHRleHQgeSwwLHlcclxuXCJcIlwiXHJcblx0YTpcIlwiXCJcclxuY291bnRzID0gQXJyYXkoNikuZmlsbCAwXHJcbmRpY2UgPSAtPiBpbnQgNiAqIHJhbmRvbSgpXHJcbmZvciBpIGluIHJhbmdlIDEwMDBcclxuXHRjb3VudHNbZGljZSgpXSsrXHJcbmggPSBpbnQgMjAwLzZcclxuc2MoKVxyXG5mb3IgY291bnQsaSBpbiBjb3VudHNcclxuXHR5ID0gaCppXHJcblx0ZmMgMSwxLDAsMC41XHJcblx0c2MgMSwxLDBcclxuXHRyZWN0IDAseSxjb3VudCxoLTNcclxuXHRmYyAxLDEsMFxyXG5cdHNjKClcclxuXHR0ZXh0QWxpZ24gTEVGVCxDRU5URVJcclxuXHR0ZXh0IGkrMSwgNSx5K2gvMlxyXG5cdHRleHRBbGlnbiBSSUdIVCxDRU5URVJcclxuXHR0ZXh0IGNvdW50LCBjb3VudC01LHkraC8yXHJcblwiXCJcIlxyXG5cclxuSUQxNjUgPSAjIFR3b0RpY2VIaXN0b2dyYW1cclxuXHR2OicyMDE3LTA0LTI5J1xyXG5cdGI6XCJcIlwiXHJcbiMgTE9DOjIyIGJnIGZjIHNjIHJhbmdlICMgQXJyYXkgZmlsbCBsZW5ndGggaW50IHJhbmRvbSB0ZXh0IHRleHRBbGlnbiBpZiBlbHNlIGZvciBpbiArKyAqIC8gKyAtIDwgcmVjdCBbXVxyXG4jIE9CUzogUMOlIGdydW5kIGF2IHJhbmRvbSBibGlyIGJpdG1hcHBhcm5hIGludGUgbGlrYWRhbmFcclxuXCJcIlwiXHJcblx0YTpcIlwiXCJcclxuY291bnRzID0gQXJyYXkoMTEpLmZpbGwgMFxyXG5kaWNlID0gLT4gaW50IDYgKiByYW5kb20oKVxyXG50ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5mb3IgaSBpbiByYW5nZSAxMDAwXHJcblx0Y291bnRzW2RpY2UoKSArIGRpY2UoKV0rK1xyXG5oID0gaW50IDIwMC8xMVxyXG5iZyAwXHJcbmZvciBjb3VudCxpIGluIGNvdW50c1xyXG5cdHkgPSBoKmlcclxuXHRmYyAxLDEsMCwwLjVcclxuXHRzYyAxLDEsMFxyXG5cdHJlY3QgMCx5LGNvdW50LGgtM1xyXG5cdGZjIDEsMSwwXHJcblx0c2MoKVxyXG5cdHRleHRBbGlnbiBMRUZULENFTlRFUlxyXG5cdHRleHQgaSsyLCA1LHkraC8yXHJcblx0aWYgY291bnQgPCAxMDBcclxuXHRcdHRleHRBbGlnbiBMRUZULENFTlRFUlxyXG5cdFx0dGV4dCBjb3VudCwgY291bnQrNSx5K2gvMlxyXG5cdGVsc2VcclxuXHRcdHRleHRBbGlnbiBSSUdIVCxDRU5URVJcclxuXHRcdHRleHQgY291bnQsIGNvdW50LTUseStoLzJcclxuXCJcIlwiXHJcblx0ZTpcclxuXHRcdEFuaW1lcmluZyA6IFwiaHR0cHM6Ly93d3cub3BlbnByb2Nlc3Npbmcub3JnL3NrZXRjaC8xMjQyMzZcIlxyXG4iXX0=
//# sourceURL=C:\github\p5Dojo\coffee\data\L8.coffee