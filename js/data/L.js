'use strict';

// Generated by CoffeeScript 2.0.3
var ID_Laboratorium, ID_Lerp, ID_LinearRegression, ID_lerp, ID_line, ID_line_1, ID_line_2, ID_line_3;

ID_Laboratorium = {
  v: '2017-04-29',
  k: '',
  l: 0,
  h: 1,
  b: "# Här kan du laborera med egna idéer!\n\nclass Laboratorium extends Application\n	reset : ->\n		super\n		@x = 100\n		@y = 100\n		@command = \"Ge ett kommando!\"\n	draw  : ->\n		textAlign CENTER,CENTER\n		textSize 24\n		fc 1,1,0\n		sc()\n		text @command,@x,@y\n	mousePressed : (mx,my) ->\n	left  : -> @x -= 10\n	right : -> @x += 10\n	up    : -> @y -= 10\n	down  : -> @y += 10\n	a     : -> @command = \"a\"\n	b     : -> @command = \"b\"\n	c     : -> @command = \"c\"\n	d     : -> @command = \"d\"\n	e     : -> @command = int random 1,7\n	f     : -> @command = int millis()\napp = new Laboratorium",
  a: "class Laboratorium extends Application\n	reset : ->\n		super\n	draw : ->\n	mousePressed : (mx,my) ->\n	left : ->\n	right : ->\n	up : ->\n	down : ->\n	a : ->\n	b : ->\n	c : ->\n	d : ->\n	e : ->\n	f : ->\n\napp = new Laboratorium \"a\"",
  c: {
    app: "reset()|left()|right()|up()|down()|a()|b()|c()|d()|e()|f()"
  }
};

ID_lerp = {
  v: '2018-04-26',
  k: 'lerp sw point for range',
  l: 15,
  h: 0,
  b: "# lerp a,b,i\n\nsw 10\npoint 10,90 # Från vänster till höger\npoint 30,90\n#     x     lerp \n\nfor i in range 10\n	x = lerp 10,30,i # 10,30,50,70...\n	y = 90\n	point x,y\n	\nsw 5\nsc 1,0,0\npoint 110,190 # Nerifrån och upp\npoint 110,170\n#         y   lerp \n\nfor i in range 10\n	x = 110\n	y = lerp 190,170,i # 190,170,150,130...\n	point x,y",
  a: "# lerp a,b,i\n\nsw 10\npoint 10,90 # Från vänster till höger\npoint 30,90\n#     x     lerp \n\nfor i in range 10\n	x = lerp 10,30,i # 10,30,50,70...\n	y = 90\n	point x,y\n	\nsw 5\nsc 1,0,0\npoint 110,190 # Nerifrån och upp\npoint 110,170\n#         y   lerp \n\nfor i in range 10\n	x = 110\n	y = lerp 190,170,i # 190,170,150,130...\n	point x,y"
};

ID_Lerp = {
  v: '2017-05-18',
  k: '-> bg fc sc if text lerp operators',
  l: 1,
  h: 2,
  b: "lerp = (a,b,i) -> 0\n\n# Ändra ingenting nedanför denna rad!\nbg 0\ny = 19\ntest = (a,b) ->\n	sc()\n	textSize 20\n	fc 0,1,0\n	text a, 0,y\n	if a==b then fc 0,1,0 else fc 1,0,0\n	text b, 100,y\n	y+=20\n\ntest 10, lerp 10,20,0\ntest 20, lerp 10,20,1\ntest 30, lerp 10,20,2\ntest 0,  lerp 10,20,-1\ntest 15, lerp 10,20,0.5\ntest 11, lerp 1,2,10\ntest 21, lerp 1,3,10\ntest -1, lerp 1,0,2\ntest 2,  lerp 10,9,8\ntest 0.4,lerp 0.1,0.2,3",
  e: {
    Matteboken: "https://www.matteboken.se/lektioner/matte-1/funktioner/linjara-funktioner"
  },
  a: "lerp = (a,b,i) -> a+(b-a)*i\n\n# Ändra ingenting nedanför denna rad!\nbg 0\ny = 19\ntest = (a,b) ->\n	sc()\n	textSize 20\n	fc 0,1,0\n	text a, 0,y\n	if a==b then fc 0,1,0 else fc 1,0,0\n	text b, 100,y\n	y+=20\n\ntest 10, lerp 10,20,0\ntest 20, lerp 10,20,1\ntest 30, lerp 10,20,2\ntest 0,  lerp 10,20,-1\ntest 15, lerp 10,20,0.5\ntest 11, lerp 1,2,10\ntest 21, lerp 1,3,10\ntest -1, lerp 1,0,2\ntest 2,  lerp 10,9,8\ntest 0.4,lerp 0.1,0.2,3"
};

ID_line = {
  v: '2018-04-27',
  k: 'line',
  l: 6,
  h: 0,
  b: "# Rita en linje mellan två punkter\n\n# Draw a line between two points\n\n# line x1,y1,x2,y2\n\nsw 2\nline 60,20,140,20 \n\nsw 4\nline 60,40,140,120 \n\nsw 6\nline 60,100,60,180 ",
  a: "sw 2\nline 60,20,140,20 \n\nsw 4\nline 60,40,140,120 \n\nsw 6\nline 60,100,60,180 "
};

ID_line_1 = {
  v: '2018-04-23',
  k: 'sc line',
  l: 2,
  h: 1,
  b: "",
  a: "sc 1,0,1\nline 10,70, 190,70"
};

ID_line_2 = {
  v: '2017-04-29',
  k: 'sc sw line',
  l: 3,
  h: 1,
  b: "",
  a: "sc 1,1,0\nsw 10\nline 110,30, 110,170"
};

ID_line_3 = {
  v: '2017-04-29',
  k: 'sc line',
  l: 2,
  h: 1,
  b: "",
  a: "sc 1,1,0\nline 20,0, 200,20"
};

ID_LinearRegression = {
  v: '2017-11-02',
  k: 'class line [] for in',
  l: 34,
  h: 3,
  b: "class LinearRegression extends Application\n	reset : ->\n		super\n	draw : ->\n	mousePressed : (mx,my) ->\n	pop : ->\napp = new LinearRegression",
  a: "class LinearRegression extends Application\n	reset : ->\n		super\n		@points = [] # [[20,100],[40,80],[60,140],[80,180],[100,140],[120,180],[140,200]]\n		@k=0\n		@m=0\n		@n=0\n		@r=0\n\n	draw : ->\n		sw 3\n		@n = @points.length\n		for [x,y] in @points\n			point x,y\n		if @n<2 then return \n		@linReg()\n		x1 = 0\n		x2 = 200\n		y1 = @k*x1+@m\n		y2 = @k*x2+@m\n		sw 1\n		line x1,y1,x2,y2\n\n	mousePressed : (mx,my) -> @points.push [mx,my]\n	pop : -> @points.pop() if @points.length > 0 \n\n	linReg : ->\n		@sxy=@sx=@sy=@sxx=@syy=0\n		for [x,y] in @points\n			@sxy += x*y\n			@sx  += x\n			@sy  += y\n			@sxx += x*x\n			@syy += y*y\n		@k = (@n*@sxy - @sx*@sy) / (@n*@sxx - @sx*@sx)\n		@m = @sy/@n - @k*@sx/@n\n		@r = (@n * @sxy - @sx * @sy) / Math.sqrt((@n*@sxx - @sx**2) * (@n*@syy - @sy**2))\n\napp = new LinearRegression \"a\"",
  c: {
    app: "reset()|pop()"
  },
  e: {
    k_and_m: "images/k_and_m.JPG",
    r: "images/r.PNG",
    "LinearRegression": "https://www.youtube.com/watch?v=9ytvxgxq0OQ"
  }
};
//# sourceMappingURL=L.js.map
