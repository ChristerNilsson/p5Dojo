// Generated by CoffeeScript 1.11.1
var ID_Alphanumeric, ID_Angle;

ID_Alphanumeric = {
  v: '2017-04-29',
  k: 'bg sc fc range circle for operators [] splice dist if class',
  l: 29,
  b: "class AlphaNumeric extends Application\n	reset : ->\n		super\n	draw  : ->\n	add   : ->\n	del   : ->\n	left  : ->\n	right : ->\n	mousePressed : (mx,my) ->\napp = new AlphaNumeric",
  a: "class AlphaNumeric extends Application\n	reset : ->\n		super\n		@RADIUS = 8\n		@DISTANCE = 20\n		@pattern = [[4,12,4,4,4,4,14], [14,17,1,2,4,8,31], [14,17,17,31,17,17,17],[30,17,17,30,17,17,30]]\n		@index = 0\n	draw : ->\n		bg 0\n		sc()\n		for index,j in @pattern[@index]\n			y =  40+@DISTANCE*j\n			for i in range 5\n				if index & 1<<i then fc 0,1,0 else fc 0,0.3,0\n				x = 140-@DISTANCE*i\n				circle x,y,@RADIUS\n	add   : ->\n		@pattern.push [0,0,0,0,0,0,0]\n		@index = @pattern.length - 1\n	del   : -> @pattern.splice @index, 1\n	left  : -> @index = (@index - 1) %% @pattern.length\n	right : -> @index = (@index + 1) %% @pattern.length\n\n	mousePressed : (mx,my) ->\n		for index,j in @pattern[@index]\n			y =  40+@DISTANCE*j\n			for i in range 5\n				x = 140-@DISTANCE*i\n				if dist(x,y,mx,my) < @RADIUS\n					@pattern[@index][j] ^= 1<<i\n\napp = new AlphaNumeric \"a\"",
  c: {
    app: "reset()|add()|del()|left()|right()"
  },
  e: {
    binÃ¤rt: "http://www.matteboken.se/lektioner/matte-1/tal/talsystem",
    hexadecimalt: "http://www.matteguiden.se/matte-1/grunder/binara-och-hexadecimala-tal",
    '5x7 matris': "https://www.google.se/search?q=5x7+matrix&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjWjYen5OrSAhXhJ5oKHf8BBmgQ_AUIBigB&biw=1310&bih=945&dpr=1.1"
  }
};

ID_Angle = {
  v: '2017-05-12',
  k: 'bg sc fc sw circle class dist if operators text sin cos atan2 radians arc _.min line for range abs',
  l: 54,
  b: "# Vit linje markerar 0 grader.\n\nclass Angle extends Application\n	reset : ->\n		super\n		@seed = 0\n	draw : ->\n	mousePressed : (mx,my) ->\n	randint : (n) -> int n * fraction 10000 * Math.sin @seed++\napp = new Angle",
  a: "\nclass Angle extends Application\n	reset : ->\n		super\n		@seed = 0\n		@level = 2\n		@errors = 0\n		@R1 = 50\n		@R2 = 100\n		@newGame 0\n	newGame : (d) ->\n		if d==-1 then @errors++\n		@level = constrain @level+d, 1, 100\n		@angle = int 360/@level * @randint @level # hela grader\n		@marginal = 180/@level # grader\n	draw : ->\n		bg 0.5\n		sw 50\n		strokeCap SQUARE\n		start = radians 135-@marginal\n		stopp = radians 135+@marginal\n		fc()\n		sc 1,1,0\n		arc 100,100,150,150,start,stopp\n		sw 1\n		for i in range 12\n			if i==0 then sc 1 else sc 0\n			v = i * 30 * PI/180\n			x1 = 100+@R1*cos v\n			y1 = 100+@R1*sin v\n			x2 = 100+@R2*cos v\n			y2 = 100+@R2*sin v\n			line x1,y1,x2,y2\n		sc 1,1,0\n		circle 100,100,@R1\n		circle 100,100,@R2\n		sc()\n		fc 1\n		textSize 16\n		textAlign CENTER,CENTER\n		fc 1,1,0\n		text @angle,100,100\n		fc 1,0,0\n		text @errors,100,75\n		fc 0,1,0\n		text @level,100,125\n	mousePressed : (mx,my) ->\n		d = dist 100,100,mx,my\n		if @R1 <= d <= @R2\n			v = -180/PI * atan2 my-100,mx-100\n			@seed += mx % 10\n			res = @angleDist(v,@angle) <= @marginal\n			@newGame if res then 1 else -1\n	angleDist : (u,v) -> _.min [abs(u-v), abs(360+u-v)]\n	randint : (n) -> int n * fraction 10000 * Math.sin @seed++\n\napp = new Angle \"a\"",
  c: {
    app: "reset()"
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQS5qcyIsInNvdXJjZVJvb3QiOiIuLlxcLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcZGF0YVxcQS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsZUFBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsNkRBREY7RUFFQSxDQUFBLEVBQUcsRUFGSDtFQUdBLENBQUEsRUFBRSxtTEFIRjtFQWVBLENBQUEsRUFBRSw4MkJBZkY7RUFpREEsQ0FBQSxFQUNDO0lBQUEsR0FBQSxFQUFLLG9DQUFMO0dBbEREO0VBbURBLENBQUEsRUFDQztJQUFBLE1BQUEsRUFBUywwREFBVDtJQUNBLFlBQUEsRUFBZSx1RUFEZjtJQUVBLFlBQUEsRUFBZSw0SUFGZjtHQXBERDs7O0FBd0RELFFBQUEsR0FDQztFQUFBLENBQUEsRUFBRSxZQUFGO0VBQ0EsQ0FBQSxFQUFFLG9HQURGO0VBRUEsQ0FBQSxFQUFFLEVBRkY7RUFHQSxDQUFBLEVBQUUsNE5BSEY7RUFlQSxDQUFBLEVBQUUsNHVDQWZGO0VBMEVBLENBQUEsRUFDQztJQUFBLEdBQUEsRUFBTSxTQUFOO0dBM0VEIiwic291cmNlc0NvbnRlbnQiOlsiSURfQWxwaGFudW1lcmljID1cblx0djonMjAxNy0wNC0yOSdcblx0azonYmcgc2MgZmMgcmFuZ2UgY2lyY2xlIGZvciBvcGVyYXRvcnMgW10gc3BsaWNlIGRpc3QgaWYgY2xhc3MnXG5cdGw6IDI5XG5cdGI6XCJcIlwiXG5jbGFzcyBBbHBoYU51bWVyaWMgZXh0ZW5kcyBBcHBsaWNhdGlvblxuXHRyZXNldCA6IC0+XG5cdFx0c3VwZXJcblx0ZHJhdyAgOiAtPlxuXHRhZGQgICA6IC0+XG5cdGRlbCAgIDogLT5cblx0bGVmdCAgOiAtPlxuXHRyaWdodCA6IC0+XG5cdG1vdXNlUHJlc3NlZCA6IChteCxteSkgLT5cbmFwcCA9IG5ldyBBbHBoYU51bWVyaWNcblwiXCJcIlxuXHRhOlwiXCJcIlxuY2xhc3MgQWxwaGFOdW1lcmljIGV4dGVuZHMgQXBwbGljYXRpb25cblx0cmVzZXQgOiAtPlxuXHRcdHN1cGVyXG5cdFx0QFJBRElVUyA9IDhcblx0XHRARElTVEFOQ0UgPSAyMFxuXHRcdEBwYXR0ZXJuID0gW1s0LDEyLDQsNCw0LDQsMTRdLCBbMTQsMTcsMSwyLDQsOCwzMV0sIFsxNCwxNywxNywzMSwxNywxNywxN10sWzMwLDE3LDE3LDMwLDE3LDE3LDMwXV1cblx0XHRAaW5kZXggPSAwXG5cdGRyYXcgOiAtPlxuXHRcdGJnIDBcblx0XHRzYygpXG5cdFx0Zm9yIGluZGV4LGogaW4gQHBhdHRlcm5bQGluZGV4XVxuXHRcdFx0eSA9ICA0MCtARElTVEFOQ0UqalxuXHRcdFx0Zm9yIGkgaW4gcmFuZ2UgNVxuXHRcdFx0XHRpZiBpbmRleCAmIDE8PGkgdGhlbiBmYyAwLDEsMCBlbHNlIGZjIDAsMC4zLDBcblx0XHRcdFx0eCA9IDE0MC1ARElTVEFOQ0UqaVxuXHRcdFx0XHRjaXJjbGUgeCx5LEBSQURJVVNcblx0YWRkICAgOiAtPlxuXHRcdEBwYXR0ZXJuLnB1c2ggWzAsMCwwLDAsMCwwLDBdXG5cdFx0QGluZGV4ID0gQHBhdHRlcm4ubGVuZ3RoIC0gMVxuXHRkZWwgICA6IC0+IEBwYXR0ZXJuLnNwbGljZSBAaW5kZXgsIDFcblx0bGVmdCAgOiAtPiBAaW5kZXggPSAoQGluZGV4IC0gMSkgJSUgQHBhdHRlcm4ubGVuZ3RoXG5cdHJpZ2h0IDogLT4gQGluZGV4ID0gKEBpbmRleCArIDEpICUlIEBwYXR0ZXJuLmxlbmd0aFxuXG5cdG1vdXNlUHJlc3NlZCA6IChteCxteSkgLT5cblx0XHRmb3IgaW5kZXgsaiBpbiBAcGF0dGVybltAaW5kZXhdXG5cdFx0XHR5ID0gIDQwK0BESVNUQU5DRSpqXG5cdFx0XHRmb3IgaSBpbiByYW5nZSA1XG5cdFx0XHRcdHggPSAxNDAtQERJU1RBTkNFKmlcblx0XHRcdFx0aWYgZGlzdCh4LHksbXgsbXkpIDwgQFJBRElVU1xuXHRcdFx0XHRcdEBwYXR0ZXJuW0BpbmRleF1bal0gXj0gMTw8aVxuXG5hcHAgPSBuZXcgQWxwaGFOdW1lcmljIFwiYVwiXG5cIlwiXCJcblx0Yzpcblx0XHRhcHA6IFwicmVzZXQoKXxhZGQoKXxkZWwoKXxsZWZ0KCl8cmlnaHQoKVwiXG5cdGU6XG5cdFx0Ymluw6RydCA6IFwiaHR0cDovL3d3dy5tYXR0ZWJva2VuLnNlL2xla3Rpb25lci9tYXR0ZS0xL3RhbC90YWxzeXN0ZW1cIlxuXHRcdGhleGFkZWNpbWFsdCA6IFwiaHR0cDovL3d3dy5tYXR0ZWd1aWRlbi5zZS9tYXR0ZS0xL2dydW5kZXIvYmluYXJhLW9jaC1oZXhhZGVjaW1hbGEtdGFsXCJcblx0XHQnNXg3IG1hdHJpcycgOiBcImh0dHBzOi8vd3d3Lmdvb2dsZS5zZS9zZWFyY2g/cT01eDcrbWF0cml4JnNvdXJjZT1sbm1zJnRibT1pc2NoJnNhPVgmdmVkPTBhaFVLRXdqV2pZZW41T3JTQWhYaEo1b0tIZjhCQm1nUV9BVUlCaWdCJmJpdz0xMzEwJmJpaD05NDUmZHByPTEuMVwiXG5cbklEX0FuZ2xlID1cblx0djonMjAxNy0wNS0xMidcblx0azonYmcgc2MgZmMgc3cgY2lyY2xlIGNsYXNzIGRpc3QgaWYgb3BlcmF0b3JzIHRleHQgc2luIGNvcyBhdGFuMiByYWRpYW5zIGFyYyBfLm1pbiBsaW5lIGZvciByYW5nZSBhYnMnXG5cdGw6NTRcblx0YjpcIlwiXCJcbiMgVml0IGxpbmplIG1hcmtlcmFyIDAgZ3JhZGVyLlxuXG5jbGFzcyBBbmdsZSBleHRlbmRzIEFwcGxpY2F0aW9uXG5cdHJlc2V0IDogLT5cblx0XHRzdXBlclxuXHRcdEBzZWVkID0gMFxuXHRkcmF3IDogLT5cblx0bW91c2VQcmVzc2VkIDogKG14LG15KSAtPlxuXHRyYW5kaW50IDogKG4pIC0+IGludCBuICogZnJhY3Rpb24gMTAwMDAgKiBNYXRoLnNpbiBAc2VlZCsrXG5hcHAgPSBuZXcgQW5nbGVcblwiXCJcIlxuXHRhOlwiXCJcIlxuXG5jbGFzcyBBbmdsZSBleHRlbmRzIEFwcGxpY2F0aW9uXG5cdHJlc2V0IDogLT5cblx0XHRzdXBlclxuXHRcdEBzZWVkID0gMFxuXHRcdEBsZXZlbCA9IDJcblx0XHRAZXJyb3JzID0gMFxuXHRcdEBSMSA9IDUwXG5cdFx0QFIyID0gMTAwXG5cdFx0QG5ld0dhbWUgMFxuXHRuZXdHYW1lIDogKGQpIC0+XG5cdFx0aWYgZD09LTEgdGhlbiBAZXJyb3JzKytcblx0XHRAbGV2ZWwgPSBjb25zdHJhaW4gQGxldmVsK2QsIDEsIDEwMFxuXHRcdEBhbmdsZSA9IGludCAzNjAvQGxldmVsICogQHJhbmRpbnQgQGxldmVsICMgaGVsYSBncmFkZXJcblx0XHRAbWFyZ2luYWwgPSAxODAvQGxldmVsICMgZ3JhZGVyXG5cdGRyYXcgOiAtPlxuXHRcdGJnIDAuNVxuXHRcdHN3IDUwXG5cdFx0c3Ryb2tlQ2FwIFNRVUFSRVxuXHRcdHN0YXJ0ID0gcmFkaWFucyAxMzUtQG1hcmdpbmFsXG5cdFx0c3RvcHAgPSByYWRpYW5zIDEzNStAbWFyZ2luYWxcblx0XHRmYygpXG5cdFx0c2MgMSwxLDBcblx0XHRhcmMgMTAwLDEwMCwxNTAsMTUwLHN0YXJ0LHN0b3BwXG5cdFx0c3cgMVxuXHRcdGZvciBpIGluIHJhbmdlIDEyXG5cdFx0XHRpZiBpPT0wIHRoZW4gc2MgMSBlbHNlIHNjIDBcblx0XHRcdHYgPSBpICogMzAgKiBQSS8xODBcblx0XHRcdHgxID0gMTAwK0BSMSpjb3MgdlxuXHRcdFx0eTEgPSAxMDArQFIxKnNpbiB2XG5cdFx0XHR4MiA9IDEwMCtAUjIqY29zIHZcblx0XHRcdHkyID0gMTAwK0BSMipzaW4gdlxuXHRcdFx0bGluZSB4MSx5MSx4Mix5MlxuXHRcdHNjIDEsMSwwXG5cdFx0Y2lyY2xlIDEwMCwxMDAsQFIxXG5cdFx0Y2lyY2xlIDEwMCwxMDAsQFIyXG5cdFx0c2MoKVxuXHRcdGZjIDFcblx0XHR0ZXh0U2l6ZSAxNlxuXHRcdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXG5cdFx0ZmMgMSwxLDBcblx0XHR0ZXh0IEBhbmdsZSwxMDAsMTAwXG5cdFx0ZmMgMSwwLDBcblx0XHR0ZXh0IEBlcnJvcnMsMTAwLDc1XG5cdFx0ZmMgMCwxLDBcblx0XHR0ZXh0IEBsZXZlbCwxMDAsMTI1XG5cdG1vdXNlUHJlc3NlZCA6IChteCxteSkgLT5cblx0XHRkID0gZGlzdCAxMDAsMTAwLG14LG15XG5cdFx0aWYgQFIxIDw9IGQgPD0gQFIyXG5cdFx0XHR2ID0gLTE4MC9QSSAqIGF0YW4yIG15LTEwMCxteC0xMDBcblx0XHRcdEBzZWVkICs9IG14ICUgMTBcblx0XHRcdHJlcyA9IEBhbmdsZURpc3QodixAYW5nbGUpIDw9IEBtYXJnaW5hbFxuXHRcdFx0QG5ld0dhbWUgaWYgcmVzIHRoZW4gMSBlbHNlIC0xXG5cdGFuZ2xlRGlzdCA6ICh1LHYpIC0+IF8ubWluIFthYnModS12KSwgYWJzKDM2MCt1LXYpXVxuXHRyYW5kaW50IDogKG4pIC0+IGludCBuICogZnJhY3Rpb24gMTAwMDAgKiBNYXRoLnNpbiBAc2VlZCsrXG5cbmFwcCA9IG5ldyBBbmdsZSBcImFcIlxuXCJcIlwiXG5cdGM6XG5cdFx0YXBwIDogXCJyZXNldCgpXCJcbiJdfQ==
//# sourceURL=C:\github\p5Dojo\coffee\data\A.coffee