// Generated by CoffeeScript 1.11.1
var ID_Alphanumeric, ID_Angle;

ID_Alphanumeric = {
  v: '2017-04-29',
  k: 'bg sc fc range circle for operators [] splice dist if class',
  b: "# LOC:29\n\nclass AlphaNumeric extends Application\n	reset : ->\n		super\n	draw  : ->\n	add   : ->\n	del   : ->\n	left  : ->\n	right : ->\n	mousePressed : (mx,my) ->\napp = new AlphaNumeric",
  a: "class AlphaNumeric extends Application\n	reset : ->\n		super\n		@RADIUS = 8\n		@DISTANCE = 20\n		@pattern = [[4,12,4,4,4,4,14], [14,17,1,2,4,8,31], [14,17,17,31,17,17,17],[30,17,17,30,17,17,30]]\n		@index = 0\n	draw : ->\n		bg 0\n		sc()\n		for index,j in @pattern[@index]\n			y =  40+@DISTANCE*j\n			for i in range 5\n				if index & 1<<i then fc 0,1,0 else fc 0,0.3,0\n				x = 140-@DISTANCE*i\n				circle x,y,@RADIUS\n	add   : ->\n		@pattern.push [0,0,0,0,0,0,0]\n		@index = @pattern.length - 1\n	del   : -> @pattern.splice @index, 1\n	left  : -> @index = (@index - 1) %% @pattern.length\n	right : -> @index = (@index + 1) %% @pattern.length\n\n	mousePressed : (mx,my) ->\n		for index,j in @pattern[@index]\n			y =  40+@DISTANCE*j\n			for i in range 5\n				x = 140-@DISTANCE*i\n				if dist(x,y,mx,my) < @RADIUS\n					@pattern[@index][j] ^= 1<<i\n\napp = new AlphaNumeric \"a\"",
  c: {
    app: "reset()|add()|del()|left()|right()"
  },
  e: {
    binÃ¤rt: "http://www.matteboken.se/lektioner/matte-1/tal/talsystem",
    hexadecimalt: "http://www.matteguiden.se/matte-1/grunder/binara-och-hexadecimala-tal",
    '5x7 matris': "https://www.google.se/search?q=5x7+matrix&source=lnms&tbm=isch&sa=X&ved=0ahUKEwjWjYen5OrSAhXhJ5oKHf8BBmgQ_AUIBigB&biw=1310&bih=945&dpr=1.1"
  }
};

ID_Angle = {
  v: '2017-05-13',
  k: 'bg sc fc sw circle class dist if operators text sin cos atan2 radians arc _.min line for range abs',
  b: "# LOC:54\n# Svart linje markerar 0 grader. Vit linje 90 grader.\n\nclass Angle extends Application\n	reset : ->\n		super\n		@seed = 0\n	draw : ->\n	mousePressed : (mx,my) ->\n	randint : (n) -> int n * fraction 10000 * Math.sin @seed++\napp = new Angle",
  a: "\nclass Angle extends Application\n	reset : ->\n		super\n		@seed = 0\n		@level = 2\n		@errors = 0\n		@R1 = 50\n		@R2 = 100\n		@newGame 0\n	newGame : (d) ->\n		if d==-1 then @errors++\n		@level = constrain @level+d, 1, 100\n		@angle = int 360/@level * @randint @level # hela grader\n		@marginal = 180/@level # grader\n	draw : ->\n		bg 0.5\n		sw 50\n		strokeCap SQUARE\n		start = radians 135-@marginal\n		stopp = radians 135+@marginal\n		fc()\n		sc 1,1,0\n		arc 100,100,150,150,start,stopp\n		sw 1\n		for i in range 12\n			if i==0 then sc 1 else sc 0\n			v = i * 30 * PI/180\n			x1 = 100+@R1*cos v\n			y1 = 100+@R1*sin v\n			x2 = 100+@R2*cos v\n			y2 = 100+@R2*sin v\n			line x1,y1,x2,y2\n		sc 1,1,0\n		circle 100,100,@R1\n		circle 100,100,@R2\n		sc()\n		fc 1\n		textSize 16\n		textAlign CENTER,CENTER\n		fc 1,1,0\n		text @angle,100,100\n		fc 1,0,0\n		text @errors,100,75\n		fc 0,1,0\n		text @level,100,125\n	mousePressed : (mx,my) ->\n		d = dist 100,100,mx,my\n		if @R1 <= d <= @R2\n			v = -180/PI * atan2 my-100,mx-100\n			@seed += mx % 10\n			res = @angleDist(v,@angle) <= @marginal\n			@newGame if res then 1 else -1\n	angleDist : (u,v) -> _.min [abs(u-v), abs(360+u-v)]\n	randint : (n) -> int n * fraction 10000 * Math.sin @seed++\n\napp = new Angle \"a\"",
  c: {
    app: "reset()"
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQS5qcyIsInNvdXJjZVJvb3QiOiIuLlxcLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcZGF0YVxcQS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsZUFBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsNkRBREY7RUFFQSxDQUFBLEVBQUUsK0xBRkY7RUFnQkEsQ0FBQSxFQUFFLDgyQkFoQkY7RUFrREEsQ0FBQSxFQUNDO0lBQUEsR0FBQSxFQUFLLG9DQUFMO0dBbkREO0VBb0RBLENBQUEsRUFDQztJQUFBLE1BQUEsRUFBUywwREFBVDtJQUNBLFlBQUEsRUFBZSx1RUFEZjtJQUVBLFlBQUEsRUFBZSw0SUFGZjtHQXJERDs7O0FBeURELFFBQUEsR0FDQztFQUFBLENBQUEsRUFBRSxZQUFGO0VBQ0EsQ0FBQSxFQUFFLG9HQURGO0VBRUEsQ0FBQSxFQUFFLDZQQUZGO0VBZUEsQ0FBQSxFQUFFLDR1Q0FmRjtFQTBFQSxDQUFBLEVBQ0M7SUFBQSxHQUFBLEVBQU0sU0FBTjtHQTNFRCIsInNvdXJjZXNDb250ZW50IjpbIklEX0FscGhhbnVtZXJpYyA9XG5cdHY6JzIwMTctMDQtMjknXG5cdGs6J2JnIHNjIGZjIHJhbmdlIGNpcmNsZSBmb3Igb3BlcmF0b3JzIFtdIHNwbGljZSBkaXN0IGlmIGNsYXNzJ1xuXHRiOlwiXCJcIlxuIyBMT0M6MjlcblxuY2xhc3MgQWxwaGFOdW1lcmljIGV4dGVuZHMgQXBwbGljYXRpb25cblx0cmVzZXQgOiAtPlxuXHRcdHN1cGVyXG5cdGRyYXcgIDogLT5cblx0YWRkICAgOiAtPlxuXHRkZWwgICA6IC0+XG5cdGxlZnQgIDogLT5cblx0cmlnaHQgOiAtPlxuXHRtb3VzZVByZXNzZWQgOiAobXgsbXkpIC0+XG5hcHAgPSBuZXcgQWxwaGFOdW1lcmljXG5cIlwiXCJcblx0YTpcIlwiXCJcbmNsYXNzIEFscGhhTnVtZXJpYyBleHRlbmRzIEFwcGxpY2F0aW9uXG5cdHJlc2V0IDogLT5cblx0XHRzdXBlclxuXHRcdEBSQURJVVMgPSA4XG5cdFx0QERJU1RBTkNFID0gMjBcblx0XHRAcGF0dGVybiA9IFtbNCwxMiw0LDQsNCw0LDE0XSwgWzE0LDE3LDEsMiw0LDgsMzFdLCBbMTQsMTcsMTcsMzEsMTcsMTcsMTddLFszMCwxNywxNywzMCwxNywxNywzMF1dXG5cdFx0QGluZGV4ID0gMFxuXHRkcmF3IDogLT5cblx0XHRiZyAwXG5cdFx0c2MoKVxuXHRcdGZvciBpbmRleCxqIGluIEBwYXR0ZXJuW0BpbmRleF1cblx0XHRcdHkgPSAgNDArQERJU1RBTkNFKmpcblx0XHRcdGZvciBpIGluIHJhbmdlIDVcblx0XHRcdFx0aWYgaW5kZXggJiAxPDxpIHRoZW4gZmMgMCwxLDAgZWxzZSBmYyAwLDAuMywwXG5cdFx0XHRcdHggPSAxNDAtQERJU1RBTkNFKmlcblx0XHRcdFx0Y2lyY2xlIHgseSxAUkFESVVTXG5cdGFkZCAgIDogLT5cblx0XHRAcGF0dGVybi5wdXNoIFswLDAsMCwwLDAsMCwwXVxuXHRcdEBpbmRleCA9IEBwYXR0ZXJuLmxlbmd0aCAtIDFcblx0ZGVsICAgOiAtPiBAcGF0dGVybi5zcGxpY2UgQGluZGV4LCAxXG5cdGxlZnQgIDogLT4gQGluZGV4ID0gKEBpbmRleCAtIDEpICUlIEBwYXR0ZXJuLmxlbmd0aFxuXHRyaWdodCA6IC0+IEBpbmRleCA9IChAaW5kZXggKyAxKSAlJSBAcGF0dGVybi5sZW5ndGhcblxuXHRtb3VzZVByZXNzZWQgOiAobXgsbXkpIC0+XG5cdFx0Zm9yIGluZGV4LGogaW4gQHBhdHRlcm5bQGluZGV4XVxuXHRcdFx0eSA9ICA0MCtARElTVEFOQ0UqalxuXHRcdFx0Zm9yIGkgaW4gcmFuZ2UgNVxuXHRcdFx0XHR4ID0gMTQwLUBESVNUQU5DRSppXG5cdFx0XHRcdGlmIGRpc3QoeCx5LG14LG15KSA8IEBSQURJVVNcblx0XHRcdFx0XHRAcGF0dGVybltAaW5kZXhdW2pdIF49IDE8PGlcblxuYXBwID0gbmV3IEFscGhhTnVtZXJpYyBcImFcIlxuXCJcIlwiXG5cdGM6XG5cdFx0YXBwOiBcInJlc2V0KCl8YWRkKCl8ZGVsKCl8bGVmdCgpfHJpZ2h0KClcIlxuXHRlOlxuXHRcdGJpbsOkcnQgOiBcImh0dHA6Ly93d3cubWF0dGVib2tlbi5zZS9sZWt0aW9uZXIvbWF0dGUtMS90YWwvdGFsc3lzdGVtXCJcblx0XHRoZXhhZGVjaW1hbHQgOiBcImh0dHA6Ly93d3cubWF0dGVndWlkZW4uc2UvbWF0dGUtMS9ncnVuZGVyL2JpbmFyYS1vY2gtaGV4YWRlY2ltYWxhLXRhbFwiXG5cdFx0JzV4NyBtYXRyaXMnIDogXCJodHRwczovL3d3dy5nb29nbGUuc2Uvc2VhcmNoP3E9NXg3K21hdHJpeCZzb3VyY2U9bG5tcyZ0Ym09aXNjaCZzYT1YJnZlZD0wYWhVS0V3aldqWWVuNU9yU0FoWGhKNW9LSGY4QkJtZ1FfQVVJQmlnQiZiaXc9MTMxMCZiaWg9OTQ1JmRwcj0xLjFcIlxuXG5JRF9BbmdsZSA9XG5cdHY6JzIwMTctMDUtMTMnXG5cdGs6J2JnIHNjIGZjIHN3IGNpcmNsZSBjbGFzcyBkaXN0IGlmIG9wZXJhdG9ycyB0ZXh0IHNpbiBjb3MgYXRhbjIgcmFkaWFucyBhcmMgXy5taW4gbGluZSBmb3IgcmFuZ2UgYWJzJ1xuXHRiOlwiXCJcIlxuIyBMT0M6NTRcbiMgU3ZhcnQgbGluamUgbWFya2VyYXIgMCBncmFkZXIuIFZpdCBsaW5qZSA5MCBncmFkZXIuXG5cbmNsYXNzIEFuZ2xlIGV4dGVuZHMgQXBwbGljYXRpb25cblx0cmVzZXQgOiAtPlxuXHRcdHN1cGVyXG5cdFx0QHNlZWQgPSAwXG5cdGRyYXcgOiAtPlxuXHRtb3VzZVByZXNzZWQgOiAobXgsbXkpIC0+XG5cdHJhbmRpbnQgOiAobikgLT4gaW50IG4gKiBmcmFjdGlvbiAxMDAwMCAqIE1hdGguc2luIEBzZWVkKytcbmFwcCA9IG5ldyBBbmdsZVxuXCJcIlwiXG5cdGE6XCJcIlwiXG5cbmNsYXNzIEFuZ2xlIGV4dGVuZHMgQXBwbGljYXRpb25cblx0cmVzZXQgOiAtPlxuXHRcdHN1cGVyXG5cdFx0QHNlZWQgPSAwXG5cdFx0QGxldmVsID0gMlxuXHRcdEBlcnJvcnMgPSAwXG5cdFx0QFIxID0gNTBcblx0XHRAUjIgPSAxMDBcblx0XHRAbmV3R2FtZSAwXG5cdG5ld0dhbWUgOiAoZCkgLT5cblx0XHRpZiBkPT0tMSB0aGVuIEBlcnJvcnMrK1xuXHRcdEBsZXZlbCA9IGNvbnN0cmFpbiBAbGV2ZWwrZCwgMSwgMTAwXG5cdFx0QGFuZ2xlID0gaW50IDM2MC9AbGV2ZWwgKiBAcmFuZGludCBAbGV2ZWwgIyBoZWxhIGdyYWRlclxuXHRcdEBtYXJnaW5hbCA9IDE4MC9AbGV2ZWwgIyBncmFkZXJcblx0ZHJhdyA6IC0+XG5cdFx0YmcgMC41XG5cdFx0c3cgNTBcblx0XHRzdHJva2VDYXAgU1FVQVJFXG5cdFx0c3RhcnQgPSByYWRpYW5zIDEzNS1AbWFyZ2luYWxcblx0XHRzdG9wcCA9IHJhZGlhbnMgMTM1K0BtYXJnaW5hbFxuXHRcdGZjKClcblx0XHRzYyAxLDEsMFxuXHRcdGFyYyAxMDAsMTAwLDE1MCwxNTAsc3RhcnQsc3RvcHBcblx0XHRzdyAxXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgMTJcblx0XHRcdGlmIGk9PTAgdGhlbiBzYyAxIGVsc2Ugc2MgMFxuXHRcdFx0diA9IGkgKiAzMCAqIFBJLzE4MFxuXHRcdFx0eDEgPSAxMDArQFIxKmNvcyB2XG5cdFx0XHR5MSA9IDEwMCtAUjEqc2luIHZcblx0XHRcdHgyID0gMTAwK0BSMipjb3MgdlxuXHRcdFx0eTIgPSAxMDArQFIyKnNpbiB2XG5cdFx0XHRsaW5lIHgxLHkxLHgyLHkyXG5cdFx0c2MgMSwxLDBcblx0XHRjaXJjbGUgMTAwLDEwMCxAUjFcblx0XHRjaXJjbGUgMTAwLDEwMCxAUjJcblx0XHRzYygpXG5cdFx0ZmMgMVxuXHRcdHRleHRTaXplIDE2XG5cdFx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcblx0XHRmYyAxLDEsMFxuXHRcdHRleHQgQGFuZ2xlLDEwMCwxMDBcblx0XHRmYyAxLDAsMFxuXHRcdHRleHQgQGVycm9ycywxMDAsNzVcblx0XHRmYyAwLDEsMFxuXHRcdHRleHQgQGxldmVsLDEwMCwxMjVcblx0bW91c2VQcmVzc2VkIDogKG14LG15KSAtPlxuXHRcdGQgPSBkaXN0IDEwMCwxMDAsbXgsbXlcblx0XHRpZiBAUjEgPD0gZCA8PSBAUjJcblx0XHRcdHYgPSAtMTgwL1BJICogYXRhbjIgbXktMTAwLG14LTEwMFxuXHRcdFx0QHNlZWQgKz0gbXggJSAxMFxuXHRcdFx0cmVzID0gQGFuZ2xlRGlzdCh2LEBhbmdsZSkgPD0gQG1hcmdpbmFsXG5cdFx0XHRAbmV3R2FtZSBpZiByZXMgdGhlbiAxIGVsc2UgLTFcblx0YW5nbGVEaXN0IDogKHUsdikgLT4gXy5taW4gW2Ficyh1LXYpLCBhYnMoMzYwK3UtdildXG5cdHJhbmRpbnQgOiAobikgLT4gaW50IG4gKiBmcmFjdGlvbiAxMDAwMCAqIE1hdGguc2luIEBzZWVkKytcblxuYXBwID0gbmV3IEFuZ2xlIFwiYVwiXG5cIlwiXCJcblx0Yzpcblx0XHRhcHAgOiBcInJlc2V0KClcIlxuIl19
//# sourceURL=C:\github\p5Dojo\coffee\data\A.coffee