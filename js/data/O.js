// Generated by CoffeeScript 1.11.1
var ID_OlympicRingPrep, ID_OlympicRings, ID_OneDiceHistogram, ID_Reversi;

ID_OlympicRingPrep = {
  v: '2017-04-29',
  b: "# LOC:21 sc fc sw # arc strokeCap class extends constructor new @ super ->\n\nclass Ring extends Application\n	reset  : ->\n		super\n	draw   : ->\n	start  : (d) ->\n	stopp  : (d) ->\n	radius : (d) ->\n	width  : (d) ->\napp = new Ring",
  a: "class Ring extends Application\n	reset : ->\n		super\n		@_start = 3\n		@_stopp = 6\n		@_w = 5\n		@_radius = 50\n	start : (d) -> @_start+=d\n	stopp : (d) -> @_stopp+=d\n	radius : (d) -> @_radius+=d\n	width : (d) -> @_w+=d\n	draw : ->\n		hour = PI/6\n		strokeCap SQUARE\n		fc()\n		sw @_w\n		sc 1,1,0\n		arc 100,100,2*@_radius,2*@_radius,(@_start-3)*hour,(@_stopp-3)*hour\n\napp = new Ring \"a\"",
  c: {
    app: "reset()|start -1|start +1|stopp -1|stopp +1|radius -1|radius +1|width -1|width +1"
  }
};

ID_OlympicRings = {
  v: '2017-04-29',
  b: "# LOC:24 sc bg fc sw # arc strokeCap class constructor new @\n\nclass Ring\n	constructor : (@x,@y,@r,@g,@b) ->\n	draw : (start=3,stopp=3,hour=PI/6) ->\n\nolympic = (x=100,y=100,radius=50,d=60,w=10) ->\n\nolympic()",
  a: "class Ring\n	constructor : (@x,@y,@radius, @r,@g,@b) ->\n	draw : (start=3,stopp=3,hour=PI/6) ->\n		sc @r,@g,@b\n		arc @x,@y,@radius,@radius,(start-3)*hour,(stopp-3)*hour\n\nolympic = (x=100,y=100,radius=50,d=60,w=10) ->\n	r1 = new Ring x-d,  y,     radius, 0,0,1\n	r2 = new Ring x,    y,     radius, 0,0,0\n	r3 = new Ring x+d,  y,     radius, 1,0,0\n	r4 = new Ring x-d/2,y+d/3, radius, 1,1,0\n	r5 = new Ring x+d/2,y+d/3, radius, 0,1,0\n\n	strokeCap SQUARE\n	bg 0.5\n	fc()\n	sw w\n\n	r1.draw()\n	r3.draw()\n	r4.draw()\n	r5.draw()\n	r1.draw 2,4\n	r2.draw()\n	r4.draw 12,2\n	r5.draw 8,10\n	r3.draw 6,8\n\nolympic()",
  e: {
    Wikipedia: "https://en.wikipedia.org/wiki/Olympic_symbols"
  }
};

ID_OneDiceHistogram = {
  v: '2017-04-29',
  b: "# LOC:17 fc sc range # Array fill length int random text textAlign for in ++ * / + - rect []\n# OBS: PÃ¥ grund av random blir bitmapparna inte likadana\n\nh = 50\ncounts = Array(4).fill 150\nfor count,i in counts\n	y = h*i\n	rect 0,y,count,h\n	text y,0,y",
  a: "counts = Array(6).fill 0\ndice = -> int 6 * random()\nfor i in range 1000\n	counts[dice()]++\nh = int 200/6\nsc()\nfor count,i in counts\n	y = h*i\n	fc 1,1,0,0.5\n	sc 1,1,0\n	rect 0,y,count,h-3\n	fc 1,1,0\n	sc()\n	textAlign LEFT,CENTER\n	text i+1, 5,y+h/2\n	textAlign RIGHT,CENTER\n	text count, count-5,y+h/2"
};

ID_Reversi = {
  v: '2017-05-02',
  b: "# LOC:49 sc fc bg range # [] push length rect circle not and while if then\n#        % + - * / <= < == class extends constructor new @ super ->\n\nclass Reversi extends Application\n	reset : ->\n		super\n	draw : ->\n	mousePressed : (mx,my) ->\napp = new Reversi",
  a: "class Reversi extends Application\n	reset : ->\n		super\n		@newGame()\n	newGame : ->\n		@board = []\n		@drag = 0\n		for i in range 8\n			@board.push []\n			for j in range 8\n				@board[i].push 0\n		@board[3][3]=1 # Black\n		@board[3][4]=2 # White\n		@board[4][3]=2\n		@board[4][4]=1\n	draw : ->\n		sc 0\n		for i in range 8\n			for j in range 8\n				sq = @board[j][i]\n				fc 0,1,0\n				rect 20+20*i, 20+20*j,20,20\n				if sq in [1,2]\n					fc sq-1\n					circle 30.5+20*i, 30.5+20*j,10-2\n	move : (i,j) ->\n		res = []\n		mycol = 1 + @drag % 2\n		other = [0,2,1][mycol]\n		for di in [-1,0,1]\n			for dj in [-1,0,1]\n				if not (di==0 and dj==0)\n					i1=i+di\n					j1=j+dj\n					temp = []\n					while 0 <= i1 < 8 and 0 <= j1 < 8 and @board[j1][i1] == other\n						temp.push [i1,j1]\n						i1 = i1+di\n						j1 = j1+dj\n					if 0 <= i1 < 8 and 0 <= j1 < 8 and @board[j1][i1] == mycol\n						if temp.length > 0 then	res = res.concat temp\n		if res.length > 0\n			@board[j][i] = mycol\n			for [i,j] in res then	@board[j][i] = mycol\n			@drag++\n	mousePressed : (mx,my) ->\n		i = int mx / 20 - 1\n		j = int my / 20 - 1\n		if 0 <= i < 8 and 0 <= j < 8 and @board[j][i] == 0 then @move i,j\n\napp = new Reversi \"a\"",
  c: {
    app: "reset()"
  },
  e: {
    Reversi: "https://en.wikipedia.org/wiki/Reversi"
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTy5qcyIsInNvdXJjZVJvb3QiOiIuLlxcLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcZGF0YVxcTy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsa0JBQUEsR0FDQztFQUFBLENBQUEsRUFBRSxZQUFGO0VBQ0EsQ0FBQSxFQUFFLDJPQURGO0VBY0EsQ0FBQSxFQUFFLDBZQWRGO0VBb0NBLENBQUEsRUFDQztJQUFBLEdBQUEsRUFBTSxtRkFBTjtHQXJDRDs7O0FBdUNELGVBQUEsR0FDQztFQUFBLENBQUEsRUFBRSxZQUFGO0VBQ0EsQ0FBQSxFQUFHLHVOQURIO0VBWUEsQ0FBQSxFQUFHLHFtQkFaSDtFQTJDQSxDQUFBLEVBQ0M7SUFBQSxTQUFBLEVBQVksK0NBQVo7R0E1Q0Q7OztBQThDRCxtQkFBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsK1BBREY7RUFZQSxDQUFBLEVBQUUsc1RBWkY7OztBQWdDRCxVQUFBLEdBQ0M7RUFBQSxDQUFBLEVBQUUsWUFBRjtFQUNBLENBQUEsRUFBRyx1UUFESDtFQVlBLENBQUEsRUFBRywwckNBWkg7RUFpRUEsQ0FBQSxFQUNDO0lBQUEsR0FBQSxFQUFNLFNBQU47R0FsRUQ7RUFtRUEsQ0FBQSxFQUNDO0lBQUEsT0FBQSxFQUFVLHVDQUFWO0dBcEVEIiwic291cmNlc0NvbnRlbnQiOlsiSURfT2x5bXBpY1JpbmdQcmVwID1cblx0djonMjAxNy0wNC0yOSdcblx0YjpcIlwiXCJcbiMgTE9DOjIxIHNjIGZjIHN3ICMgYXJjIHN0cm9rZUNhcCBjbGFzcyBleHRlbmRzIGNvbnN0cnVjdG9yIG5ldyBAIHN1cGVyIC0+XG5cbmNsYXNzIFJpbmcgZXh0ZW5kcyBBcHBsaWNhdGlvblxuXHRyZXNldCAgOiAtPlxuXHRcdHN1cGVyXG5cdGRyYXcgICA6IC0+XG5cdHN0YXJ0ICA6IChkKSAtPlxuXHRzdG9wcCAgOiAoZCkgLT5cblx0cmFkaXVzIDogKGQpIC0+XG5cdHdpZHRoICA6IChkKSAtPlxuYXBwID0gbmV3IFJpbmdcblwiXCJcIlxuXHRhOlwiXCJcIlxuY2xhc3MgUmluZyBleHRlbmRzIEFwcGxpY2F0aW9uXG5cdHJlc2V0IDogLT5cblx0XHRzdXBlclxuXHRcdEBfc3RhcnQgPSAzXG5cdFx0QF9zdG9wcCA9IDZcblx0XHRAX3cgPSA1XG5cdFx0QF9yYWRpdXMgPSA1MFxuXHRzdGFydCA6IChkKSAtPiBAX3N0YXJ0Kz1kXG5cdHN0b3BwIDogKGQpIC0+IEBfc3RvcHArPWRcblx0cmFkaXVzIDogKGQpIC0+IEBfcmFkaXVzKz1kXG5cdHdpZHRoIDogKGQpIC0+IEBfdys9ZFxuXHRkcmF3IDogLT5cblx0XHRob3VyID0gUEkvNlxuXHRcdHN0cm9rZUNhcCBTUVVBUkVcblx0XHRmYygpXG5cdFx0c3cgQF93XG5cdFx0c2MgMSwxLDBcblx0XHRhcmMgMTAwLDEwMCwyKkBfcmFkaXVzLDIqQF9yYWRpdXMsKEBfc3RhcnQtMykqaG91ciwoQF9zdG9wcC0zKSpob3VyXG5cbmFwcCA9IG5ldyBSaW5nIFwiYVwiXG5cIlwiXCJcblx0Yzpcblx0XHRhcHAgOiBcInJlc2V0KCl8c3RhcnQgLTF8c3RhcnQgKzF8c3RvcHAgLTF8c3RvcHAgKzF8cmFkaXVzIC0xfHJhZGl1cyArMXx3aWR0aCAtMXx3aWR0aCArMVwiXG5cbklEX09seW1waWNSaW5ncyA9XG5cdHY6JzIwMTctMDQtMjknXG5cdGI6IFwiXCJcIlxuIyBMT0M6MjQgc2MgYmcgZmMgc3cgIyBhcmMgc3Ryb2tlQ2FwIGNsYXNzIGNvbnN0cnVjdG9yIG5ldyBAXG5cbmNsYXNzIFJpbmdcblx0Y29uc3RydWN0b3IgOiAoQHgsQHksQHIsQGcsQGIpIC0+XG5cdGRyYXcgOiAoc3RhcnQ9MyxzdG9wcD0zLGhvdXI9UEkvNikgLT5cblxub2x5bXBpYyA9ICh4PTEwMCx5PTEwMCxyYWRpdXM9NTAsZD02MCx3PTEwKSAtPlxuXG5vbHltcGljKClcblwiXCJcIlxuXHRhOiBcIlwiXCJcbmNsYXNzIFJpbmdcblx0Y29uc3RydWN0b3IgOiAoQHgsQHksQHJhZGl1cywgQHIsQGcsQGIpIC0+XG5cdGRyYXcgOiAoc3RhcnQ9MyxzdG9wcD0zLGhvdXI9UEkvNikgLT5cblx0XHRzYyBAcixAZyxAYlxuXHRcdGFyYyBAeCxAeSxAcmFkaXVzLEByYWRpdXMsKHN0YXJ0LTMpKmhvdXIsKHN0b3BwLTMpKmhvdXJcblxub2x5bXBpYyA9ICh4PTEwMCx5PTEwMCxyYWRpdXM9NTAsZD02MCx3PTEwKSAtPlxuXHRyMSA9IG5ldyBSaW5nIHgtZCwgIHksICAgICByYWRpdXMsIDAsMCwxXG5cdHIyID0gbmV3IFJpbmcgeCwgICAgeSwgICAgIHJhZGl1cywgMCwwLDBcblx0cjMgPSBuZXcgUmluZyB4K2QsICB5LCAgICAgcmFkaXVzLCAxLDAsMFxuXHRyNCA9IG5ldyBSaW5nIHgtZC8yLHkrZC8zLCByYWRpdXMsIDEsMSwwXG5cdHI1ID0gbmV3IFJpbmcgeCtkLzIseStkLzMsIHJhZGl1cywgMCwxLDBcblxuXHRzdHJva2VDYXAgU1FVQVJFXG5cdGJnIDAuNVxuXHRmYygpXG5cdHN3IHdcblxuXHRyMS5kcmF3KClcblx0cjMuZHJhdygpXG5cdHI0LmRyYXcoKVxuXHRyNS5kcmF3KClcblx0cjEuZHJhdyAyLDRcblx0cjIuZHJhdygpXG5cdHI0LmRyYXcgMTIsMlxuXHRyNS5kcmF3IDgsMTBcblx0cjMuZHJhdyA2LDhcblxub2x5bXBpYygpXG5cIlwiXCJcblx0ZSA6XG5cdFx0V2lraXBlZGlhIDogXCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9PbHltcGljX3N5bWJvbHNcIlxuXG5JRF9PbmVEaWNlSGlzdG9ncmFtID1cblx0djonMjAxNy0wNC0yOSdcblx0YjpcIlwiXCJcbiMgTE9DOjE3IGZjIHNjIHJhbmdlICMgQXJyYXkgZmlsbCBsZW5ndGggaW50IHJhbmRvbSB0ZXh0IHRleHRBbGlnbiBmb3IgaW4gKysgKiAvICsgLSByZWN0IFtdXG4jIE9CUzogUMOlIGdydW5kIGF2IHJhbmRvbSBibGlyIGJpdG1hcHBhcm5hIGludGUgbGlrYWRhbmFcblxuaCA9IDUwXG5jb3VudHMgPSBBcnJheSg0KS5maWxsIDE1MFxuZm9yIGNvdW50LGkgaW4gY291bnRzXG5cdHkgPSBoKmlcblx0cmVjdCAwLHksY291bnQsaFxuXHR0ZXh0IHksMCx5XG5cIlwiXCJcblx0YTpcIlwiXCJcbmNvdW50cyA9IEFycmF5KDYpLmZpbGwgMFxuZGljZSA9IC0+IGludCA2ICogcmFuZG9tKClcbmZvciBpIGluIHJhbmdlIDEwMDBcblx0Y291bnRzW2RpY2UoKV0rK1xuaCA9IGludCAyMDAvNlxuc2MoKVxuZm9yIGNvdW50LGkgaW4gY291bnRzXG5cdHkgPSBoKmlcblx0ZmMgMSwxLDAsMC41XG5cdHNjIDEsMSwwXG5cdHJlY3QgMCx5LGNvdW50LGgtM1xuXHRmYyAxLDEsMFxuXHRzYygpXG5cdHRleHRBbGlnbiBMRUZULENFTlRFUlxuXHR0ZXh0IGkrMSwgNSx5K2gvMlxuXHR0ZXh0QWxpZ24gUklHSFQsQ0VOVEVSXG5cdHRleHQgY291bnQsIGNvdW50LTUseStoLzJcblwiXCJcIlxuXG5JRF9SZXZlcnNpID1cblx0djonMjAxNy0wNS0wMidcblx0YjogXCJcIlwiXG4jIExPQzo0OSBzYyBmYyBiZyByYW5nZSAjIFtdIHB1c2ggbGVuZ3RoIHJlY3QgY2lyY2xlIG5vdCBhbmQgd2hpbGUgaWYgdGhlblxuIyAgICAgICAgJSArIC0gKiAvIDw9IDwgPT0gY2xhc3MgZXh0ZW5kcyBjb25zdHJ1Y3RvciBuZXcgQCBzdXBlciAtPlxuXG5jbGFzcyBSZXZlcnNpIGV4dGVuZHMgQXBwbGljYXRpb25cblx0cmVzZXQgOiAtPlxuXHRcdHN1cGVyXG5cdGRyYXcgOiAtPlxuXHRtb3VzZVByZXNzZWQgOiAobXgsbXkpIC0+XG5hcHAgPSBuZXcgUmV2ZXJzaVxuXCJcIlwiXG5cdGE6IFwiXCJcIlxuY2xhc3MgUmV2ZXJzaSBleHRlbmRzIEFwcGxpY2F0aW9uXG5cdHJlc2V0IDogLT5cblx0XHRzdXBlclxuXHRcdEBuZXdHYW1lKClcblx0bmV3R2FtZSA6IC0+XG5cdFx0QGJvYXJkID0gW11cblx0XHRAZHJhZyA9IDBcblx0XHRmb3IgaSBpbiByYW5nZSA4XG5cdFx0XHRAYm9hcmQucHVzaCBbXVxuXHRcdFx0Zm9yIGogaW4gcmFuZ2UgOFxuXHRcdFx0XHRAYm9hcmRbaV0ucHVzaCAwXG5cdFx0QGJvYXJkWzNdWzNdPTEgIyBCbGFja1xuXHRcdEBib2FyZFszXVs0XT0yICMgV2hpdGVcblx0XHRAYm9hcmRbNF1bM109MlxuXHRcdEBib2FyZFs0XVs0XT0xXG5cdGRyYXcgOiAtPlxuXHRcdHNjIDBcblx0XHRmb3IgaSBpbiByYW5nZSA4XG5cdFx0XHRmb3IgaiBpbiByYW5nZSA4XG5cdFx0XHRcdHNxID0gQGJvYXJkW2pdW2ldXG5cdFx0XHRcdGZjIDAsMSwwXG5cdFx0XHRcdHJlY3QgMjArMjAqaSwgMjArMjAqaiwyMCwyMFxuXHRcdFx0XHRpZiBzcSBpbiBbMSwyXVxuXHRcdFx0XHRcdGZjIHNxLTFcblx0XHRcdFx0XHRjaXJjbGUgMzAuNSsyMCppLCAzMC41KzIwKmosMTAtMlxuXHRtb3ZlIDogKGksaikgLT5cblx0XHRyZXMgPSBbXVxuXHRcdG15Y29sID0gMSArIEBkcmFnICUgMlxuXHRcdG90aGVyID0gWzAsMiwxXVtteWNvbF1cblx0XHRmb3IgZGkgaW4gWy0xLDAsMV1cblx0XHRcdGZvciBkaiBpbiBbLTEsMCwxXVxuXHRcdFx0XHRpZiBub3QgKGRpPT0wIGFuZCBkaj09MClcblx0XHRcdFx0XHRpMT1pK2RpXG5cdFx0XHRcdFx0ajE9aitkalxuXHRcdFx0XHRcdHRlbXAgPSBbXVxuXHRcdFx0XHRcdHdoaWxlIDAgPD0gaTEgPCA4IGFuZCAwIDw9IGoxIDwgOCBhbmQgQGJvYXJkW2oxXVtpMV0gPT0gb3RoZXJcblx0XHRcdFx0XHRcdHRlbXAucHVzaCBbaTEsajFdXG5cdFx0XHRcdFx0XHRpMSA9IGkxK2RpXG5cdFx0XHRcdFx0XHRqMSA9IGoxK2RqXG5cdFx0XHRcdFx0aWYgMCA8PSBpMSA8IDggYW5kIDAgPD0gajEgPCA4IGFuZCBAYm9hcmRbajFdW2kxXSA9PSBteWNvbFxuXHRcdFx0XHRcdFx0aWYgdGVtcC5sZW5ndGggPiAwIHRoZW5cdHJlcyA9IHJlcy5jb25jYXQgdGVtcFxuXHRcdGlmIHJlcy5sZW5ndGggPiAwXG5cdFx0XHRAYm9hcmRbal1baV0gPSBteWNvbFxuXHRcdFx0Zm9yIFtpLGpdIGluIHJlcyB0aGVuXHRAYm9hcmRbal1baV0gPSBteWNvbFxuXHRcdFx0QGRyYWcrK1xuXHRtb3VzZVByZXNzZWQgOiAobXgsbXkpIC0+XG5cdFx0aSA9IGludCBteCAvIDIwIC0gMVxuXHRcdGogPSBpbnQgbXkgLyAyMCAtIDFcblx0XHRpZiAwIDw9IGkgPCA4IGFuZCAwIDw9IGogPCA4IGFuZCBAYm9hcmRbal1baV0gPT0gMCB0aGVuIEBtb3ZlIGksalxuXG5hcHAgPSBuZXcgUmV2ZXJzaSBcImFcIlxuXCJcIlwiXG5cdGM6XG5cdFx0YXBwIDogXCJyZXNldCgpXCJcblx0ZTpcblx0XHRSZXZlcnNpIDogXCJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9SZXZlcnNpXCJcbiJdfQ==
//# sourceURL=C:\github\p5Dojo\coffee\data\O.coffee