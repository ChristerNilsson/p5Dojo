// Generated by CoffeeScript 1.11.1
var ID_Tetris, ID_TextA, ID_TextB, ID_TextC, ID_TextD, ID_Triangle, ID_TwoArcs, ID_TwoDiceHistogram, ID_TwoDiscsA, ID_TwoDiscsB;

ID_Tetris = {
  v: '2017-05-07',
  k: 'bg fc range [] {} for rect if while _.contains operators class',
  b: "# LOC:113\n\nclass Tetris extends Application\n	reset : ->\n		super\n	draw  : ->\n	mousePressed : (mx,my) ->\napp = new Tetris",
  a: "class Tetris extends Application\n	reset : ->\n		super\n		@buttons = [[140,105,'-90'],[180,105,'+90'],[160,130,'dn'],[140,155,'lt'],[180,155,'rt'],[160,180,'sp'],[160,50,0]]\n		@seed = 0\n		@arena = (new Array(12).fill(0) for i in range 20)\n		@x=0\n		@y=0\n		@matrix = null\n		@score = 0\n		@playerReset()\n	draw : ->\n		bg 0\n		fc 0.5\n		rect 0,0,120,200\n		sc 0\n		@drawMatrix @arena, 0,0\n		@drawMatrix @matrix, @x,@y\n		@arenaSweep()\n		textSize 20\n		textAlign CENTER,CENTER\n		@buttons[6][2] = @score\n		for [x,y,txt],index in @buttons\n			fc 0.5\n			if index < 6 then circle x,y,15\n			fc 1,1,0\n			text txt,x,y\n	randint : (n) -> int n * fraction 10000 * Math.sin @seed++\n	mousePressed : (mx,my) ->\n		for [x,y,txt],index in @buttons\n			if dist(mx,my,x,y) < 15\n				if index==0 then @playerRotate -1 # -90\n				if index==1 then @playerRotate 1  # +90\n				if index==2 then @playerDown()    # DOWN\n				if index==3 then @playerMove -1   # LEFT\n				if index==4 then @playerMove 1    # RIGHT\n				if index==5 then @playerDrop()    # SPACE\n	arenaSweep : ->\n		for i in range @arena.length\n			y = 19-i\n			rad = @arena[y]\n			if not _.contains rad, 0\n				row = @arena.splice(y, 1)[0].fill 0\n				@arena.unshift row\n				@score++\n	playerRotate : (dir) ->\n		xpos = @x\n		offset = 1\n		@rotera @matrix, dir\n		while @collide()\n			@x += offset\n			offset = -(offset + (offset > 0 ? 1 : -1))\n			if offset > @matrix[0].length\n				@rotera @matrix, -dir\n				@x = xpos\n				return\n	playerReset : ->\n		pieces = 'TJLOSZI'\n		@matrix = @createPiece pieces[@randint pieces.length]\n		@y = 0\n		@x = (@arena[0].length / 2 | 0) - (@matrix[0].length / 2 | 0)\n		if @collide()\n			row.fill(0) for row in @arena\n			@score = 0\n	playerDown : ->\n		@y++\n		if @collide()\n			@y--\n			@merge()\n			@playerReset()\n			@arenaSweep()\n	playerDrop : ->\n		while not @collide()\n			@y++\n		@y--\n		@merge()\n		@playerReset()\n		@arenaSweep()\n	playerMove : (offset) ->\n		@x += offset\n		if @collide() then @x -= offset\n	merge : ->\n		for row,y in @matrix\n			for value,x in row\n				if value != 0 then @arena[y + @y][x + @x] = value\n	rotera : (matrix, dir) ->\n		for y in range matrix.length\n			for x in range y\n				[matrix[x][y], matrix[y][x]] = [matrix[y][x],matrix[x][y]]\n		if dir > 0\n			row.reverse() for row in matrix\n		else\n			matrix.reverse()\n	collide : ->\n		m = @matrix\n		for y in range m.length\n			for x in range m[y].length\n				if (m[y][x] != 0 and (@arena[y + @y] and @arena[y + @y][x + @x]) != 0) then return true\n		false\n	createPiece : (type) ->\n		if type == 'I' then [[0, 1, 0, 0],	[0, 1, 0, 0],	[0, 1, 0, 0],	[0, 1, 0, 0],]\n		else if type == 'L' then [[0, 2, 0],[0, 2, 0],[0, 2, 2],]\n		else if type == 'J' then [[0, 3, 0],[0, 3, 0],[3, 3, 0],]\n		else if type == 'O' then [[4, 4],[4, 4],]\n		else if type == 'Z' then [[5, 5, 0],[0, 5, 5],[0, 0, 0]]\n		else if type == 'S' then [[0, 6, 6],[6, 6, 0],[0, 0, 0]]\n		else if type == 'T' then [[0, 7, 0],[7, 7, 7],[0, 0, 0]]\n	drawMatrix : (matrix, xoff,yoff) ->\n		for row,y in matrix\n			for value,x in row\n				if value != 0\n					fcc value\n					rect 10*(x + xoff), 10*(y + yoff), 10,10\n\napp = new Tetris \"a\"",
  c: {
    app: "reset()"
  },
  e: {
    "Wikipedia": "https://en.wikipedia.org/wiki/Tetris",
    "Meth Meth Method": "https://www.youtube.com/watch?v=H2aW5V46khA"
  }
};

ID_TextA = {
  v: '2017-04-29',
  k: 'fc text',
  b: "# LOC:4 \n",
  a: "fc 1,1,0\nsc()\ntextSize 32\ntext 'Coffeescript',0,100"
};

ID_TextB = {
  v: '2017-04-29',
  k: 'bg fc sc sw text',
  b: "# LOC:5 \n",
  a: "fc 1,1,0\nsc()\ntextSize 32\ntextAlign CENTER,CENTER\ntext 'Coffeescript',100,100"
};

ID_TextC = {
  v: '2017-04-29',
  k: 'fc rd text translate',
  b: "# LOC:6 \n",
  a: "fc 1,1,0\ntextSize 32\ntextAlign CENTER,CENTER\ntranslate 100,100\nrd 90\ntext 'Coffeescript',0,0"
};

ID_TextD = {
  v: '2017-04-29',
  k: 'fc rd text translate',
  b: "# LOC:6 \n",
  a: "fc 1,1,0\ntextSize 32\ntextAlign CENTER,CENTER\ntranslate 100,100\nrd 180\ntext 'Coffeescript',0,0"
};

ID_Triangle = {
  v: '2017-04-29',
  k: 'fc triangle',
  b: "# LOC:2 \n",
  a: "fc 1\ntriangle 20,40, 160,100, 100,140"
};

ID_TwoArcs = {
  v: '2017-04-29',
  k: 'fc sc sw arc radians strokeCap',
  b: "# LOC:7 \n",
  a: "fc()\nsc 1,0,0\nsw 20\narc 100,70, 100,100, radians(-90),radians(90)\nsc 1,1,0\nstrokeCap SQUARE\narc 100,120, 100,100, radians(90),radians(-90)"
};

ID_TwoDiceHistogram = {
  v: '2017-04-29',
  k: 'bg fc sc range int random text if for operators rect []',
  b: "# LOC:22\n# OBS: PÃ¥ grund av random blir bitmapparna inte likadana",
  a: "counts = Array(11).fill 0\ndice = -> int 6 * random()\ntextAlign CENTER,CENTER\nfor i in range 1000\n	counts[dice() + dice()]++\nh = int 200/11\nbg 0\nfor count,i in counts\n	y = h*i\n	fc 1,1,0,0.5\n	sc 1,1,0\n	rect 0,y,count,h-3\n	fc 1,1,0\n	sc()\n	textAlign LEFT,CENTER\n	text i+2, 5,y+h/2\n	if count < 100\n		textAlign LEFT,CENTER\n		text count, count+5,y+h/2\n	else\n		textAlign RIGHT,CENTER\n		text count, count-5,y+h/2",
  e: {
    Animering: "https://www.openprocessing.org/sketch/124236"
  }
};

ID_TwoDiscsA = {
  v: '2017-04-29',
  k: 'circle fc',
  b: "# LOC:4 \n",
  a: "fc 1,0,0\ncircle 80,100,40\nfc 0,1,0\ncircle 100,120,50"
};

ID_TwoDiscsB = {
  v: '2017-04-29',
  k: 'circle fc',
  b: "# LOC:4 \n",
  a: "fc 1,0,0\ncircle 80,100,40\nfc 0,1,0, 0.5\ncircle 120,100,50"
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVC5qcyIsInNvdXJjZVJvb3QiOiIuLlxcLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcZGF0YVxcVC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsU0FBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsZ0VBREY7RUFFQSxDQUFBLEVBQUUsZ0lBRkY7RUFZQSxDQUFBLEVBQUUscW5HQVpGO0VBaUlBLENBQUEsRUFDQztJQUFBLEdBQUEsRUFBSyxTQUFMO0dBbElEO0VBbUlBLENBQUEsRUFDQztJQUFBLFdBQUEsRUFBYyxzQ0FBZDtJQUNBLGtCQUFBLEVBQXFCLDZDQURyQjtHQXBJRDs7O0FBdUlELFFBQUEsR0FDQztFQUFBLENBQUEsRUFBRSxZQUFGO0VBQ0EsQ0FBQSxFQUFFLFNBREY7RUFFQSxDQUFBLEVBQUUsWUFGRjtFQUdBLENBQUEsRUFBRSx3REFIRjs7O0FBVUQsUUFBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsa0JBREY7RUFFQSxDQUFBLEVBQUUsWUFGRjtFQUdBLENBQUEsRUFBRSxtRkFIRjs7O0FBV0QsUUFBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsc0JBREY7RUFFQSxDQUFBLEVBQUUsWUFGRjtFQUdBLENBQUEsRUFBRSxtR0FIRjs7O0FBWUQsUUFBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsc0JBREY7RUFFQSxDQUFBLEVBQUUsWUFGRjtFQUdBLENBQUEsRUFBRSxvR0FIRjs7O0FBWUQsV0FBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsYUFERjtFQUVBLENBQUEsRUFBRSxZQUZGO0VBR0EsQ0FBQSxFQUFFLHdDQUhGOzs7QUFRRCxVQUFBLEdBQ0M7RUFBQSxDQUFBLEVBQUUsWUFBRjtFQUNBLENBQUEsRUFBRSxnQ0FERjtFQUVBLENBQUEsRUFBRSxZQUZGO0VBR0EsQ0FBQSxFQUFFLGtKQUhGOzs7QUFhRCxtQkFBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUseURBREY7RUFFQSxDQUFBLEVBQUUsb0VBRkY7RUFNQSxDQUFBLEVBQUUsMGFBTkY7RUE4QkEsQ0FBQSxFQUNDO0lBQUEsU0FBQSxFQUFZLDhDQUFaO0dBL0JEOzs7QUFpQ0QsWUFBQSxHQUNDO0VBQUEsQ0FBQSxFQUFFLFlBQUY7RUFDQSxDQUFBLEVBQUUsV0FERjtFQUVBLENBQUEsRUFBRSxZQUZGO0VBR0EsQ0FBQSxFQUFFLHlEQUhGOzs7QUFVRCxZQUFBLEdBQ0M7RUFBQSxDQUFBLEVBQUUsWUFBRjtFQUNBLENBQUEsRUFBRSxXQURGO0VBRUEsQ0FBQSxFQUFFLFlBRkY7RUFHQSxDQUFBLEVBQUUsOERBSEYiLCJzb3VyY2VzQ29udGVudCI6WyJJRF9UZXRyaXMgPVxuXHR2OicyMDE3LTA1LTA3J1xuXHRrOidiZyBmYyByYW5nZSBbXSB7fSBmb3IgcmVjdCBpZiB3aGlsZSBfLmNvbnRhaW5zIG9wZXJhdG9ycyBjbGFzcydcblx0YjpcIlwiXCJcbiMgTE9DOjExM1xuXG5jbGFzcyBUZXRyaXMgZXh0ZW5kcyBBcHBsaWNhdGlvblxuXHRyZXNldCA6IC0+XG5cdFx0c3VwZXJcblx0ZHJhdyAgOiAtPlxuXHRtb3VzZVByZXNzZWQgOiAobXgsbXkpIC0+XG5hcHAgPSBuZXcgVGV0cmlzXG5cIlwiXCJcblx0YTpcIlwiXCJcbmNsYXNzIFRldHJpcyBleHRlbmRzIEFwcGxpY2F0aW9uXG5cdHJlc2V0IDogLT5cblx0XHRzdXBlclxuXHRcdEBidXR0b25zID0gW1sxNDAsMTA1LCctOTAnXSxbMTgwLDEwNSwnKzkwJ10sWzE2MCwxMzAsJ2RuJ10sWzE0MCwxNTUsJ2x0J10sWzE4MCwxNTUsJ3J0J10sWzE2MCwxODAsJ3NwJ10sWzE2MCw1MCwwXV1cblx0XHRAc2VlZCA9IDBcblx0XHRAYXJlbmEgPSAobmV3IEFycmF5KDEyKS5maWxsKDApIGZvciBpIGluIHJhbmdlIDIwKVxuXHRcdEB4PTBcblx0XHRAeT0wXG5cdFx0QG1hdHJpeCA9IG51bGxcblx0XHRAc2NvcmUgPSAwXG5cdFx0QHBsYXllclJlc2V0KClcblx0ZHJhdyA6IC0+XG5cdFx0YmcgMFxuXHRcdGZjIDAuNVxuXHRcdHJlY3QgMCwwLDEyMCwyMDBcblx0XHRzYyAwXG5cdFx0QGRyYXdNYXRyaXggQGFyZW5hLCAwLDBcblx0XHRAZHJhd01hdHJpeCBAbWF0cml4LCBAeCxAeVxuXHRcdEBhcmVuYVN3ZWVwKClcblx0XHR0ZXh0U2l6ZSAyMFxuXHRcdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXG5cdFx0QGJ1dHRvbnNbNl1bMl0gPSBAc2NvcmVcblx0XHRmb3IgW3gseSx0eHRdLGluZGV4IGluIEBidXR0b25zXG5cdFx0XHRmYyAwLjVcblx0XHRcdGlmIGluZGV4IDwgNiB0aGVuIGNpcmNsZSB4LHksMTVcblx0XHRcdGZjIDEsMSwwXG5cdFx0XHR0ZXh0IHR4dCx4LHlcblx0cmFuZGludCA6IChuKSAtPiBpbnQgbiAqIGZyYWN0aW9uIDEwMDAwICogTWF0aC5zaW4gQHNlZWQrK1xuXHRtb3VzZVByZXNzZWQgOiAobXgsbXkpIC0+XG5cdFx0Zm9yIFt4LHksdHh0XSxpbmRleCBpbiBAYnV0dG9uc1xuXHRcdFx0aWYgZGlzdChteCxteSx4LHkpIDwgMTVcblx0XHRcdFx0aWYgaW5kZXg9PTAgdGhlbiBAcGxheWVyUm90YXRlIC0xICMgLTkwXG5cdFx0XHRcdGlmIGluZGV4PT0xIHRoZW4gQHBsYXllclJvdGF0ZSAxICAjICs5MFxuXHRcdFx0XHRpZiBpbmRleD09MiB0aGVuIEBwbGF5ZXJEb3duKCkgICAgIyBET1dOXG5cdFx0XHRcdGlmIGluZGV4PT0zIHRoZW4gQHBsYXllck1vdmUgLTEgICAjIExFRlRcblx0XHRcdFx0aWYgaW5kZXg9PTQgdGhlbiBAcGxheWVyTW92ZSAxICAgICMgUklHSFRcblx0XHRcdFx0aWYgaW5kZXg9PTUgdGhlbiBAcGxheWVyRHJvcCgpICAgICMgU1BBQ0Vcblx0YXJlbmFTd2VlcCA6IC0+XG5cdFx0Zm9yIGkgaW4gcmFuZ2UgQGFyZW5hLmxlbmd0aFxuXHRcdFx0eSA9IDE5LWlcblx0XHRcdHJhZCA9IEBhcmVuYVt5XVxuXHRcdFx0aWYgbm90IF8uY29udGFpbnMgcmFkLCAwXG5cdFx0XHRcdHJvdyA9IEBhcmVuYS5zcGxpY2UoeSwgMSlbMF0uZmlsbCAwXG5cdFx0XHRcdEBhcmVuYS51bnNoaWZ0IHJvd1xuXHRcdFx0XHRAc2NvcmUrK1xuXHRwbGF5ZXJSb3RhdGUgOiAoZGlyKSAtPlxuXHRcdHhwb3MgPSBAeFxuXHRcdG9mZnNldCA9IDFcblx0XHRAcm90ZXJhIEBtYXRyaXgsIGRpclxuXHRcdHdoaWxlIEBjb2xsaWRlKClcblx0XHRcdEB4ICs9IG9mZnNldFxuXHRcdFx0b2Zmc2V0ID0gLShvZmZzZXQgKyAob2Zmc2V0ID4gMCA/IDEgOiAtMSkpXG5cdFx0XHRpZiBvZmZzZXQgPiBAbWF0cml4WzBdLmxlbmd0aFxuXHRcdFx0XHRAcm90ZXJhIEBtYXRyaXgsIC1kaXJcblx0XHRcdFx0QHggPSB4cG9zXG5cdFx0XHRcdHJldHVyblxuXHRwbGF5ZXJSZXNldCA6IC0+XG5cdFx0cGllY2VzID0gJ1RKTE9TWkknXG5cdFx0QG1hdHJpeCA9IEBjcmVhdGVQaWVjZSBwaWVjZXNbQHJhbmRpbnQgcGllY2VzLmxlbmd0aF1cblx0XHRAeSA9IDBcblx0XHRAeCA9IChAYXJlbmFbMF0ubGVuZ3RoIC8gMiB8IDApIC0gKEBtYXRyaXhbMF0ubGVuZ3RoIC8gMiB8IDApXG5cdFx0aWYgQGNvbGxpZGUoKVxuXHRcdFx0cm93LmZpbGwoMCkgZm9yIHJvdyBpbiBAYXJlbmFcblx0XHRcdEBzY29yZSA9IDBcblx0cGxheWVyRG93biA6IC0+XG5cdFx0QHkrK1xuXHRcdGlmIEBjb2xsaWRlKClcblx0XHRcdEB5LS1cblx0XHRcdEBtZXJnZSgpXG5cdFx0XHRAcGxheWVyUmVzZXQoKVxuXHRcdFx0QGFyZW5hU3dlZXAoKVxuXHRwbGF5ZXJEcm9wIDogLT5cblx0XHR3aGlsZSBub3QgQGNvbGxpZGUoKVxuXHRcdFx0QHkrK1xuXHRcdEB5LS1cblx0XHRAbWVyZ2UoKVxuXHRcdEBwbGF5ZXJSZXNldCgpXG5cdFx0QGFyZW5hU3dlZXAoKVxuXHRwbGF5ZXJNb3ZlIDogKG9mZnNldCkgLT5cblx0XHRAeCArPSBvZmZzZXRcblx0XHRpZiBAY29sbGlkZSgpIHRoZW4gQHggLT0gb2Zmc2V0XG5cdG1lcmdlIDogLT5cblx0XHRmb3Igcm93LHkgaW4gQG1hdHJpeFxuXHRcdFx0Zm9yIHZhbHVlLHggaW4gcm93XG5cdFx0XHRcdGlmIHZhbHVlICE9IDAgdGhlbiBAYXJlbmFbeSArIEB5XVt4ICsgQHhdID0gdmFsdWVcblx0cm90ZXJhIDogKG1hdHJpeCwgZGlyKSAtPlxuXHRcdGZvciB5IGluIHJhbmdlIG1hdHJpeC5sZW5ndGhcblx0XHRcdGZvciB4IGluIHJhbmdlIHlcblx0XHRcdFx0W21hdHJpeFt4XVt5XSwgbWF0cml4W3ldW3hdXSA9IFttYXRyaXhbeV1beF0sbWF0cml4W3hdW3ldXVxuXHRcdGlmIGRpciA+IDBcblx0XHRcdHJvdy5yZXZlcnNlKCkgZm9yIHJvdyBpbiBtYXRyaXhcblx0XHRlbHNlXG5cdFx0XHRtYXRyaXgucmV2ZXJzZSgpXG5cdGNvbGxpZGUgOiAtPlxuXHRcdG0gPSBAbWF0cml4XG5cdFx0Zm9yIHkgaW4gcmFuZ2UgbS5sZW5ndGhcblx0XHRcdGZvciB4IGluIHJhbmdlIG1beV0ubGVuZ3RoXG5cdFx0XHRcdGlmIChtW3ldW3hdICE9IDAgYW5kIChAYXJlbmFbeSArIEB5XSBhbmQgQGFyZW5hW3kgKyBAeV1beCArIEB4XSkgIT0gMCkgdGhlbiByZXR1cm4gdHJ1ZVxuXHRcdGZhbHNlXG5cdGNyZWF0ZVBpZWNlIDogKHR5cGUpIC0+XG5cdFx0aWYgdHlwZSA9PSAnSScgdGhlbiBbWzAsIDEsIDAsIDBdLFx0WzAsIDEsIDAsIDBdLFx0WzAsIDEsIDAsIDBdLFx0WzAsIDEsIDAsIDBdLF1cblx0XHRlbHNlIGlmIHR5cGUgPT0gJ0wnIHRoZW4gW1swLCAyLCAwXSxbMCwgMiwgMF0sWzAsIDIsIDJdLF1cblx0XHRlbHNlIGlmIHR5cGUgPT0gJ0onIHRoZW4gW1swLCAzLCAwXSxbMCwgMywgMF0sWzMsIDMsIDBdLF1cblx0XHRlbHNlIGlmIHR5cGUgPT0gJ08nIHRoZW4gW1s0LCA0XSxbNCwgNF0sXVxuXHRcdGVsc2UgaWYgdHlwZSA9PSAnWicgdGhlbiBbWzUsIDUsIDBdLFswLCA1LCA1XSxbMCwgMCwgMF1dXG5cdFx0ZWxzZSBpZiB0eXBlID09ICdTJyB0aGVuIFtbMCwgNiwgNl0sWzYsIDYsIDBdLFswLCAwLCAwXV1cblx0XHRlbHNlIGlmIHR5cGUgPT0gJ1QnIHRoZW4gW1swLCA3LCAwXSxbNywgNywgN10sWzAsIDAsIDBdXVxuXHRkcmF3TWF0cml4IDogKG1hdHJpeCwgeG9mZix5b2ZmKSAtPlxuXHRcdGZvciByb3cseSBpbiBtYXRyaXhcblx0XHRcdGZvciB2YWx1ZSx4IGluIHJvd1xuXHRcdFx0XHRpZiB2YWx1ZSAhPSAwXG5cdFx0XHRcdFx0ZmNjIHZhbHVlXG5cdFx0XHRcdFx0cmVjdCAxMCooeCArIHhvZmYpLCAxMCooeSArIHlvZmYpLCAxMCwxMFxuXG5hcHAgPSBuZXcgVGV0cmlzIFwiYVwiXG5cIlwiXCJcblx0Yzpcblx0XHRhcHA6IFwicmVzZXQoKVwiXG5cdGU6XG5cdFx0XCJXaWtpcGVkaWFcIiA6IFwiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvVGV0cmlzXCJcblx0XHRcIk1ldGggTWV0aCBNZXRob2RcIiA6IFwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1IMmFXNVY0NmtoQVwiXG5cbklEX1RleHRBID1cblx0djonMjAxNy0wNC0yOSdcblx0azonZmMgdGV4dCdcblx0YjpcIiMgTE9DOjQgXFxuXCJcblx0YTpcIlwiXCJcbmZjIDEsMSwwXG5zYygpXG50ZXh0U2l6ZSAzMlxudGV4dCAnQ29mZmVlc2NyaXB0JywwLDEwMFxuXCJcIlwiXG5cbklEX1RleHRCID1cblx0djonMjAxNy0wNC0yOSdcblx0azonYmcgZmMgc2Mgc3cgdGV4dCdcblx0YjpcIiMgTE9DOjUgXFxuXCJcblx0YTpcIlwiXCJcbmZjIDEsMSwwXG5zYygpXG50ZXh0U2l6ZSAzMlxudGV4dEFsaWduIENFTlRFUixDRU5URVJcbnRleHQgJ0NvZmZlZXNjcmlwdCcsMTAwLDEwMFxuXCJcIlwiXG5cbklEX1RleHRDID1cblx0djonMjAxNy0wNC0yOSdcblx0azonZmMgcmQgdGV4dCB0cmFuc2xhdGUnXG5cdGI6XCIjIExPQzo2IFxcblwiXG5cdGE6XCJcIlwiXG5mYyAxLDEsMFxudGV4dFNpemUgMzJcbnRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXG50cmFuc2xhdGUgMTAwLDEwMFxucmQgOTBcbnRleHQgJ0NvZmZlZXNjcmlwdCcsMCwwXG5cIlwiXCJcblxuSURfVGV4dEQgPVxuXHR2OicyMDE3LTA0LTI5J1xuXHRrOidmYyByZCB0ZXh0IHRyYW5zbGF0ZSdcblx0YjpcIiMgTE9DOjYgXFxuXCJcblx0YTpcIlwiXCJcbmZjIDEsMSwwXG50ZXh0U2l6ZSAzMlxudGV4dEFsaWduIENFTlRFUixDRU5URVJcbnRyYW5zbGF0ZSAxMDAsMTAwXG5yZCAxODBcbnRleHQgJ0NvZmZlZXNjcmlwdCcsMCwwXG5cIlwiXCJcblxuSURfVHJpYW5nbGUgPVxuXHR2OicyMDE3LTA0LTI5J1xuXHRrOidmYyB0cmlhbmdsZSdcblx0YjpcIiMgTE9DOjIgXFxuXCJcblx0YTpcIlwiXCJcbmZjIDFcbnRyaWFuZ2xlIDIwLDQwLCAxNjAsMTAwLCAxMDAsMTQwXG5cIlwiXCJcblxuSURfVHdvQXJjcyA9XG5cdHY6JzIwMTctMDQtMjknXG5cdGs6J2ZjIHNjIHN3IGFyYyByYWRpYW5zIHN0cm9rZUNhcCdcblx0YjpcIiMgTE9DOjcgXFxuXCJcblx0YTpcIlwiXCJcbmZjKClcbnNjIDEsMCwwXG5zdyAyMFxuYXJjIDEwMCw3MCwgMTAwLDEwMCwgcmFkaWFucygtOTApLHJhZGlhbnMoOTApXG5zYyAxLDEsMFxuc3Ryb2tlQ2FwIFNRVUFSRVxuYXJjIDEwMCwxMjAsIDEwMCwxMDAsIHJhZGlhbnMoOTApLHJhZGlhbnMoLTkwKVxuXCJcIlwiXG5cbklEX1R3b0RpY2VIaXN0b2dyYW0gPVxuXHR2OicyMDE3LTA0LTI5J1xuXHRrOidiZyBmYyBzYyByYW5nZSBpbnQgcmFuZG9tIHRleHQgaWYgZm9yIG9wZXJhdG9ycyByZWN0IFtdJ1xuXHRiOlwiXCJcIlxuIyBMT0M6MjJcbiMgT0JTOiBQw6UgZ3J1bmQgYXYgcmFuZG9tIGJsaXIgYml0bWFwcGFybmEgaW50ZSBsaWthZGFuYVxuXCJcIlwiXG5cdGE6XCJcIlwiXG5jb3VudHMgPSBBcnJheSgxMSkuZmlsbCAwXG5kaWNlID0gLT4gaW50IDYgKiByYW5kb20oKVxudGV4dEFsaWduIENFTlRFUixDRU5URVJcbmZvciBpIGluIHJhbmdlIDEwMDBcblx0Y291bnRzW2RpY2UoKSArIGRpY2UoKV0rK1xuaCA9IGludCAyMDAvMTFcbmJnIDBcbmZvciBjb3VudCxpIGluIGNvdW50c1xuXHR5ID0gaCppXG5cdGZjIDEsMSwwLDAuNVxuXHRzYyAxLDEsMFxuXHRyZWN0IDAseSxjb3VudCxoLTNcblx0ZmMgMSwxLDBcblx0c2MoKVxuXHR0ZXh0QWxpZ24gTEVGVCxDRU5URVJcblx0dGV4dCBpKzIsIDUseStoLzJcblx0aWYgY291bnQgPCAxMDBcblx0XHR0ZXh0QWxpZ24gTEVGVCxDRU5URVJcblx0XHR0ZXh0IGNvdW50LCBjb3VudCs1LHkraC8yXG5cdGVsc2Vcblx0XHR0ZXh0QWxpZ24gUklHSFQsQ0VOVEVSXG5cdFx0dGV4dCBjb3VudCwgY291bnQtNSx5K2gvMlxuXCJcIlwiXG5cdGU6XG5cdFx0QW5pbWVyaW5nIDogXCJodHRwczovL3d3dy5vcGVucHJvY2Vzc2luZy5vcmcvc2tldGNoLzEyNDIzNlwiXG5cbklEX1R3b0Rpc2NzQSA9XG5cdHY6JzIwMTctMDQtMjknXG5cdGs6J2NpcmNsZSBmYydcblx0YjpcIiMgTE9DOjQgXFxuXCJcblx0YTpcIlwiXCJcbmZjIDEsMCwwXG5jaXJjbGUgODAsMTAwLDQwXG5mYyAwLDEsMFxuY2lyY2xlIDEwMCwxMjAsNTBcblwiXCJcIlxuXG5JRF9Ud29EaXNjc0IgPVxuXHR2OicyMDE3LTA0LTI5J1xuXHRrOidjaXJjbGUgZmMnXG5cdGI6XCIjIExPQzo0IFxcblwiXG5cdGE6XCJcIlwiXG5mYyAxLDAsMFxuY2lyY2xlIDgwLDEwMCw0MFxuZmMgMCwxLDAsIDAuNVxuY2lyY2xlIDEyMCwxMDAsNTBcblwiXCJcIlxuXG4iXX0=
//# sourceURL=C:\github\p5Dojo\coffee\data\T.coffee