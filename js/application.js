// Generated by CoffeeScript 2.0.3
var Application,
  indexOf = [].indexOf;

Application = class Application {
  constructor(_name1 = 'b') {
    var _name, classes, i, key, klass, len, obj, ref, ref1, value;
    this._name = _name1;
    classes = {};
    ref = this.classes();
    for (i = 0, len = ref.length; i < len; i++) {
      klass = ref[i];
      classes[klass.name] = klass;
    }
    _name = exercise + "/" + this._name;
    obj = localStorage.getItem(_name);
    if (obj) {
      ref1 = JSON.parse(obj);
      for (key in ref1) {
        value = ref1[key];
        this[key] = this.deserialize(value, classes);
      }
    }
  }

  classes() {
    return [];
  }

  deserialize(obj, classes) {
    var item, key, o, res, value;
    if (_.isObject(obj)) {
      if (_.isArray(obj)) {
        return (function() {
          var i, len, results;
          results = [];
          // array
          for (i = 0, len = obj.length; i < len; i++) {
            item = obj[i];
            results.push(this.deserialize(item, classes));
          }
          return results;
        }).call(this);
      }
      if (indexOf.call(_.keys(obj), '_type') >= 0) {
        if (classes[obj["_type"]] === void 0) {
          print("Please define classes : -> [" + obj["_type"] + "] in your Application");
          return;
        }
        o = _.create(classes[obj["_type"]].prototype, {});
        for (key in obj) {
          value = obj[key];
          if (key !== '_type') {
            o[key] = this.deserialize(value, classes);
          }
        }
        return o; // dict
      } else {
        res = {};
        for (key in obj) {
          value = obj[key];
          res[key] = this.deserialize(value, classes);
        }
        return res;
      }
    }
    return obj; // catches Number, String, Boolean, null etc
  }

  draw() {}

  mark(obj = this) {
    var i, item, len, ref, results, value;
    //if _.isNull(obj) then return
    if (_.isArray(obj)) {
      return (function() {
        var i, len, results;
        results = [];
        // array
        for (i = 0, len = obj.length; i < len; i++) {
          item = obj[i];
          results.push(this.mark(item));
        }
        return results;
      }).call(this);
    }
    if (_.isObject(obj)) {
      if (obj.constructor.name !== 'Object') {
        obj['_type'] = obj.constructor.name;
      }
      ref = _.values(obj);
      // annars kommer metoderna med.
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        value = ref[i];
        if (value != null) {
          results.push(this.mark(value));
        } else {
          results.push(void 0);
        }
      }
      return results;
    }
  }

  mousePressed(mx, my) {} // print "mousePressed", mx, mx

  store() {
    var _name, obj;
    _name = exercise + "/" + this._name;
    this.mark();
    obj = JSON.stringify(this);
    localStorage.setItem(_name, obj);
    return fillTable(exercise + "/a", exercise + "/b");
  }

  readText() {
    return $('#input').val();
  }

  readInt() {
    return parseInt(this.readText());
  }

  readFloat() {
    return parseFloat(this.readText());
  }

  reset() {
    var i, key, len, ref, results;
    ref = _.keys(this);
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      key = ref[i];
      if (key !== "_name") {
        results.push(delete this[key]);
      } else {
        results.push(void 0);
      }
    }
    return results;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbGljYXRpb24uanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcYXBwbGljYXRpb24uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLFdBQUE7RUFBQTs7QUFBTSxjQUFOLE1BQUEsWUFBQTtFQUVDLFdBQWMsVUFBUSxHQUFSLENBQUE7QUFDYixRQUFBLEtBQUEsRUFBQSxPQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxLQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBO0lBRGMsSUFBQyxDQUFBO0lBQ2YsT0FBQSxHQUFVLENBQUE7QUFDVjtJQUFBLEtBQUEscUNBQUE7O01BQUEsT0FBUSxDQUFBLEtBQUssQ0FBQyxJQUFOLENBQVIsR0FBc0I7SUFBdEI7SUFFQSxLQUFBLEdBQVEsUUFBQSxHQUFXLEdBQVgsR0FBaUIsSUFBQyxDQUFBO0lBQzFCLEdBQUEsR0FBTSxZQUFZLENBQUMsT0FBYixDQUFxQixLQUFyQjtJQUNOLElBQUcsR0FBSDtBQUNDO01BQUEsS0FBQSxXQUFBOztRQUNDLElBQUUsQ0FBQSxHQUFBLENBQUYsR0FBUyxJQUFDLENBQUEsV0FBRCxDQUFhLEtBQWIsRUFBbUIsT0FBbkI7TUFEVixDQUREOztFQU5hOztFQVVkLE9BQVUsQ0FBQSxDQUFBO1dBQUc7RUFBSDs7RUFFVixXQUFjLENBQUMsR0FBRCxFQUFLLE9BQUwsQ0FBQTtBQUNiLFFBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBO0lBQUEsSUFBRyxDQUFDLENBQUMsUUFBRixDQUFXLEdBQVgsQ0FBSDtNQUNDLElBQUcsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxHQUFWLENBQUg7QUFBdUI7O0FBQVE7O1VBQUEsS0FBQSxxQ0FBQTs7eUJBQUEsSUFBQyxDQUFBLFdBQUQsQ0FBYSxJQUFiLEVBQWtCLE9BQWxCO1VBQUEsQ0FBQTs7c0JBQS9COztNQUNBLElBQUcsYUFBVyxDQUFDLENBQUMsSUFBRixDQUFPLEdBQVAsQ0FBWCxFQUFBLE9BQUEsTUFBSDtRQUNDLElBQUcsT0FBUSxDQUFBLEdBQUksQ0FBQSxPQUFBLENBQUosQ0FBUixLQUF5QixNQUE1QjtVQUNDLEtBQUEsQ0FBTSw4QkFBQSxHQUFpQyxHQUFJLENBQUEsT0FBQSxDQUFyQyxHQUFnRCx1QkFBdEQ7QUFDQSxpQkFGRDs7UUFHQSxDQUFBLEdBQUksQ0FBQyxDQUFDLE1BQUYsQ0FBUyxPQUFRLENBQUEsR0FBSSxDQUFBLE9BQUEsQ0FBSixDQUFhLENBQUMsU0FBL0IsRUFBMEMsQ0FBQSxDQUExQztRQUNKLEtBQUEsVUFBQTs7VUFDQyxJQUF3QyxHQUFBLEtBQU8sT0FBL0M7WUFBQSxDQUFFLENBQUEsR0FBQSxDQUFGLEdBQVMsSUFBQyxDQUFBLFdBQUQsQ0FBYSxLQUFiLEVBQW1CLE9BQW5CLEVBQVQ7O1FBREQ7QUFFQSxlQUFPLEVBUFI7T0FBQSxNQUFBO1FBU0MsR0FBQSxHQUFNLENBQUE7UUFDTixLQUFBLFVBQUE7O1VBQ0MsR0FBSSxDQUFBLEdBQUEsQ0FBSixHQUFXLElBQUMsQ0FBQSxXQUFELENBQWEsS0FBYixFQUFtQixPQUFuQjtRQURaO0FBRUEsZUFBTyxJQVpSO09BRkQ7O0FBZUEsV0FBTyxJQWhCTTtFQUFBOztFQWtCZCxJQUFPLENBQUEsQ0FBQSxFQUFBOztFQUVQLElBQU8sQ0FBQyxNQUFJLElBQUwsQ0FBQTtBQUVOLFFBQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxLQUFBOztJQUFBLElBQUcsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxHQUFWLENBQUg7QUFBdUI7O0FBQVE7O1FBQUEsS0FBQSxxQ0FBQTs7dUJBQUEsSUFBQyxDQUFBLElBQUQsQ0FBTSxJQUFOO1FBQUEsQ0FBQTs7b0JBQS9COztJQUNBLElBQUcsQ0FBQyxDQUFDLFFBQUYsQ0FBVyxHQUFYLENBQUg7TUFDQyxJQUF1QyxHQUFHLENBQUMsV0FBVyxDQUFDLElBQWhCLEtBQXdCLFFBQS9EO1FBQUEsR0FBSSxDQUFBLE9BQUEsQ0FBSixHQUFlLEdBQUcsQ0FBQyxXQUFXLENBQUMsS0FBL0I7O0FBQ0E7O0FBQUE7TUFBQSxLQUFBLHFDQUFBOztRQUNDLElBQUcsYUFBSDt1QkFBZSxJQUFDLENBQUEsSUFBRCxDQUFNLEtBQU4sR0FBZjtTQUFBLE1BQUE7K0JBQUE7O01BREQsQ0FBQTtxQkFGRDs7RUFITTs7RUFRUCxZQUFlLENBQUMsRUFBRCxFQUFJLEVBQUosQ0FBQSxFQUFBLENBeENmOztFQTBDQSxLQUFRLENBQUEsQ0FBQTtBQUNQLFFBQUEsS0FBQSxFQUFBO0lBQUEsS0FBQSxHQUFRLFFBQUEsR0FBVyxHQUFYLEdBQWlCLElBQUMsQ0FBQTtJQUMxQixJQUFDLENBQUEsSUFBRCxDQUFBO0lBQ0EsR0FBQSxHQUFNLElBQUksQ0FBQyxTQUFMLENBQWUsSUFBZjtJQUNOLFlBQVksQ0FBQyxPQUFiLENBQXFCLEtBQXJCLEVBQTRCLEdBQTVCO1dBQ0EsU0FBQSxDQUFVLFFBQUEsR0FBVyxJQUFyQixFQUEyQixRQUFBLEdBQVcsSUFBdEM7RUFMTzs7RUFPUixRQUFXLENBQUEsQ0FBQTtXQUFHLENBQUEsQ0FBRSxRQUFGLENBQVcsQ0FBQyxHQUFaLENBQUE7RUFBSDs7RUFDWCxPQUFVLENBQUEsQ0FBQTtXQUFHLFFBQUEsQ0FBUyxJQUFDLENBQUEsUUFBRCxDQUFBLENBQVQ7RUFBSDs7RUFDVixTQUFZLENBQUEsQ0FBQTtXQUFHLFVBQUEsQ0FBVyxJQUFDLENBQUEsUUFBRCxDQUFBLENBQVg7RUFBSDs7RUFDWixLQUFTLENBQUEsQ0FBQTtBQUNSLFFBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBO0FBQUE7QUFBQTtJQUFBLEtBQUEscUNBQUE7O01BQ0MsSUFBRyxHQUFBLEtBQU8sT0FBVjtxQkFBdUIsT0FBTyxJQUFFLENBQUEsR0FBQSxHQUFoQztPQUFBLE1BQUE7NkJBQUE7O0lBREQsQ0FBQTs7RUFEUTs7QUF0RFYiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBBcHBsaWNhdGlvblxuXG5cdGNvbnN0cnVjdG9yIDogKEBfbmFtZT0nYicpIC0+XG5cdFx0Y2xhc3NlcyA9IHt9XG5cdFx0Y2xhc3Nlc1trbGFzcy5uYW1lXSA9IGtsYXNzIGZvciBrbGFzcyBpbiBAY2xhc3NlcygpXG5cblx0XHRfbmFtZSA9IGV4ZXJjaXNlICsgXCIvXCIgKyBAX25hbWVcblx0XHRvYmogPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSBfbmFtZVxuXHRcdGlmIG9ialxuXHRcdFx0Zm9yIGtleSx2YWx1ZSBvZiBKU09OLnBhcnNlIG9ialxuXHRcdFx0XHRAW2tleV0gPSBAZGVzZXJpYWxpemUgdmFsdWUsY2xhc3Nlc1xuXG5cdGNsYXNzZXMgOiAtPiBbXVxuXG5cdGRlc2VyaWFsaXplIDogKG9iaixjbGFzc2VzKSAtPlxuXHRcdGlmIF8uaXNPYmplY3Qob2JqKVxuXHRcdFx0aWYgXy5pc0FycmF5KG9iaikgdGhlbiByZXR1cm4gKEBkZXNlcmlhbGl6ZShpdGVtLGNsYXNzZXMpIGZvciBpdGVtIGluIG9iaikgIyBhcnJheVxuXHRcdFx0aWYgJ190eXBlJyBpbiBfLmtleXMob2JqKVxuXHRcdFx0XHRpZiBjbGFzc2VzW29ialtcIl90eXBlXCJdXSA9PSB1bmRlZmluZWRcblx0XHRcdFx0XHRwcmludCBcIlBsZWFzZSBkZWZpbmUgY2xhc3NlcyA6IC0+IFtcIiArIG9ialtcIl90eXBlXCJdICsgXCJdIGluIHlvdXIgQXBwbGljYXRpb25cIlxuXHRcdFx0XHRcdHJldHVyblxuXHRcdFx0XHRvID0gXy5jcmVhdGUgY2xhc3Nlc1tvYmpbXCJfdHlwZVwiXV0ucHJvdG90eXBlLCB7fVxuXHRcdFx0XHRmb3Iga2V5LHZhbHVlIG9mIG9ialxuXHRcdFx0XHRcdG9ba2V5XSA9IEBkZXNlcmlhbGl6ZSh2YWx1ZSxjbGFzc2VzKSBpZiBrZXkgIT0gJ190eXBlJ1xuXHRcdFx0XHRyZXR1cm4gb1xuXHRcdFx0ZWxzZSAjIGRpY3Rcblx0XHRcdFx0cmVzID0ge31cblx0XHRcdFx0Zm9yIGtleSx2YWx1ZSBvZiBvYmpcblx0XHRcdFx0XHRyZXNba2V5XSA9IEBkZXNlcmlhbGl6ZSh2YWx1ZSxjbGFzc2VzKVxuXHRcdFx0XHRyZXR1cm4gcmVzXG5cdFx0cmV0dXJuIG9iaiAjIGNhdGNoZXMgTnVtYmVyLCBTdHJpbmcsIEJvb2xlYW4sIG51bGwgZXRjXG5cblx0ZHJhdyA6IC0+XG5cblx0bWFyayA6IChvYmo9QCkgLT5cblx0XHQjaWYgXy5pc051bGwob2JqKSB0aGVuIHJldHVyblxuXHRcdGlmIF8uaXNBcnJheShvYmopIHRoZW4gcmV0dXJuXHQoQG1hcmsoaXRlbSkgZm9yIGl0ZW0gaW4gb2JqKSAjIGFycmF5XG5cdFx0aWYgXy5pc09iamVjdChvYmopXG5cdFx0XHRvYmpbJ190eXBlJ10gPSBvYmouY29uc3RydWN0b3IubmFtZSBpZiBvYmouY29uc3RydWN0b3IubmFtZSAhPSAnT2JqZWN0J1xuXHRcdFx0Zm9yIHZhbHVlIGluIF8udmFsdWVzIG9iaiAjIGFubmFycyBrb21tZXIgbWV0b2Rlcm5hIG1lZC5cblx0XHRcdFx0aWYgdmFsdWU/IHRoZW4gQG1hcmsgdmFsdWVcblxuXHRtb3VzZVByZXNzZWQgOiAobXgsbXkpIC0+ICMgcHJpbnQgXCJtb3VzZVByZXNzZWRcIiwgbXgsIG14XG5cblx0c3RvcmUgOiAtPlxuXHRcdF9uYW1lID0gZXhlcmNpc2UgKyBcIi9cIiArIEBfbmFtZVxuXHRcdEBtYXJrKClcblx0XHRvYmogPSBKU09OLnN0cmluZ2lmeSBAXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0gX25hbWUsIG9ialxuXHRcdGZpbGxUYWJsZSBleGVyY2lzZSArIFwiL2FcIiwgZXhlcmNpc2UgKyBcIi9iXCJcblxuXHRyZWFkVGV4dCA6IC0+ICQoJyNpbnB1dCcpLnZhbCgpXG5cdHJlYWRJbnQgOiAtPiBwYXJzZUludCBAcmVhZFRleHQoKVxuXHRyZWFkRmxvYXQgOiAtPiBwYXJzZUZsb2F0IEByZWFkVGV4dCgpXG5cdHJlc2V0IDogIC0+XG5cdFx0Zm9yIGtleSBpbiBfLmtleXMgQFxuXHRcdFx0aWYga2V5ICE9IFwiX25hbWVcIiB0aGVuIGRlbGV0ZSBAW2tleV1cbiJdfQ==
//# sourceURL=C:\github\p5Dojo\coffee\application.coffee