// Generated by CoffeeScript 2.4.1
var Application,
  indexOf = [].indexOf;

Application = class Application {
  constructor(_name1 = 'b') {
    var _name, classes, i, key, klass, len, obj, ref, ref1, value;
    this._name = _name1;
    classes = {};
    ref = this.classes();
    for (i = 0, len = ref.length; i < len; i++) {
      klass = ref[i];
      classes[klass.name] = klass;
    }
    _name = meny.exercise + "/" + this._name;
    obj = localStorage.getItem(_name);
    if (obj) {
      ref1 = JSON.parse(obj);
      for (key in ref1) {
        value = ref1[key];
        this[key] = this.deserialize(value, classes);
      }
    }
  }

  classes() {
    return [];
  }

  deserialize(obj, classes) {
    var item, key, o, res, value;
    if (_.isObject(obj)) {
      if (_.isArray(obj)) {
        return (function() {
          var i, len, results;
// array
          results = [];
          for (i = 0, len = obj.length; i < len; i++) {
            item = obj[i];
            results.push(this.deserialize(item, classes));
          }
          return results;
        }).call(this);
      }
      if (indexOf.call(_.keys(obj), '_type') >= 0) {
        if (classes[obj["_type"]] === void 0) {
          print("Please define classes : -> [" + obj["_type"] + "] in your Application");
          return;
        }
        o = _.create(classes[obj["_type"]].prototype, {});
        for (key in obj) {
          value = obj[key];
          if (key !== '_type') {
            o[key] = this.deserialize(value, classes);
          }
        }
        return o; // dict
      } else {
        res = {};
        for (key in obj) {
          value = obj[key];
          res[key] = this.deserialize(value, classes);
        }
        return res;
      }
    }
    return obj; // catches Number, String, Boolean, null etc
  }

  draw() {}

  mousePressed(mx, my) {}

  mark(obj = this) {
    var i, item, len, ref, results, value;
    if (_.isArray(obj)) {
      return (function() {
        var i, len, results;
// array
        results = [];
        for (i = 0, len = obj.length; i < len; i++) {
          item = obj[i];
          results.push(this.mark(item));
        }
        return results;
      }).call(this);
    }
    if (_.isObject(obj)) {
      if (obj.constructor.name !== 'Object') {
        obj['_type'] = obj.constructor.name;
      }
      ref = _.values(obj);
      // annars kommer metoderna med.
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        value = ref[i];
        if (value != null) {
          results.push(this.mark(value));
        } else {
          results.push(void 0);
        }
      }
      return results;
    }
  }

  store() {
    var _name, obj;
    _name = meny.exercise + "/" + this._name;
    this.mark();
    obj = JSON.stringify(this);
    localStorage.setItem(_name, obj);
    return fillTable(meny.exercise + "/a", meny.exercise + "/b");
  }

  readText() {
    return $('#input').val();
  }

  readInt() {
    return parseInt(this.readText());
  }

  readFloat() {
    return parseFloat(this.readText());
  }

  reset() {
    var i, key, len, ref, results;
    ref = _.keys(this);
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      key = ref[i];
      if (key !== "_name") {
        results.push(delete this[key]);
      } else {
        results.push(void 0);
      }
    }
    return results;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbGljYXRpb24uanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcYXBwbGljYXRpb24uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLFdBQUE7RUFBQTs7QUFBTSxjQUFOLE1BQUEsWUFBQTtFQUVDLFdBQWMsVUFBUSxHQUFSLENBQUE7QUFDYixRQUFBLEtBQUEsRUFBQSxPQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxLQUFBLEVBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBO0lBRGMsSUFBQyxDQUFBO0lBQ2YsT0FBQSxHQUFVLENBQUE7QUFDa0I7SUFBQSxLQUFBLHFDQUFBOztNQUE1QixPQUFRLENBQUEsS0FBSyxDQUFDLElBQU4sQ0FBUixHQUFzQjtJQUFNO0lBRTVCLEtBQUEsR0FBUSxJQUFJLENBQUMsUUFBTCxHQUFnQixHQUFoQixHQUFzQixJQUFDLENBQUE7SUFDL0IsR0FBQSxHQUFNLFlBQVksQ0FBQyxPQUFiLENBQXFCLEtBQXJCO0lBQ04sSUFBRyxHQUFIO0FBQ0M7TUFBQSxLQUFBLFdBQUE7O1FBQ0MsSUFBRSxDQUFBLEdBQUEsQ0FBRixHQUFTLElBQUMsQ0FBQSxXQUFELENBQWEsS0FBYixFQUFtQixPQUFuQjtNQURWLENBREQ7O0VBTmE7O0VBVWQsT0FBVSxDQUFBLENBQUE7V0FBRztFQUFIOztFQUVWLFdBQWMsQ0FBQyxHQUFELEVBQUssT0FBTCxDQUFBO0FBQ2IsUUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUE7SUFBQSxJQUFHLENBQUMsQ0FBQyxRQUFGLENBQVcsR0FBWCxDQUFIO01BQ0MsSUFBRyxDQUFDLENBQUMsT0FBRixDQUFVLEdBQVYsQ0FBSDtBQUF1Qjs7O0FBQW1DO1VBQUEsS0FBQSxxQ0FBQTs7eUJBQTNCLElBQUMsQ0FBQSxXQUFELENBQWEsSUFBYixFQUFrQixPQUFsQjtVQUEyQixDQUFBOztzQkFB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QTs7RUFEUTs7QUFyRFYiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBBcHBsaWNhdGlvblxuXG5cdGNvbnN0cnVjdG9yIDogKEBfbmFtZT0nYicpIC0+XG5cdFx0Y2xhc3NlcyA9IHt9XG5cdFx0Y2xhc3Nlc1trbGFzcy5uYW1lXSA9IGtsYXNzIGZvciBrbGFzcyBpbiBAY2xhc3NlcygpXG5cblx0XHRfbmFtZSA9IG1lbnkuZXhlcmNpc2UgKyBcIi9cIiArIEBfbmFtZVxuXHRcdG9iaiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtIF9uYW1lXG5cdFx0aWYgb2JqXG5cdFx0XHRmb3Iga2V5LHZhbHVlIG9mIEpTT04ucGFyc2Ugb2JqXG5cdFx0XHRcdEBba2V5XSA9IEBkZXNlcmlhbGl6ZSB2YWx1ZSxjbGFzc2VzXG5cblx0Y2xhc3NlcyA6IC0+IFtdXG5cblx0ZGVzZXJpYWxpemUgOiAob2JqLGNsYXNzZXMpIC0+XG5cdFx0aWYgXy5pc09iamVjdChvYmopXG5cdFx0XHRpZiBfLmlzQXJyYXkob2JqKSB0aGVuIHJldHVybiAoQGRlc2VyaWFsaXplKGl0ZW0sY2xhc3NlcykgZm9yIGl0ZW0gaW4gb2JqKSAjIGFycmF5XG5cdFx0XHRpZiAnX3R5cGUnIGluIF8ua2V5cyhvYmopXG5cdFx0XHRcdGlmIGNsYXNzZXNbb2JqW1wiX3R5cGVcIl1dID09IHVuZGVmaW5lZFxuXHRcdFx0XHRcdHByaW50IFwiUGxlYXNlIGRlZmluZSBjbGFzc2VzIDogLT4gW1wiICsgb2JqW1wiX3R5cGVcIl0gKyBcIl0gaW4geW91ciBBcHBsaWNhdGlvblwiXG5cdFx0XHRcdFx0cmV0dXJuXG5cdFx0XHRcdG8gPSBfLmNyZWF0ZSBjbGFzc2VzW29ialtcIl90eXBlXCJdXS5wcm90b3R5cGUsIHt9XG5cdFx0XHRcdGZvciBrZXksdmFsdWUgb2Ygb2JqXG5cdFx0XHRcdFx0b1trZXldID0gQGRlc2VyaWFsaXplKHZhbHVlLGNsYXNzZXMpIGlmIGtleSAhPSAnX3R5cGUnXG5cdFx0XHRcdHJldHVybiBvXG5cdFx0XHRlbHNlICMgZGljdFxuXHRcdFx0XHRyZXMgPSB7fVxuXHRcdFx0XHRmb3Iga2V5LHZhbHVlIG9mIG9ialxuXHRcdFx0XHRcdHJlc1trZXldID0gQGRlc2VyaWFsaXplKHZhbHVlLGNsYXNzZXMpXG5cdFx0XHRcdHJldHVybiByZXNcblx0XHRyZXR1cm4gb2JqICMgY2F0Y2hlcyBOdW1iZXIsIFN0cmluZywgQm9vbGVhbiwgbnVsbCBldGNcblxuXHRkcmF3IDogLT5cblx0bW91c2VQcmVzc2VkIDogKG14LG15KSAtPiBcblxuXHRtYXJrIDogKG9iaj1AKSAtPlxuXHRcdGlmIF8uaXNBcnJheShvYmopIHRoZW4gcmV0dXJuXHQoQG1hcmsoaXRlbSkgZm9yIGl0ZW0gaW4gb2JqKSAjIGFycmF5XG5cdFx0aWYgXy5pc09iamVjdChvYmopXG5cdFx0XHRvYmpbJ190eXBlJ10gPSBvYmouY29uc3RydWN0b3IubmFtZSBpZiBvYmouY29uc3RydWN0b3IubmFtZSAhPSAnT2JqZWN0J1xuXHRcdFx0Zm9yIHZhbHVlIGluIF8udmFsdWVzIG9iaiAjIGFubmFycyBrb21tZXIgbWV0b2Rlcm5hIG1lZC5cblx0XHRcdFx0aWYgdmFsdWU/IHRoZW4gQG1hcmsgdmFsdWVcblxuXG5cdHN0b3JlIDogLT5cblx0XHRfbmFtZSA9IG1lbnkuZXhlcmNpc2UgKyBcIi9cIiArIEBfbmFtZVxuXHRcdEBtYXJrKClcblx0XHRvYmogPSBKU09OLnN0cmluZ2lmeSBAXG5cdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0gX25hbWUsIG9ialxuXHRcdGZpbGxUYWJsZSBtZW55LmV4ZXJjaXNlICsgXCIvYVwiLCBtZW55LmV4ZXJjaXNlICsgXCIvYlwiXG5cblx0cmVhZFRleHQgOiAtPiAkKCcjaW5wdXQnKS52YWwoKVxuXHRyZWFkSW50IDogLT4gcGFyc2VJbnQgQHJlYWRUZXh0KClcblx0cmVhZEZsb2F0IDogLT4gcGFyc2VGbG9hdCBAcmVhZFRleHQoKVxuXHRyZXNldCA6ICAtPlxuXHRcdGZvciBrZXkgaW4gXy5rZXlzIEBcblx0XHRcdGlmIGtleSAhPSBcIl9uYW1lXCIgdGhlbiBkZWxldGUgQFtrZXldXG4iXX0=
//# sourceURL=c:\github\p5Dojo\coffee\application.coffee