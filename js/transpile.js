// Generated by CoffeeScript 1.11.1
var assert, clean, count, enclose, rtrim, spacesToTabs, tabcount, transpile;

assert = function(a, b) {
  if (b == null) {
    b = true;
  }
  if (!_.isEqual(a, b)) {
    return print(a + " != " + b);
  }
};

tabcount = function(s) {
  var i;
  i = 0;
  while (s[i] === '\t') {
    i += 1;
  }
  return i;
};

count = function(s, ch) {
  var arr;
  arr = s.split(ch);
  return arr.length - 1;
};

enclose = function(s) {
  var arr;
  if (count(s, '=') === 1) {
    return s;
  }
  arr = s.trim().split(' ');
  return arr[0] + ' (' + arr.slice(1).join(' ') + ')';
};

spacesToTabs = function(line) {
  if (line.indexOf('  ') === 0) {
    return '\t' + spacesToTabs(line.substring(2));
  }
  if (line.indexOf('\t') === 0) {
    return '\t' + spacesToTabs(line.substring(1));
  }
  if (line.indexOf(' \t') === 0) {
    return '\t' + spacesToTabs(line.substring(2));
  }
  return line;
};

assert(spacesToTabs('    '), '\t\t');

assert(spacesToTabs('\t  '), '\t\t');

assert(spacesToTabs('  \t'), '\t\t');

assert(spacesToTabs(' \t  '), '\t\t');

rtrim = function(str) {
  return str.replace(/\s\s*$/, '');
};

clean = function(s) {
  return s.split(' ').join("").split('\t').join("");
};

transpile = function(code) {
  var j, len, line, lines, tabs, temp;
  lines = code.split('\n');
  temp = [];
  for (j = 0, len = lines.length; j < len; j++) {
    line = lines[j];
    line = spacesToTabs(line);
    tabs = tabcount(line);
    if (clean(line).length > 0) {
      temp.push(line);
    }
  }
  code = temp.join('\n');
  return CoffeeScript.compile(code);
};
